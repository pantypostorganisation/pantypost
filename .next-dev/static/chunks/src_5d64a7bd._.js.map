{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/config/environment.ts"],"sourcesContent":["// src/config/environment.ts\r\n\r\n/**\r\n * Environment Configuration Module\r\n * Centralizes all environment-specific settings with type safety\r\n */\r\n\r\n// Environment types\r\nexport type Environment = 'development' | 'staging' | 'production';\r\n\r\n// Get current environment with fallback\r\nexport const getEnvironment = (): Environment => {\r\n  const env = process.env.NODE_ENV;\r\n  \r\n  // Check if we're in staging by looking at the APP_URL\r\n  const appUrl = process.env.NEXT_PUBLIC_APP_URL || '';\r\n  if (appUrl.includes('staging')) return 'staging';\r\n  \r\n  // Otherwise use NODE_ENV\r\n  if (env === 'production') return 'production';\r\n  return 'development';\r\n};\r\n\r\n// Environment checks\r\nexport const isDevelopment = () => getEnvironment() === 'development';\r\nexport const isStaging = () => getEnvironment() === 'staging';\r\nexport const isProduction = () => getEnvironment() === 'production';\r\n\r\n// Export environment constants for compatibility\r\nexport const ENV = getEnvironment();\r\nexport const IS_PRODUCTION = isProduction();\r\nexport const IS_DEVELOPMENT = isDevelopment();\r\nexport const IS_TEST = process.env.NODE_ENV === 'test';\r\n\r\n// Type-safe environment variable getter\r\nfunction getEnvVar(key: string, defaultValue?: string): string {\r\n  if (typeof window === 'undefined') {\r\n    // Server-side\r\n    return process.env[key] || defaultValue || '';\r\n  }\r\n  // Client-side - only NEXT_PUBLIC_ variables\r\n  return (process.env[key] || defaultValue || '');\r\n}\r\n\r\n// Boolean environment variable getter\r\nfunction getEnvBool(key: string, defaultValue: boolean = false): boolean {\r\n  const value = getEnvVar(key);\r\n  if (!value) return defaultValue;\r\n  return value.toLowerCase() === 'true';\r\n}\r\n\r\n// Number environment variable getter\r\nfunction getEnvNumber(key: string, defaultValue: number): number {\r\n  const value = getEnvVar(key);\r\n  if (!value) return defaultValue;\r\n  const num = parseInt(value, 10);\r\n  return isNaN(num) ? defaultValue : num;\r\n}\r\n\r\n// Debug configuration - ADDED FOR WALLET CONTEXT DEBUGGING\r\nexport const debugConfig = {\r\n  enabled: getEnvBool('NEXT_PUBLIC_DEBUG', isDevelopment()),\r\n  logWebSocket: getEnvBool('NEXT_PUBLIC_DEBUG_WEBSOCKET', false),\r\n  logWallet: getEnvBool('NEXT_PUBLIC_DEBUG_WALLET', false),\r\n  logApi: getEnvBool('NEXT_PUBLIC_DEBUG_API', false),\r\n  logAuth: getEnvBool('NEXT_PUBLIC_DEBUG_AUTH', false),\r\n  verboseErrors: getEnvBool('NEXT_PUBLIC_VERBOSE_ERRORS', isDevelopment()),\r\n} as const;\r\n\r\n// Application configuration\r\nexport const appConfig = {\r\n  name: getEnvVar('NEXT_PUBLIC_APP_NAME', 'PantyPost'),\r\n  version: getEnvVar('NEXT_PUBLIC_APP_VERSION', '2.0.0'),\r\n  description: 'Premium marketplace for intimate apparel',\r\n  url: getEnvVar('NEXT_PUBLIC_APP_URL', 'http://localhost:3000'),\r\n  environment: getEnvironment(),\r\n  supportEmail: 'support@pantypost.com',\r\n  contactEmail: 'contact@pantypost.com',\r\n  social: {\r\n    twitter: '@pantypost',\r\n    instagram: '@pantypost',\r\n    tiktok: '@pantypost',\r\n  },\r\n} as const;\r\n\r\n// API configuration\r\nexport const apiConfig = {\r\n  baseUrl: getEnvVar('NEXT_PUBLIC_API_URL', 'http://localhost:5000/api'),\r\n  timeout: getEnvNumber('NEXT_PUBLIC_API_TIMEOUT', 30000),\r\n  retryAttempts: getEnvNumber('NEXT_PUBLIC_API_RETRY_ATTEMPTS', 3),\r\n  retryDelay: 1000,\r\n  \r\n  // Feature flags for gradual backend migration\r\n  features: {\r\n    useAuth: getEnvBool('NEXT_PUBLIC_USE_API_AUTH', true),\r\n    useListings: getEnvBool('NEXT_PUBLIC_USE_API_LISTINGS', true),\r\n    useOrders: getEnvBool('NEXT_PUBLIC_USE_API_ORDERS', true),\r\n    useMessages: getEnvBool('NEXT_PUBLIC_USE_API_MESSAGES', true),\r\n    useWallet: getEnvBool('NEXT_PUBLIC_USE_API_WALLET', true),\r\n    useUsers: getEnvBool('NEXT_PUBLIC_USE_API_USERS', true),\r\n    useMockApi: getEnvBool('NEXT_PUBLIC_USE_MOCK_API', false),\r\n  },\r\n} as const;\r\n\r\n// Mock API configuration\r\nexport const mockConfig = {\r\n  scenario: getEnvVar('NEXT_PUBLIC_MOCK_SCENARIO', 'REALISTIC'),\r\n  logRequests: getEnvBool('NEXT_PUBLIC_MOCK_LOG_REQUESTS', isDevelopment()),\r\n  persistState: getEnvBool('NEXT_PUBLIC_MOCK_PERSIST_STATE', true),\r\n  seedData: getEnvBool('NEXT_PUBLIC_MOCK_SEED_DATA', true),\r\n} as const;\r\n\r\n// Cloudinary configuration\r\nexport const cloudinaryConfig = {\r\n  cloudName: getEnvVar('NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME', 'dkb1nvu8g'),\r\n  uploadPreset: getEnvVar('NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET', 'pantypost'),\r\n  apiKey: getEnvVar('NEXT_PUBLIC_CLOUDINARY_API_KEY', ''),\r\n  apiSecret: getEnvVar('CLOUDINARY_API_SECRET', ''),\r\n  folders: {\r\n    profiles: 'pantypost/profiles',\r\n    listings: 'pantypost/listings',\r\n    verification: 'pantypost/verification',\r\n    messages: 'pantypost/messages',\r\n    reviews: 'pantypost/reviews',\r\n  },\r\n  transformations: {\r\n    thumbnail: 'c_thumb,w_150,h_150',\r\n    profile: 'c_fill,w_200,h_200',\r\n    listing: 'c_fill,w_400,h_400',\r\n    message: 'c_limit,w_800,h_800',\r\n  },\r\n} as const;\r\n\r\n// Security configuration\r\nexport const securityConfig = {\r\n  enableSecurityHeaders: getEnvBool('NEXT_PUBLIC_ENABLE_SECURITY_HEADERS', isProduction()),\r\n  enableRateLimiting: getEnvBool('NEXT_PUBLIC_ENABLE_RATE_LIMITING', isProduction()),\r\n  maxRequestsPerMinute: getEnvNumber('NEXT_PUBLIC_MAX_REQUESTS_PER_MINUTE', 60),\r\n  maxLoginAttempts: 5,\r\n  lockoutDuration: 15 * 60 * 1000, // 15 minutes\r\n  sessionTimeout: 24 * 60 * 60 * 1000, // 24 hours\r\n  passwordMinLength: 8,\r\n  requireStrongPassword: true,\r\n  csrfEnabled: true,\r\n  rateLimiting: {\r\n    enabled: true,\r\n    windowMs: 15 * 60 * 1000, // 15 minutes\r\n    maxRequests: 100,\r\n  },\r\n} as const;\r\n\r\n// Analytics configuration\r\nexport const analyticsConfig = {\r\n  enabled: getEnvBool('NEXT_PUBLIC_ENABLE_ANALYTICS', isProduction()),\r\n  analyticsId: getEnvVar('NEXT_PUBLIC_ANALYTICS_ID', ''),\r\n  googleAnalyticsId: getEnvVar('NEXT_PUBLIC_GA_ID', ''),\r\n  mixpanelToken: getEnvVar('NEXT_PUBLIC_MIXPANEL_TOKEN', ''),\r\n  hotjarId: getEnvVar('NEXT_PUBLIC_HOTJAR_ID', ''),\r\n  sentryDsn: getEnvVar('NEXT_PUBLIC_SENTRY_DSN', ''),\r\n} as const;\r\n\r\n// Error reporting configuration\r\nexport const errorReportingConfig = {\r\n  enabled: getEnvBool('NEXT_PUBLIC_ENABLE_ERROR_REPORTING', !isDevelopment()),\r\n  sentryDsn: getEnvVar('NEXT_PUBLIC_SENTRY_DSN', ''),\r\n} as const;\r\n\r\n// Feature toggles - Combined old and new features\r\nexport const features = {\r\n  subscriptions: getEnvBool('NEXT_PUBLIC_ENABLE_SUBSCRIPTIONS', true),\r\n  auctions: getEnvBool('NEXT_PUBLIC_ENABLE_AUCTIONS', true),\r\n  customRequests: getEnvBool('NEXT_PUBLIC_ENABLE_CUSTOM_REQUESTS', true),\r\n  adminPanel: getEnvBool('NEXT_PUBLIC_ENABLE_ADMIN_PANEL', true),\r\n  sellerVerification: getEnvBool('NEXT_PUBLIC_ENABLE_SELLER_VERIFICATION', true),\r\n  websocket: getEnvBool('NEXT_PUBLIC_ENABLE_WEBSOCKET', true),\r\n  notifications: getEnvBool('NEXT_PUBLIC_ENABLE_NOTIFICATIONS', true),\r\n  pwa: getEnvBool('NEXT_PUBLIC_ENABLE_PWA', true),\r\n  offlineMode: getEnvBool('NEXT_PUBLIC_ENABLE_OFFLINE_MODE', true),\r\n  imageOptimization: getEnvBool('NEXT_PUBLIC_ENABLE_IMAGE_OPTIMIZATION', true),\r\n  lazyLoading: getEnvBool('NEXT_PUBLIC_ENABLE_LAZY_LOADING', true),\r\n  virtualScrolling: getEnvBool('NEXT_PUBLIC_ENABLE_VIRTUAL_SCROLLING', true),\r\n  infiniteScroll: getEnvBool('NEXT_PUBLIC_ENABLE_INFINITE_SCROLL', true),\r\n  tierSystem: getEnvBool('NEXT_PUBLIC_ENABLE_TIER_SYSTEM', true),\r\n  buyerProtection: getEnvBool('NEXT_PUBLIC_ENABLE_BUYER_PROTECTION', true),\r\n  disputeResolution: getEnvBool('NEXT_PUBLIC_ENABLE_DISPUTE_RESOLUTION', true),\r\n  darkMode: getEnvBool('NEXT_PUBLIC_ENABLE_DARK_MODE', true),\r\n  accessibility: getEnvBool('NEXT_PUBLIC_ENABLE_ACCESSIBILITY', true),\r\n  keyboardNavigation: getEnvBool('NEXT_PUBLIC_ENABLE_KEYBOARD_NAVIGATION', true),\r\n  screenReaderSupport: getEnvBool('NEXT_PUBLIC_ENABLE_SCREEN_READER_SUPPORT', true),\r\n  sellerAnalytics: getEnvBool('NEXT_PUBLIC_ENABLE_SELLER_ANALYTICS', true),\r\n  performanceMonitoring: getEnvBool('NEXT_PUBLIC_ENABLE_PERFORMANCE_MONITORING', isProduction()),\r\n  errorTracking: getEnvBool('NEXT_PUBLIC_ENABLE_ERROR_TRACKING', isProduction()),\r\n  multiLanguage: getEnvBool('NEXT_PUBLIC_ENABLE_MULTI_LANGUAGE', false),\r\n} as const;\r\n\r\n// FEATURES constant for backward compatibility\r\nexport const FEATURES = {\r\n  USE_API_AUTH: apiConfig.features.useAuth,\r\n  USE_API_LISTINGS: apiConfig.features.useListings,\r\n  USE_API_MESSAGES: apiConfig.features.useMessages,\r\n  USE_API_ORDERS: apiConfig.features.useOrders,\r\n  USE_API_WALLET: apiConfig.features.useWallet,\r\n  USE_API_REVIEWS: true,\r\n  USE_API_SUBSCRIPTIONS: true,\r\n  USE_API_USERS: apiConfig.features.useUsers,\r\n  USE_MOCK_DATA: apiConfig.features.useMockApi,\r\n  ENABLE_WEBSOCKET: features.websocket,\r\n  ENABLE_NOTIFICATIONS: features.notifications,\r\n  ENABLE_ANALYTICS: analyticsConfig.enabled,\r\n  ENABLE_ERROR_TRACKING: features.errorTracking,\r\n  ENABLE_PERFORMANCE_MONITORING: features.performanceMonitoring,\r\n  ENABLE_PWA: features.pwa,\r\n  ENABLE_OFFLINE_MODE: features.offlineMode,\r\n  ENABLE_IMAGE_OPTIMIZATION: features.imageOptimization,\r\n  ENABLE_LAZY_LOADING: features.lazyLoading,\r\n  ENABLE_VIRTUAL_SCROLLING: features.virtualScrolling,\r\n  ENABLE_INFINITE_SCROLL: features.infiniteScroll,\r\n  ENABLE_AUCTION_SYSTEM: features.auctions,\r\n  ENABLE_TIER_SYSTEM: features.tierSystem,\r\n  ENABLE_VERIFICATION: features.sellerVerification,\r\n  ENABLE_ADMIN_PANEL: features.adminPanel,\r\n  ENABLE_SELLER_ANALYTICS: features.sellerAnalytics,\r\n  ENABLE_BUYER_PROTECTION: features.buyerProtection,\r\n  ENABLE_DISPUTE_RESOLUTION: features.disputeResolution,\r\n  ENABLE_MULTI_LANGUAGE: features.multiLanguage,\r\n  ENABLE_DARK_MODE: features.darkMode,\r\n  ENABLE_ACCESSIBILITY: features.accessibility,\r\n  ENABLE_KEYBOARD_NAVIGATION: features.keyboardNavigation,\r\n  ENABLE_SCREEN_READER_SUPPORT: features.screenReaderSupport,\r\n} as const;\r\n\r\n// Application limits\r\nexport const limits = {\r\n  maxListingImages: getEnvNumber('NEXT_PUBLIC_MAX_LISTING_IMAGES', 10),\r\n  maxGalleryImages: getEnvNumber('NEXT_PUBLIC_MAX_GALLERY_IMAGES', 20),\r\n  maxMessageLength: getEnvNumber('NEXT_PUBLIC_MAX_MESSAGE_LENGTH', 1000),\r\n  maxFileSizeMB: getEnvNumber('NEXT_PUBLIC_MAX_FILE_SIZE_MB', 10),\r\n  minWithdrawalAmount: getEnvNumber('NEXT_PUBLIC_MIN_WITHDRAWAL_AMOUNT', 20),\r\n  platformFeePercentage: getEnvNumber('NEXT_PUBLIC_PLATFORM_FEE_PERCENTAGE', 10),\r\n} as const;\r\n\r\n// WebSocket configuration - ENHANCED FOR BETTER DEBUGGING\r\nexport const websocketConfig = {\r\n  enabled: true, // Force enable WebSocket\r\n  url: getEnvVar('NEXT_PUBLIC_WS_URL', 'ws://localhost:5000'),\r\n  path: getEnvVar('NEXT_PUBLIC_WS_PATH', '/socket.io'),\r\n  reconnectAttempts: 5,\r\n  reconnectInterval: 3000,\r\n  heartbeatInterval: 30000,\r\n  debug: getEnvBool('NEXT_PUBLIC_DEBUG_WEBSOCKET', false), // Added for WebSocket debugging\r\n} as const;\r\n\r\n// Cache configuration - ENHANCED WITH WALLET-SPECIFIC CACHE\r\nexport const cacheConfig = {\r\n  enabled: getEnvBool('NEXT_PUBLIC_ENABLE_CACHE', true),\r\n  ttlSeconds: getEnvNumber('NEXT_PUBLIC_CACHE_TTL_SECONDS', 300),\r\n  ttl: {\r\n    default: 5 * 60 * 1000, // 5 minutes\r\n    user: 10 * 60 * 1000, // 10 minutes\r\n    listing: 2 * 60 * 1000, // 2 minutes\r\n    message: 1 * 60 * 1000, // 1 minute\r\n    order: 5 * 60 * 1000, // 5 minutes\r\n    wallet: 30 * 1000, // 30 seconds\r\n    adminBalance: 5 * 1000, // 5 seconds for admin balance updates\r\n    adminActions: 10 * 1000, // 10 seconds for admin actions\r\n  },\r\n} as const;\r\n\r\n// Upload configuration\r\nexport const uploadConfig = {\r\n  maxFileSize: limits.maxFileSizeMB * 1024 * 1024,\r\n  maxFiles: 10,\r\n  acceptedImageTypes: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\r\n  acceptedVideoTypes: ['video/mp4', 'video/webm'],\r\n  acceptedDocumentTypes: ['application/pdf'],\r\n} as const;\r\n\r\n// Pagination configuration\r\nexport const paginationConfig = {\r\n  defaultPageSize: 20,\r\n  pageSizeOptions: [10, 20, 50, 100],\r\n  maxPageSize: 100,\r\n} as const;\r\n\r\n// Notification configuration\r\nexport const notificationConfig = {\r\n  enabled: features.notifications,\r\n  sound: true,\r\n  vibrate: true,\r\n  desktop: true,\r\n  email: true,\r\n  sms: false,\r\n  push: true,\r\n} as const;\r\n\r\n// Payment configuration\r\nexport const paymentConfig = {\r\n  currency: 'USD',\r\n  minimumAmount: 1,\r\n  maximumAmount: 10000,\r\n  platformFee: limits.platformFeePercentage / 100,\r\n  processingFee: 0.03, // 3%\r\n  withdrawalMinimum: limits.minWithdrawalAmount,\r\n  withdrawalMaximum: 5000,\r\n  paymentMethods: ['wallet', 'card', 'paypal'],\r\n} as const;\r\n\r\n// Tier configuration\r\nexport const tierConfig = {\r\n  enabled: features.tierSystem,\r\n  tiers: {\r\n    'Tease': { minSales: 0, commission: 0.20 },\r\n    'Tempt': { minSales: 10, commission: 0.18 },\r\n    'Seduce': { minSales: 25, commission: 0.15 },\r\n    'Enchant': { minSales: 50, commission: 0.12 },\r\n    'Goddess': { minSales: 100, commission: 0.10 },\r\n  },\r\n} as const;\r\n\r\n// Performance optimization configuration - ADDED FOR ADMIN DASHBOARD\r\nexport const performanceConfig = {\r\n  debounceDelay: getEnvNumber('NEXT_PUBLIC_DEBOUNCE_DELAY', 300),\r\n  throttleDelay: getEnvNumber('NEXT_PUBLIC_THROTTLE_DELAY', 1000),\r\n  balanceUpdateDebounce: getEnvNumber('NEXT_PUBLIC_BALANCE_UPDATE_DEBOUNCE', 1000),\r\n  maxConcurrentRequests: getEnvNumber('NEXT_PUBLIC_MAX_CONCURRENT_REQUESTS', 5),\r\n  enableMemoization: getEnvBool('NEXT_PUBLIC_ENABLE_MEMOIZATION', true),\r\n  enableLazyLoading: getEnvBool('NEXT_PUBLIC_ENABLE_LAZY_LOADING', true),\r\n} as const;\r\n\r\n// API Endpoints\r\nexport const API_ENDPOINTS = {\r\n  // Auth\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    SIGNUP: '/auth/signup',\r\n    LOGOUT: '/auth/logout',\r\n    REFRESH: '/auth/refresh',\r\n    VERIFY: '/auth/verify',\r\n    FORGOT_PASSWORD: '/auth/forgot-password',\r\n    RESET_PASSWORD: '/auth/reset-password',\r\n  },\r\n  \r\n  // Users\r\n  USERS: {\r\n    LIST: '/users',\r\n    GET: '/users/:id',\r\n    UPDATE: '/users/:id',\r\n    DELETE: '/users/:id',\r\n    PROFILE: '/users/profile',\r\n    UPLOAD_AVATAR: '/users/avatar',\r\n    VERIFY_SELLER: '/users/verify-seller',\r\n  },\r\n  \r\n  // Listings\r\n  LISTINGS: {\r\n    LIST: '/listings',\r\n    GET: '/listings/:id',\r\n    CREATE: '/listings',\r\n    UPDATE: '/listings/:id',\r\n    DELETE: '/listings/:id',\r\n    SEARCH: '/listings/search',\r\n    FEATURED: '/listings/featured',\r\n    BY_SELLER: '/listings/seller/:username',\r\n  },\r\n  \r\n  // Messages - FIXED endpoints\r\n  MESSAGES: {\r\n    THREADS: '/messages/threads',\r\n    THREAD: '/messages/threads/:threadId',\r\n    SEND: '/messages/send',\r\n    MARK_READ: '/messages/mark-read',\r\n    BLOCK_USER: '/messages/block',\r\n    UNBLOCK_USER: '/messages/unblock',\r\n    REPORT: '/messages/report',\r\n    UNREAD_COUNT: '/messages/unread-count',\r\n  },\r\n  \r\n  // Orders\r\n  ORDERS: {\r\n    LIST: '/orders',\r\n    GET: '/orders/:id',\r\n    CREATE: '/orders',\r\n    UPDATE_STATUS: '/orders/:id/status',\r\n    CANCEL: '/orders/:id/cancel',\r\n    DISPUTE: '/orders/:id/dispute',\r\n  },\r\n  \r\n  // Wallet - ENHANCED WITH ADMIN ENDPOINTS\r\n  WALLET: {\r\n    BALANCE: '/wallet/balance',\r\n    TRANSACTIONS: '/wallet/transactions',\r\n    DEPOSIT: '/wallet/deposit',\r\n    WITHDRAW: '/wallet/withdraw',\r\n    TRANSFER: '/wallet/transfer',\r\n    ADMIN_PLATFORM_BALANCE: '/wallet/admin-platform-balance',\r\n    ADMIN_ACTIONS: '/admin/actions',\r\n    ADMIN_ANALYTICS: '/wallet/admin/analytics',\r\n    PLATFORM_TRANSACTIONS: '/wallet/platform-transactions',\r\n  },\r\n  \r\n  // Reviews\r\n  REVIEWS: {\r\n    LIST: '/reviews',\r\n    GET: '/reviews/:id',\r\n    CREATE: '/reviews',\r\n    UPDATE: '/reviews/:id',\r\n    DELETE: '/reviews/:id',\r\n    BY_LISTING: '/reviews/listing/:listingId',\r\n    BY_SELLER: '/reviews/seller/:username',\r\n  },\r\n  \r\n  // Subscriptions\r\n  SUBSCRIPTIONS: {\r\n    LIST: '/subscriptions',\r\n    GET: '/subscriptions/:id',\r\n    CREATE: '/subscriptions',\r\n    CANCEL: '/subscriptions/:id/cancel',\r\n    REACTIVATE: '/subscriptions/:id/reactivate',\r\n  },\r\n  \r\n  // Upload\r\n  UPLOAD: {\r\n    IMAGE: '/upload/image',\r\n    VIDEO: '/upload/video',\r\n    DOCUMENT: '/upload/document',\r\n    DELETE: '/upload/delete',\r\n  },\r\n  \r\n  // Tiers\r\n  TIERS: {\r\n    INFO: '/tiers/info',\r\n    UPDATE: '/tiers/update',\r\n    STATS: '/tiers/stats',\r\n  },\r\n  \r\n  // Tips - ADDED FOR TIP FUNCTIONALITY\r\n  TIPS: {\r\n    SEND: '/tips/send',\r\n    HISTORY: '/tips/history',\r\n  },\r\n};\r\n\r\n// Build API URL helper\r\nexport const buildApiUrl = (endpoint: string, params?: Record<string, string>): string => {\r\n  let url = endpoint;\r\n  \r\n  // Replace path parameters\r\n  if (params) {\r\n    Object.entries(params).forEach(([key, value]) => {\r\n      url = url.replace(`:${key}`, value);\r\n    });\r\n  }\r\n  \r\n  // Prepend base URL if not already included\r\n  if (!url.startsWith('http')) {\r\n    url = `${apiConfig.baseUrl}${url}`;\r\n  }\r\n  \r\n  return url;\r\n};\r\n\r\n// Configuration validation\r\nexport function validateConfiguration(): { valid: boolean; errors: string[] } {\r\n  const errors: string[] = [];\r\n\r\n  // Validate required configurations\r\n  if (!appConfig.url) {\r\n    errors.push('NEXT_PUBLIC_APP_URL is required');\r\n  }\r\n\r\n  // Validate API configuration\r\n  if (!apiConfig.features.useMockApi && !apiConfig.baseUrl) {\r\n    errors.push('NEXT_PUBLIC_API_URL is required when not using mock API');\r\n  }\r\n\r\n  // Validate Cloudinary in production\r\n  if (isProduction() && (!cloudinaryConfig.cloudName || !cloudinaryConfig.uploadPreset)) {\r\n    errors.push('Cloudinary configuration is required in production');\r\n  }\r\n\r\n  // Validate monitoring in production\r\n  if (isProduction() && errorReportingConfig.enabled && !errorReportingConfig.sentryDsn) {\r\n    errors.push('Sentry DSN is required when error reporting is enabled');\r\n  }\r\n\r\n  return {\r\n    valid: errors.length === 0,\r\n    errors,\r\n  };\r\n}\r\n\r\n// Environment validation - backward compatibility\r\nexport const validateEnvironment = (): void => {\r\n  const validation = validateConfiguration();\r\n  if (!validation.valid && isProduction()) {\r\n    console.warn('[Environment] Configuration validation errors:', validation.errors);\r\n  }\r\n};\r\n\r\n// Export a function to get all configuration for debugging\r\nexport function getAllConfig() {\r\n  return {\r\n    app: appConfig,\r\n    api: apiConfig,\r\n    mock: mockConfig,\r\n    cloudinary: cloudinaryConfig,\r\n    security: securityConfig,\r\n    analytics: analyticsConfig,\r\n    errorReporting: errorReportingConfig,\r\n    features,\r\n    limits,\r\n    websocket: websocketConfig,\r\n    cache: cacheConfig,\r\n    upload: uploadConfig,\r\n    pagination: paginationConfig,\r\n    notification: notificationConfig,\r\n    payment: paymentConfig,\r\n    tier: tierConfig,\r\n    debug: debugConfig,\r\n    performance: performanceConfig,\r\n  };\r\n}\r\n\r\n// Log configuration in development\r\nif (isDevelopment() && typeof window !== 'undefined') {\r\n  console.log('[Environment] Current configuration:', getAllConfig());\r\n  console.log('[Environment] API Base URL:', apiConfig.baseUrl);\r\n  console.log('[Environment] Debug Mode:', debugConfig.enabled);\r\n  console.log('[Environment] WebSocket URL:', websocketConfig.url);\r\n  \r\n  const validation = validateConfiguration();\r\n  if (!validation.valid) {\r\n    console.warn('[Environment] Configuration validation errors:', validation.errors);\r\n  }\r\n}\r\n\r\n// Initialize environment validation\r\nif (typeof window !== 'undefined') {\r\n  validateEnvironment();\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/security/sanitization.ts"],"sourcesContent":["// src/utils/security/sanitization.ts\r\n\r\nimport DOMPurify from 'dompurify';\r\n\r\n/**\r\n * Configuration for DOMPurify to prevent XSS attacks\r\n */\r\nconst DOMPURIFY_CONFIG = {\r\n  ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'br', 'p', 'span'],\r\n  ALLOWED_ATTR: [],\r\n  KEEP_CONTENT: true,\r\n  RETURN_TRUSTED_TYPE: false,\r\n};\r\n\r\n/**\r\n * Strict configuration - no HTML allowed at all\r\n */\r\nconst STRICT_CONFIG = {\r\n  ALLOWED_TAGS: [],\r\n  ALLOWED_ATTR: [],\r\n  KEEP_CONTENT: true,\r\n};\r\n\r\n/**\r\n * Sanitizes HTML content to prevent XSS attacks\r\n * Allows only basic formatting tags\r\n */\r\nexport function sanitizeHtml(dirty: string): string {\r\n  if (!dirty || typeof dirty !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  // Use DOMPurify with our config\r\n  if (typeof window !== 'undefined') {\r\n    return DOMPurify.sanitize(dirty, DOMPURIFY_CONFIG);\r\n  }\r\n  \r\n  // Fallback for server-side (removes all HTML)\r\n  return dirty.replace(/<[^>]*>/g, '');\r\n}\r\n\r\n/**\r\n * Strict sanitization - removes ALL HTML\r\n */\r\nexport function sanitizeStrict(dirty: string): string {\r\n  if (!dirty || typeof dirty !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  if (typeof window !== 'undefined') {\r\n    return DOMPurify.sanitize(dirty, STRICT_CONFIG);\r\n  }\r\n  \r\n  return dirty.replace(/<[^>]*>/g, '');\r\n}\r\n\r\n/**\r\n * Sanitizes user input for display in HTML attributes\r\n * Prevents attribute-based XSS attacks\r\n */\r\nexport function sanitizeAttribute(value: string): string {\r\n  if (!value || typeof value !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return value\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#x27;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\\//g, '&#x2F;');\r\n}\r\n\r\n/**\r\n * Sanitizes URLs to prevent javascript: and dangerous data: URIs\r\n * But allows safe image data URLs for verification images\r\n */\r\nexport function sanitizeUrl(url: string): string {\r\n  if (!url || typeof url !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  const trimmedUrl = url.trim().toLowerCase();\r\n  \r\n  // Allow safe image data URLs\r\n  if (trimmedUrl.startsWith('data:')) {\r\n    // Only allow image data URLs with safe formats\r\n    const safeImageDataUrlPattern = /^data:image\\/(jpeg|jpg|png|gif|webp|svg\\+xml);base64,/i;\r\n    if (safeImageDataUrlPattern.test(url)) {\r\n      return url; // Return original URL to preserve base64 data\r\n    }\r\n    return ''; // Block other data URLs\r\n  }\r\n  \r\n  // Block other dangerous protocols\r\n  const dangerousProtocols = [\r\n    'javascript:',\r\n    'vbscript:',\r\n    'file:',\r\n    'about:',\r\n  ];\r\n  \r\n  for (const protocol of dangerousProtocols) {\r\n    if (trimmedUrl.startsWith(protocol)) {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  // Allow only http, https, and relative URLs\r\n  if (\r\n    !trimmedUrl.startsWith('http://') &&\r\n    !trimmedUrl.startsWith('https://') &&\r\n    !trimmedUrl.startsWith('/') &&\r\n    !trimmedUrl.startsWith('#')\r\n  ) {\r\n    return '';\r\n  }\r\n  \r\n  return encodeURI(url);\r\n}\r\n\r\n/**\r\n * Sanitizes file names to prevent directory traversal attacks\r\n */\r\nexport function sanitizeFileName(fileName: string): string {\r\n  if (!fileName || typeof fileName !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  // Remove path components\r\n  const baseName = fileName.split(/[/\\\\]/).pop() || '';\r\n  \r\n  // Remove dangerous characters\r\n  return baseName\r\n    .replace(/[^a-zA-Z0-9._-]/g, '_')\r\n    .replace(/\\.{2,}/g, '_')\r\n    .substring(0, 255); // Limit length\r\n}\r\n\r\n/**\r\n * Sanitizes search queries to prevent injection attacks\r\n */\r\nexport function sanitizeSearchQuery(query: string): string {\r\n  if (!query || typeof query !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return query\r\n    .replace(/[<>\\\"'`;(){}]/g, '') // Remove potentially dangerous characters\r\n    .replace(/\\s+/g, ' ') // Normalize spaces\r\n    .trim()\r\n    .substring(0, 100); // Limit length\r\n}\r\n\r\n/**\r\n * Sanitizes usernames\r\n */\r\nexport function sanitizeUsername(username: string): string {\r\n  if (!username || typeof username !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  // Convert to lowercase\r\n  let sanitized = username.toLowerCase();\r\n  \r\n  // Remove any non-alphanumeric characters except underscores and hyphens\r\n  sanitized = sanitized.replace(/[^a-z0-9_-]/g, '');\r\n  \r\n  // Remove leading/trailing underscores or hyphens\r\n  sanitized = sanitized.replace(/^[_-]+|[_-]+$/g, '');\r\n  \r\n  // Limit length\r\n  const MAX_USERNAME_LENGTH = 30;\r\n  if (sanitized.length > MAX_USERNAME_LENGTH) {\r\n    sanitized = sanitized.substring(0, MAX_USERNAME_LENGTH);\r\n  }\r\n  \r\n  return sanitized;\r\n}\r\n\r\n/**\r\n * Sanitizes email addresses\r\n */\r\nexport function sanitizeEmail(email: string): string {\r\n  if (!email || typeof email !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  // Convert to lowercase and trim\r\n  let sanitized = email.toLowerCase().trim();\r\n  \r\n  // Remove dangerous characters while keeping valid email chars\r\n  sanitized = sanitized.replace(/[<>\\\"'`;(){}]/g, '');\r\n  \r\n  // Basic email validation\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!emailRegex.test(sanitized)) {\r\n    return '';\r\n  }\r\n  \r\n  return sanitized;\r\n}\r\n\r\n/**\r\n * Sanitizes numeric input and ensures it's within bounds\r\n */\r\nexport function sanitizeNumber(\r\n  input: string | number,\r\n  min: number = 0,\r\n  max: number = Number.MAX_SAFE_INTEGER,\r\n  decimals: number = 2\r\n): number {\r\n  let num: number;\r\n  \r\n  if (typeof input === 'string') {\r\n    // Remove non-numeric characters except . and -\r\n    const cleaned = input.replace(/[^0-9.-]/g, '');\r\n    num = parseFloat(cleaned);\r\n  } else {\r\n    num = input;\r\n  }\r\n  \r\n  // Check if valid number\r\n  if (isNaN(num) || !isFinite(num)) {\r\n    return min;\r\n  }\r\n  \r\n  // Apply bounds\r\n  if (num < min) return min;\r\n  if (num > max) return max;\r\n  \r\n  // Round to specified decimals\r\n  const factor = Math.pow(10, decimals);\r\n  return Math.round(num * factor) / factor;\r\n}\r\n\r\n/**\r\n * Sanitizes currency amounts\r\n * Ensures proper decimal precision for money and avoids floating point issues\r\n */\r\nexport function sanitizeCurrency(amount: string | number): number {\r\n  let num: number;\r\n  \r\n  if (typeof amount === 'string') {\r\n    // Remove non-numeric characters except . and -\r\n    const cleaned = amount.replace(/[^0-9.-]/g, '');\r\n    num = parseFloat(cleaned);\r\n  } else {\r\n    num = amount;\r\n  }\r\n  \r\n  // Check if valid number\r\n  if (isNaN(num) || !isFinite(num)) {\r\n    return 0;\r\n  }\r\n  \r\n  // Apply bounds\r\n  if (num < 0) return 0;\r\n  if (num > 1000000) return 1000000;\r\n  \r\n  // FIXED: Round to 2 decimal places using proper technique to avoid floating point issues\r\n  return Math.round(num * 100) / 100;\r\n}\r\n\r\n/**\r\n * Helper function to add currency values safely\r\n * Avoids floating point precision issues\r\n */\r\nexport function addCurrency(a: number, b: number): number {\r\n  return Math.round((a + b) * 100) / 100;\r\n}\r\n\r\n/**\r\n * Helper function to subtract currency values safely\r\n * Avoids floating point precision issues\r\n */\r\nexport function subtractCurrency(a: number, b: number): number {\r\n  return Math.round((a - b) * 100) / 100;\r\n}\r\n\r\n/**\r\n * Helper function to multiply currency values safely\r\n * Avoids floating point precision issues\r\n */\r\nexport function multiplyCurrency(amount: number, multiplier: number): number {\r\n  return Math.round(amount * multiplier * 100) / 100;\r\n}\r\n\r\n/**\r\n * Sanitizes an array of strings\r\n */\r\nexport function sanitizeStringArray(\r\n  arr: string[],\r\n  maxItems: number = 50,\r\n  itemSanitizer: (item: string) => string = sanitizeStrict\r\n): string[] {\r\n  if (!Array.isArray(arr)) {\r\n    return [];\r\n  }\r\n  \r\n  return arr\r\n    .slice(0, maxItems)\r\n    .map(itemSanitizer)\r\n    .filter(item => item.length > 0);\r\n}\r\n\r\n/**\r\n * Sanitizes object keys and values recursively\r\n * Prevents prototype pollution attacks\r\n */\r\nexport function sanitizeObject<T extends Record<string, any>>(\r\n  obj: T,\r\n  options: {\r\n    maxDepth?: number;\r\n    allowedKeys?: string[];\r\n    keySanitizer?: (key: string) => string;\r\n    valueSanitizer?: (value: any) => any;\r\n  } = {}\r\n): Partial<T> {\r\n  const {\r\n    maxDepth = 5,\r\n    allowedKeys,\r\n    keySanitizer = sanitizeStrict,\r\n    valueSanitizer = (v) => (typeof v === 'string' ? sanitizeStrict(v) : v),\r\n  } = options;\r\n  \r\n  function sanitizeRecursive(input: any, depth: number): any {\r\n    if (depth > maxDepth) {\r\n      return null;\r\n    }\r\n    \r\n    if (input === null || input === undefined) {\r\n      return input;\r\n    }\r\n    \r\n    if (typeof input === 'string') {\r\n      return valueSanitizer(input);\r\n    }\r\n    \r\n    if (typeof input === 'number' || typeof input === 'boolean') {\r\n      return input;\r\n    }\r\n    \r\n    if (Array.isArray(input)) {\r\n      return input.map(item => sanitizeRecursive(item, depth + 1));\r\n    }\r\n    \r\n    if (typeof input === 'object') {\r\n      const sanitized: any = {};\r\n      \r\n      for (const [key, value] of Object.entries(input)) {\r\n        // Skip prototype properties\r\n        if (!input.hasOwnProperty(key)) continue;\r\n        \r\n        // Skip dangerous keys\r\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\r\n          continue;\r\n        }\r\n        \r\n        // Apply key allowlist if provided\r\n        if (allowedKeys && !allowedKeys.includes(key)) {\r\n          continue;\r\n        }\r\n        \r\n        const sanitizedKey = keySanitizer(key);\r\n        if (sanitizedKey) {\r\n          sanitized[sanitizedKey] = sanitizeRecursive(value, depth + 1);\r\n        }\r\n      }\r\n      \r\n      return sanitized;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  return sanitizeRecursive(obj, 0);\r\n}\r\n\r\n/**\r\n * Sanitizes JSON string input\r\n * Prevents JSON injection attacks\r\n */\r\nexport function sanitizeJson(jsonString: string): object | null {\r\n  if (!jsonString || typeof jsonString !== 'string') {\r\n    return null;\r\n  }\r\n  \r\n  try {\r\n    // Remove any non-JSON characters\r\n    const cleaned = jsonString.trim();\r\n    \r\n    // Basic validation\r\n    if (!cleaned.startsWith('{') && !cleaned.startsWith('[')) {\r\n      return null;\r\n    }\r\n    \r\n    const parsed = JSON.parse(cleaned);\r\n    return sanitizeObject(parsed);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Sanitizes SQL-like input to prevent injection\r\n * Note: This is for client-side validation only - always use parameterized queries on the server\r\n */\r\nexport function sanitizeSqlInput(input: string): string {\r\n  if (!input || typeof input !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return input\r\n    .replace(/['\";\\\\]/g, '') // Remove quotes and escape characters\r\n    .replace(/--/g, '') // Remove SQL comments\r\n    .replace(/\\/\\*/g, '') // Remove multi-line comments\r\n    .replace(/\\*\\//g, '')\r\n    .replace(/\\b(union|select|insert|update|delete|drop|create|alter|exec|execute)\\b/gi, '') // Remove SQL keywords\r\n    .trim();\r\n}\r\n\r\n/**\r\n * Creates a content security policy nonce\r\n */\r\nexport function generateCSPNonce(): string {\r\n  if (typeof window !== 'undefined' && window.crypto) {\r\n    const array = new Uint8Array(16);\r\n    window.crypto.getRandomValues(array);\r\n    return btoa(String.fromCharCode(...array));\r\n  }\r\n  \r\n  // Fallback for server-side\r\n  return Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\n/**\r\n * Validates and sanitizes image data URLs\r\n */\r\nexport function sanitizeImageDataUrl(dataUrl: string): string | null {\r\n  if (!dataUrl || typeof dataUrl !== 'string') {\r\n    return null;\r\n  }\r\n  \r\n  // Check if it's a valid data URL\r\n  const dataUrlRegex = /^data:image\\/(jpeg|jpg|png|gif|webp);base64,/;\r\n  if (!dataUrlRegex.test(dataUrl)) {\r\n    return null;\r\n  }\r\n  \r\n  // Limit size (e.g., 5MB)\r\n  const maxSize = 5 * 1024 * 1024 * 1.37; // Base64 is ~37% larger\r\n  if (dataUrl.length > maxSize) {\r\n    return null;\r\n  }\r\n  \r\n  return dataUrl;\r\n}\r\n\r\n/**\r\n * Escapes HTML entities for safe display\r\n */\r\nexport function escapeHtml(text: string): string {\r\n  if (!text || typeof text !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  const map: Record<string, string> = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '/': '&#x2F;',\r\n  };\r\n  \r\n  return text.replace(/[&<>\"'/]/g, (char) => map[char] || char);\r\n}\r\n\r\n/**\r\n * Sanitizes Markdown content\r\n * Allows basic markdown but prevents XSS\r\n */\r\nexport function sanitizeMarkdown(markdown: string): string {\r\n  if (!markdown || typeof markdown !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  // First, escape HTML to prevent XSS\r\n  let safe = escapeHtml(markdown);\r\n  \r\n  // Then allow specific markdown patterns\r\n  // Bold: **text** or __text__\r\n  safe = safe.replace(/\\*\\*(.+?)\\*\\*/g, '<strong>$1</strong>');\r\n  safe = safe.replace(/__(.+?)__/g, '<strong>$1</strong>');\r\n  \r\n  // Italic: *text* or _text_\r\n  safe = safe.replace(/\\*(.+?)\\*/g, '<em>$1</em>');\r\n  safe = safe.replace(/_(.+?)_/g, '<em>$1</em>');\r\n  \r\n  // Line breaks\r\n  safe = safe.replace(/\\n/g, '<br>');\r\n  \r\n  return safe;\r\n}\r\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;;;;;;;;;;;;;;;;;;;;;AAErC;;AAEA;;CAEC,GACD,MAAM,mBAAmB;IACvB,cAAc;QAAC;QAAK;QAAK;QAAM;QAAU;QAAM;QAAK;KAAO;IAC3D,cAAc,EAAE;IAChB,cAAc;IACd,qBAAqB;AACvB;AAEA;;CAEC,GACD,MAAM,gBAAgB;IACpB,cAAc,EAAE;IAChB,cAAc,EAAE;IAChB,cAAc;AAChB;AAMO,SAAS,aAAa,KAAa;IACxC,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,gCAAgC;IAChC,wCAAmC;QACjC,OAAO,qJAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,OAAO;IACnC;;;AAIF;AAKO,SAAS,eAAe,KAAa;IAC1C,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,wCAAmC;QACjC,OAAO,qJAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,OAAO;IACnC;;;AAGF;AAMO,SAAS,kBAAkB,KAAa;IAC7C,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,OAAO,MACJ,OAAO,CAAC,MAAM,SACd,OAAO,CAAC,MAAM,UACd,OAAO,CAAC,MAAM,UACd,OAAO,CAAC,MAAM,QACd,OAAO,CAAC,MAAM,QACd,OAAO,CAAC,OAAO;AACpB;AAMO,SAAS,YAAY,GAAW;IACrC,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,MAAM,aAAa,IAAI,IAAI,GAAG,WAAW;IAEzC,6BAA6B;IAC7B,IAAI,WAAW,UAAU,CAAC,UAAU;QAClC,+CAA+C;QAC/C,MAAM,0BAA0B;QAChC,IAAI,wBAAwB,IAAI,CAAC,MAAM;YACrC,OAAO,KAAK,8CAA8C;QAC5D;QACA,OAAO,IAAI,wBAAwB;IACrC;IAEA,kCAAkC;IAClC,MAAM,qBAAqB;QACzB;QACA;QACA;QACA;KACD;IAED,KAAK,MAAM,YAAY,mBAAoB;QACzC,IAAI,WAAW,UAAU,CAAC,WAAW;YACnC,OAAO;QACT;IACF;IAEA,4CAA4C;IAC5C,IACE,CAAC,WAAW,UAAU,CAAC,cACvB,CAAC,WAAW,UAAU,CAAC,eACvB,CAAC,WAAW,UAAU,CAAC,QACvB,CAAC,WAAW,UAAU,CAAC,MACvB;QACA,OAAO;IACT;IAEA,OAAO,UAAU;AACnB;AAKO,SAAS,iBAAiB,QAAgB;IAC/C,IAAI,CAAC,YAAY,OAAO,aAAa,UAAU;QAC7C,OAAO;IACT;IAEA,yBAAyB;IACzB,MAAM,WAAW,SAAS,KAAK,CAAC,SAAS,GAAG,MAAM;IAElD,8BAA8B;IAC9B,OAAO,SACJ,OAAO,CAAC,oBAAoB,KAC5B,OAAO,CAAC,WAAW,KACnB,SAAS,CAAC,GAAG,MAAM,eAAe;AACvC;AAKO,SAAS,oBAAoB,KAAa;IAC/C,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,OAAO,MACJ,OAAO,CAAC,kBAAkB,IAAI,0CAA0C;KACxE,OAAO,CAAC,QAAQ,KAAK,mBAAmB;KACxC,IAAI,GACJ,SAAS,CAAC,GAAG,MAAM,eAAe;AACvC;AAKO,SAAS,iBAAiB,QAAgB;IAC/C,IAAI,CAAC,YAAY,OAAO,aAAa,UAAU;QAC7C,OAAO;IACT;IAEA,uBAAuB;IACvB,IAAI,YAAY,SAAS,WAAW;IAEpC,wEAAwE;IACxE,YAAY,UAAU,OAAO,CAAC,gBAAgB;IAE9C,iDAAiD;IACjD,YAAY,UAAU,OAAO,CAAC,kBAAkB;IAEhD,eAAe;IACf,MAAM,sBAAsB;IAC5B,IAAI,UAAU,MAAM,GAAG,qBAAqB;QAC1C,YAAY,UAAU,SAAS,CAAC,GAAG;IACrC;IAEA,OAAO;AACT;AAKO,SAAS,cAAc,KAAa;IACzC,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,gCAAgC;IAChC,IAAI,YAAY,MAAM,WAAW,GAAG,IAAI;IAExC,8DAA8D;IAC9D,YAAY,UAAU,OAAO,CAAC,kBAAkB;IAEhD,yBAAyB;IACzB,MAAM,aAAa;IACnB,IAAI,CAAC,WAAW,IAAI,CAAC,YAAY;QAC/B,OAAO;IACT;IAEA,OAAO;AACT;AAKO,SAAS,eACd,KAAsB;QACtB,MAAA,iEAAc,GACd,MAAA,iEAAc,OAAO,gBAAgB,EACrC,WAAA,iEAAmB;IAEnB,IAAI;IAEJ,IAAI,OAAO,UAAU,UAAU;QAC7B,+CAA+C;QAC/C,MAAM,UAAU,MAAM,OAAO,CAAC,aAAa;QAC3C,MAAM,WAAW;IACnB,OAAO;QACL,MAAM;IACR;IAEA,wBAAwB;IACxB,IAAI,MAAM,QAAQ,CAAC,SAAS,MAAM;QAChC,OAAO;IACT;IAEA,eAAe;IACf,IAAI,MAAM,KAAK,OAAO;IACtB,IAAI,MAAM,KAAK,OAAO;IAEtB,8BAA8B;IAC9B,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI;IAC5B,OAAO,KAAK,KAAK,CAAC,MAAM,UAAU;AACpC;AAMO,SAAS,iBAAiB,MAAuB;IACtD,IAAI;IAEJ,IAAI,OAAO,WAAW,UAAU;QAC9B,+CAA+C;QAC/C,MAAM,UAAU,OAAO,OAAO,CAAC,aAAa;QAC5C,MAAM,WAAW;IACnB,OAAO;QACL,MAAM;IACR;IAEA,wBAAwB;IACxB,IAAI,MAAM,QAAQ,CAAC,SAAS,MAAM;QAChC,OAAO;IACT;IAEA,eAAe;IACf,IAAI,MAAM,GAAG,OAAO;IACpB,IAAI,MAAM,SAAS,OAAO;IAE1B,yFAAyF;IACzF,OAAO,KAAK,KAAK,CAAC,MAAM,OAAO;AACjC;AAMO,SAAS,YAAY,CAAS,EAAE,CAAS;IAC9C,OAAO,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,OAAO;AACrC;AAMO,SAAS,iBAAiB,CAAS,EAAE,CAAS;IACnD,OAAO,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,OAAO;AACrC;AAMO,SAAS,iBAAiB,MAAc,EAAE,UAAkB;IACjE,OAAO,KAAK,KAAK,CAAC,SAAS,aAAa,OAAO;AACjD;AAKO,SAAS,oBACd,GAAa;QACb,WAAA,iEAAmB,IACnB,gBAAA,iEAA0C;IAE1C,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM;QACvB,OAAO,EAAE;IACX;IAEA,OAAO,IACJ,KAAK,CAAC,GAAG,UACT,GAAG,CAAC,eACJ,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG;AAClC;AAMO,SAAS,eACd,GAAM;QACN,UAAA,iEAKI,CAAC;IAEL,MAAM,EACJ,WAAW,CAAC,EACZ,WAAW,EACX,eAAe,cAAc,EAC7B,iBAAiB,CAAC,IAAO,OAAO,MAAM,WAAW,eAAe,KAAK,CAAE,EACxE,GAAG;IAEJ,SAAS,kBAAkB,KAAU,EAAE,KAAa;QAClD,IAAI,QAAQ,UAAU;YACpB,OAAO;QACT;QAEA,IAAI,UAAU,QAAQ,UAAU,WAAW;YACzC,OAAO;QACT;QAEA,IAAI,OAAO,UAAU,UAAU;YAC7B,OAAO,eAAe;QACxB;QAEA,IAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;YAC3D,OAAO;QACT;QAEA,IAAI,MAAM,OAAO,CAAC,QAAQ;YACxB,OAAO,MAAM,GAAG,CAAC,CAAA,OAAQ,kBAAkB,MAAM,QAAQ;QAC3D;QAEA,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,YAAiB,CAAC;YAExB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,OAAQ;gBAChD,4BAA4B;gBAC5B,IAAI,CAAC,MAAM,cAAc,CAAC,MAAM;gBAEhC,sBAAsB;gBACtB,IAAI,QAAQ,eAAe,QAAQ,iBAAiB,QAAQ,aAAa;oBACvE;gBACF;gBAEA,kCAAkC;gBAClC,IAAI,eAAe,CAAC,YAAY,QAAQ,CAAC,MAAM;oBAC7C;gBACF;gBAEA,MAAM,eAAe,aAAa;gBAClC,IAAI,cAAc;oBAChB,SAAS,CAAC,aAAa,GAAG,kBAAkB,OAAO,QAAQ;gBAC7D;YACF;YAEA,OAAO;QACT;QAEA,OAAO;IACT;IAEA,OAAO,kBAAkB,KAAK;AAChC;AAMO,SAAS,aAAa,UAAkB;IAC7C,IAAI,CAAC,cAAc,OAAO,eAAe,UAAU;QACjD,OAAO;IACT;IAEA,IAAI;QACF,iCAAiC;QACjC,MAAM,UAAU,WAAW,IAAI;QAE/B,mBAAmB;QACnB,IAAI,CAAC,QAAQ,UAAU,CAAC,QAAQ,CAAC,QAAQ,UAAU,CAAC,MAAM;YACxD,OAAO;QACT;QAEA,MAAM,SAAS,KAAK,KAAK,CAAC;QAC1B,OAAO,eAAe;IACxB,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAMO,SAAS,iBAAiB,KAAa;IAC5C,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,OAAO,MACJ,OAAO,CAAC,YAAY,IAAI,sCAAsC;KAC9D,OAAO,CAAC,OAAO,IAAI,sBAAsB;KACzC,OAAO,CAAC,SAAS,IAAI,6BAA6B;KAClD,OAAO,CAAC,SAAS,IACjB,OAAO,CAAC,4EAA4E,IAAI,sBAAsB;KAC9G,IAAI;AACT;AAKO,SAAS;IACd,IAAI,aAAkB,eAAe,OAAO,MAAM,EAAE;QAClD,MAAM,QAAQ,IAAI,WAAW;QAC7B,OAAO,MAAM,CAAC,eAAe,CAAC;QAC9B,OAAO,KAAK,OAAO,YAAY,IAAI;IACrC;IAEA,2BAA2B;IAC3B,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;AACjD;AAKO,SAAS,qBAAqB,OAAe;IAClD,IAAI,CAAC,WAAW,OAAO,YAAY,UAAU;QAC3C,OAAO;IACT;IAEA,iCAAiC;IACjC,MAAM,eAAe;IACrB,IAAI,CAAC,aAAa,IAAI,CAAC,UAAU;QAC/B,OAAO;IACT;IAEA,yBAAyB;IACzB,MAAM,UAAU,IAAI,OAAO,OAAO,MAAM,wBAAwB;IAChE,IAAI,QAAQ,MAAM,GAAG,SAAS;QAC5B,OAAO;IACT;IAEA,OAAO;AACT;AAKO,SAAS,WAAW,IAAY;IACrC,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;QACrC,OAAO;IACT;IAEA,MAAM,MAA8B;QAClC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;IACP;IAEA,OAAO,KAAK,OAAO,CAAC,aAAa,CAAC,OAAS,GAAG,CAAC,KAAK,IAAI;AAC1D;AAMO,SAAS,iBAAiB,QAAgB;IAC/C,IAAI,CAAC,YAAY,OAAO,aAAa,UAAU;QAC7C,OAAO;IACT;IAEA,oCAAoC;IACpC,IAAI,OAAO,WAAW;IAEtB,wCAAwC;IACxC,6BAA6B;IAC7B,OAAO,KAAK,OAAO,CAAC,kBAAkB;IACtC,OAAO,KAAK,OAAO,CAAC,cAAc;IAElC,2BAA2B;IAC3B,OAAO,KAAK,OAAO,CAAC,cAAc;IAClC,OAAO,KAAK,OAAO,CAAC,YAAY;IAEhC,cAAc;IACd,OAAO,KAAK,OAAO,CAAC,OAAO;IAE3B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/validation/schemas.ts"],"sourcesContent":["// src/utils/validation/schemas.ts\r\n\r\nimport { z } from 'zod';\r\n\r\n/**\r\n * Common validation patterns and constraints\r\n */\r\nconst PATTERNS = {\r\n  username: /^[a-zA-Z0-9_-]{3,30}$/,\r\n  email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n  // Password: minimum 8 chars, at least 1 uppercase, 1 lowercase, 1 number\r\n  password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d@$!%*?&]{8,}$/,\r\n  // Allow letters, numbers, spaces, and common punctuation\r\n  safeText: /^[a-zA-Z0-9\\s\\-.,!?'\"()]+$/,\r\n  // Price pattern: positive numbers with up to 2 decimal places\r\n  price: /^\\d+(\\.\\d{1,2})?$/,\r\n  // Phone number pattern (international format)\r\n  phone: /^\\+?[\\d\\s-()]+$/,\r\n  // Alphanumeric with spaces\r\n  alphanumericWithSpaces: /^[a-zA-Z0-9\\s]+$/,\r\n};\r\n\r\n/**\r\n * Common string sanitizers and transformers\r\n */\r\nconst sanitizers = {\r\n  trim: (val: string) => val.trim(),\r\n  lowercase: (val: string) => val.toLowerCase(),\r\n  uppercase: (val: string) => val.toUpperCase(),\r\n  removeHtml: (val: string) => val.replace(/<[^>]*>/g, ''),\r\n  normalizeSpaces: (val: string) => val.replace(/\\s+/g, ' ').trim(),\r\n};\r\n\r\n/**\r\n * Authentication schemas\r\n */\r\nexport const authSchemas = {\r\n  username: z\r\n    .string()\r\n    .min(3, 'Username must be at least 3 characters')\r\n    .max(30, 'Username must be at most 30 characters')\r\n    .regex(PATTERNS.username, 'Username can only contain letters, numbers, underscores, and hyphens')\r\n    .transform(sanitizers.lowercase)\r\n    .refine(\r\n      (val) => !['admin', 'root', 'system', 'pantypost'].includes(val),\r\n      'This username is reserved'\r\n    ),\r\n\r\n  email: z\r\n    .string()\r\n    .min(1, 'Email is required')\r\n    .email('Invalid email address')\r\n    .transform(sanitizers.lowercase)\r\n    .refine(\r\n      (val) => !val.includes('+'),\r\n      'Email aliases with + are not allowed'\r\n    ),\r\n\r\n  password: z\r\n    .string()\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .max(100, 'Password is too long')\r\n    .regex(\r\n      PATTERNS.password,\r\n      'Password must contain at least one uppercase letter, one lowercase letter, and one number'\r\n    ),\r\n\r\n  confirmPassword: z.string().min(1, 'Please confirm your password'),\r\n\r\n  loginSchema: z.object({\r\n    username: z.string().min(1, 'Username is required').transform(sanitizers.lowercase),\r\n    password: z.string().min(1, 'Password is required'),\r\n  }),\r\n\r\n  signupSchema: z.object({\r\n    username: z\r\n      .string()\r\n      .min(3, 'Username must be at least 3 characters')\r\n      .max(30, 'Username must be at most 30 characters')\r\n      .regex(PATTERNS.username, 'Username can only contain letters, numbers, underscores, and hyphens')\r\n      .transform(sanitizers.lowercase),\r\n    email: z\r\n      .string()\r\n      .min(1, 'Email is required')\r\n      .email('Invalid email address')\r\n      .transform(sanitizers.lowercase),\r\n    password: z\r\n      .string()\r\n      .min(8, 'Password must be at least 8 characters')\r\n      .regex(\r\n        PATTERNS.password,\r\n        'Password must contain at least one uppercase letter, one lowercase letter, and one number'\r\n      ),\r\n    confirmPassword: z.string().min(1, 'Please confirm your password'),\r\n    role: z.enum(['buyer', 'seller'], {\r\n      required_error: 'Please select a role',\r\n    }).nullable(),\r\n    termsAccepted: z.boolean().refine((val) => val === true, 'You must agree to the terms'),\r\n    ageVerified: z.boolean().refine((val) => val === true, 'You must confirm you are 18 or older'),\r\n  }).refine((data) => data.password === data.confirmPassword, {\r\n    message: \"Passwords don't match\",\r\n    path: ['confirmPassword'],\r\n  }),\r\n};\r\n\r\n/**\r\n * User profile schemas\r\n */\r\nexport const profileSchemas = {\r\n  displayName: z\r\n    .string()\r\n    .min(2, 'Display name must be at least 2 characters')\r\n    .max(50, 'Display name must be at most 50 characters')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .refine(\r\n      (val) => !/<[^>]*>/.test(val),\r\n      'Display name cannot contain HTML'\r\n    ),\r\n\r\n  bio: z\r\n    .string()\r\n    .max(500, 'Bio must be at most 500 characters')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .optional(),\r\n\r\n  location: z\r\n    .string()\r\n    .max(100, 'Location must be at most 100 characters')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .optional(),\r\n\r\n  socialLinks: z.object({\r\n    twitter: z.string().url('Invalid Twitter URL').optional().or(z.literal('')),\r\n    instagram: z.string().url('Invalid Instagram URL').optional().or(z.literal('')),\r\n    onlyfans: z.string().url('Invalid OnlyFans URL').optional().or(z.literal('')),\r\n  }).optional(),\r\n\r\n  profileUpdateSchema: z.object({\r\n    displayName: z\r\n      .string()\r\n      .min(2, 'Display name must be at least 2 characters')\r\n      .max(50, 'Display name must be at most 50 characters')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    bio: z\r\n      .string()\r\n      .max(500, 'Bio must be at most 500 characters')\r\n      .transform(sanitizers.normalizeSpaces)\r\n      .optional(),\r\n    location: z\r\n      .string()\r\n      .max(100, 'Location must be at most 100 characters')\r\n      .transform(sanitizers.normalizeSpaces)\r\n      .optional(),\r\n    avatarUrl: z.string().url('Invalid avatar URL').optional().or(z.literal('')),\r\n  }),\r\n};\r\n\r\n/**\r\n * Listing schemas\r\n */\r\nexport const listingSchemas = {\r\n  title: z\r\n    .string()\r\n    .min(5, 'Title must be at least 5 characters')\r\n    .max(100, 'Title must be at most 100 characters')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .refine(\r\n      (val) => !/<[^>]*>/.test(val),\r\n      'Title cannot contain HTML'\r\n    ),\r\n\r\n  description: z\r\n    .string()\r\n    .min(20, 'Description must be at least 20 characters')\r\n    .max(2000, 'Description must be at most 2000 characters')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .refine(\r\n      (val) => !/<[^>]*>/.test(val),\r\n      'Description cannot contain HTML'\r\n    ),\r\n\r\n  price: z\r\n    .string()\r\n    .regex(PATTERNS.price, 'Invalid price format')\r\n    .transform((val) => parseFloat(val))\r\n    .refine((val) => val >= 0.01, 'Price must be at least $0.01')\r\n    .refine((val) => val <= 10000, 'Price cannot exceed $10,000'),\r\n\r\n  category: z.enum(['panties', 'bras', 'lingerie', 'socks', 'other'], {\r\n    required_error: 'Please select a category',\r\n  }),\r\n\r\n  condition: z.enum(['new', 'worn_once', 'well_worn'], {\r\n    required_error: 'Please select condition',\r\n  }),\r\n\r\n  size: z.enum(['xs', 's', 'm', 'l', 'xl', 'xxl', 'other'], {\r\n    required_error: 'Please select a size',\r\n  }),\r\n\r\n  tags: z\r\n    .array(z.string().max(30, 'Tag is too long'))\r\n    .max(10, 'Maximum 10 tags allowed')\r\n    .transform((tags) => tags.map((tag) => sanitizers.normalizeSpaces(tag)))\r\n    .optional(),\r\n\r\n  wearDuration: z\r\n    .number()\r\n    .min(0, 'Wear duration cannot be negative')\r\n    .max(30, 'Wear duration cannot exceed 30 days')\r\n    .optional(),\r\n\r\n  images: z\r\n    .array(z.string().url('Invalid image URL'))\r\n    .min(1, 'At least one image is required')\r\n    .max(10, 'Maximum 10 images allowed'),\r\n\r\n  createListingSchema: z.object({\r\n    title: z\r\n      .string()\r\n      .min(5, 'Title must be at least 5 characters')\r\n      .max(100, 'Title must be at most 100 characters')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    description: z\r\n      .string()\r\n      .min(20, 'Description must be at least 20 characters')\r\n      .max(2000, 'Description must be at most 2000 characters')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    price: z\r\n      .number()\r\n      .positive('Price must be positive')\r\n      .min(0.01, 'Price must be at least $0.01')\r\n      .max(10000, 'Price cannot exceed $10,000'),\r\n    category: z.enum(['panties', 'bras', 'lingerie', 'socks', 'other']),\r\n    condition: z.enum(['new', 'worn_once', 'well_worn']),\r\n    size: z.enum(['xs', 's', 'm', 'l', 'xl', 'xxl', 'other']),\r\n    tags: z.array(z.string()).optional(),\r\n    wearDuration: z.number().optional(),\r\n    images: z.array(z.string().url()).min(1, 'At least one image is required'),\r\n    listingType: z.enum(['regular', 'auction']).default('regular'),\r\n    auctionEndDate: z.string().datetime().optional(),\r\n    startingBid: z.number().positive().optional(),\r\n  }),\r\n};\r\n\r\n/**\r\n * Message schemas\r\n */\r\nexport const messageSchemas = {\r\n  messageContent: z\r\n    .string()\r\n    .min(1, 'Message cannot be empty')\r\n    .max(1000, 'Message is too long')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .refine(\r\n      (val) => !/<script[^>]*>.*?<\\/script>/gi.test(val),\r\n      'Message cannot contain scripts'\r\n    ),\r\n\r\n  customRequest: z.object({\r\n    title: z\r\n      .string()\r\n      .min(5, 'Title must be at least 5 characters')\r\n      .max(100, 'Title must be at most 100 characters')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    description: z\r\n      .string()\r\n      .min(20, 'Description must be at least 20 characters')\r\n      .max(500, 'Description must be at most 500 characters')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    price: z\r\n      .number()\r\n      .positive('Price must be positive')\r\n      .min(5, 'Minimum price is $5')\r\n      .max(1000, 'Maximum price is $1,000'),\r\n  }),\r\n\r\n  tipAmount: z\r\n    .number()\r\n    .positive('Tip amount must be positive')\r\n    .min(1, 'Minimum tip is $1')\r\n    .max(500, 'Maximum tip is $500'),\r\n};\r\n\r\n/**\r\n * Financial schemas\r\n */\r\nexport const financialSchemas = {\r\n  amount: z\r\n    .string()\r\n    .regex(/^\\d+(\\.\\d{1,2})?$/, 'Invalid amount format')\r\n    .transform((val) => parseFloat(val))\r\n    .refine((val) => val > 0, 'Amount must be positive')\r\n    .refine((val) => val <= 10000, 'Amount cannot exceed $10,000'),\r\n\r\n  withdrawAmount: z\r\n    .number()\r\n    .positive('Amount must be positive')\r\n    .min(10, 'Minimum withdrawal is $20')\r\n    .refine((val) => Math.round(val * 100) / 100 === val, 'Amount must have at most 2 decimal places'),\r\n\r\n  depositAmount: z\r\n    .number()\r\n    .positive('Amount must be positive')\r\n    .min(5, 'Minimum deposit is $5')\r\n    .max(5000, 'Maximum deposit is $5,000')\r\n    .refine((val) => Math.round(val * 100) / 100 === val, 'Amount must have at most 2 decimal places'),\r\n\r\n  bankAccount: z.object({\r\n    accountHolder: z\r\n      .string()\r\n      .min(2, 'Account holder name is required')\r\n      .max(100, 'Account holder name is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    accountNumber: z\r\n      .string()\r\n      .min(8, 'Account number must be at least 8 characters')\r\n      .max(20, 'Account number is too long')\r\n      .regex(/^\\d+$/, 'Account number must contain only digits'),\r\n    routingNumber: z\r\n      .string()\r\n      .length(9, 'Routing number must be exactly 9 digits')\r\n      .regex(/^\\d{9}$/, 'Invalid routing number format'),\r\n    bankName: z\r\n      .string()\r\n      .min(2, 'Bank name is required')\r\n      .max(100, 'Bank name is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n  }),\r\n\r\n  paymentMethod: z.enum(['credit_card', 'debit_card', 'bank_transfer', 'wallet_balance'], {\r\n    required_error: 'Please select a payment method',\r\n  }),\r\n};\r\n\r\n/**\r\n * Address schemas\r\n */\r\nexport const addressSchemas = {\r\n  shippingAddress: z.object({\r\n    fullName: z\r\n      .string()\r\n      .min(2, 'Full name is required')\r\n      .max(100, 'Full name is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    streetAddress: z\r\n      .string()\r\n      .min(5, 'Street address is required')\r\n      .max(200, 'Street address is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    apartment: z\r\n      .string()\r\n      .max(50, 'Apartment/Suite is too long')\r\n      .transform(sanitizers.normalizeSpaces)\r\n      .optional(),\r\n    city: z\r\n      .string()\r\n      .min(2, 'City is required')\r\n      .max(100, 'City is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    state: z\r\n      .string()\r\n      .min(2, 'State/Province is required')\r\n      .max(100, 'State/Province is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    zipCode: z\r\n      .string()\r\n      .min(3, 'ZIP/Postal code is required')\r\n      .max(20, 'ZIP/Postal code is too long')\r\n      .regex(/^[A-Z0-9\\s-]+$/i, 'Invalid ZIP/Postal code format'),\r\n    country: z\r\n      .string()\r\n      .min(2, 'Country is required')\r\n      .max(100, 'Country is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    phone: z\r\n      .string()\r\n      .min(10, 'Phone number is required')\r\n      .max(20, 'Phone number is too long')\r\n      .regex(PATTERNS.phone, 'Invalid phone number format')\r\n      .optional(),\r\n  }),\r\n};\r\n\r\n/**\r\n * Search and filter schemas\r\n */\r\nexport const searchSchemas = {\r\n  searchQuery: z\r\n    .string()\r\n    .max(100, 'Search query is too long')\r\n    .transform(sanitizers.normalizeSpaces)\r\n    .refine(\r\n      (val) => !/<[^>]*>/.test(val),\r\n      'Search query cannot contain HTML'\r\n    ),\r\n\r\n  priceRange: z.object({\r\n    min: z.number().min(0, 'Minimum price cannot be negative').optional(),\r\n    max: z.number().positive('Maximum price must be positive').optional(),\r\n  }).refine(\r\n    (data) => {\r\n      if (data.min !== undefined && data.max !== undefined) {\r\n        return data.min <= data.max;\r\n      }\r\n      return true;\r\n    },\r\n    { message: 'Minimum price cannot be greater than maximum price' }\r\n  ),\r\n\r\n  sortBy: z.enum(['newest', 'oldest', 'price_low', 'price_high', 'popular'], {\r\n    required_error: 'Invalid sort option',\r\n  }).default('newest'),\r\n};\r\n\r\n/**\r\n * Admin schemas\r\n */\r\nexport const adminSchemas = {\r\n  banUser: z.object({\r\n    userId: z.string().min(1, 'User ID is required'),\r\n    reason: z\r\n      .string()\r\n      .min(10, 'Ban reason must be at least 10 characters')\r\n      .max(500, 'Ban reason is too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n    duration: z.enum(['1_day', '7_days', '30_days', 'permanent'], {\r\n      required_error: 'Please select ban duration',\r\n    }),\r\n  }),\r\n\r\n  reportAction: z.object({\r\n    action: z.enum(['dismiss', 'warn', 'ban', 'delete_content'], {\r\n      required_error: 'Please select an action',\r\n    }),\r\n    notes: z\r\n      .string()\r\n      .min(10, 'Notes must be at least 10 characters')\r\n      .max(500, 'Notes are too long')\r\n      .transform(sanitizers.normalizeSpaces),\r\n  }),\r\n};\r\n\r\n/**\r\n * File upload schemas\r\n */\r\nexport const fileSchemas = {\r\n  imageUpload: z.object({\r\n    file: z.instanceof(File, { message: 'Please select a file' })\r\n      .refine((file) => file.size <= 5 * 1024 * 1024, 'File size must be less than 5MB')\r\n      .refine(\r\n        (file) => ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'].includes(file.type),\r\n        'Only JPEG, PNG, and WebP images are allowed'\r\n      ),\r\n  }),\r\n\r\n  documentUpload: z.object({\r\n    file: z.instanceof(File, { message: 'Please select a file' })\r\n      .refine((file) => file.size <= 10 * 1024 * 1024, 'File size must be less than 10MB')\r\n      .refine(\r\n        (file) => ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'].includes(file.type),\r\n        'Only JPEG, PNG, and PDF files are allowed'\r\n      ),\r\n  }),\r\n};\r\n\r\n/**\r\n * Helper function to validate data against a schema\r\n */\r\nexport function validateSchema<T>(schema: z.ZodSchema<T>, data: unknown): {\r\n  success: boolean;\r\n  data?: T;\r\n  errors?: Record<string, string>;\r\n} {\r\n  try {\r\n    const validatedData = schema.parse(data);\r\n    return { success: true, data: validatedData };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      const errors: Record<string, string> = {};\r\n      error.errors.forEach((err) => {\r\n        if (err.path.length > 0) {\r\n          errors[err.path.join('.')] = err.message;\r\n        }\r\n      });\r\n      return { success: false, errors };\r\n    }\r\n    return { success: false, errors: { general: 'Validation failed' } };\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function to get field-level validation\r\n */\r\nexport function validateField<T>(\r\n  schema: z.ZodSchema<T>,\r\n  fieldName: string,\r\n  value: unknown\r\n): string | undefined {\r\n  try {\r\n    const fieldSchema = (schema as any).shape[fieldName];\r\n    if (fieldSchema) {\r\n      fieldSchema.parse(value);\r\n    }\r\n    return undefined;\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return error.errors[0]?.message;\r\n    }\r\n    return 'Validation failed';\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1213, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/security/rate-limiter.ts"],"sourcesContent":["// src/utils/security/rate-limiter.ts\r\n\r\n/**\r\n * Client-side rate limiting implementation\r\n * Helps prevent spam and abuse of forms/API calls\r\n */\r\n\r\ninterface RateLimitConfig {\r\n  maxAttempts: number;\r\n  windowMs: number;\r\n  identifier?: string;\r\n  blockDuration?: number; // Add optional custom block duration\r\n}\r\n\r\ninterface RateLimitEntry {\r\n  attempts: number;\r\n  firstAttemptTime: number;\r\n  blockedUntil?: number;\r\n}\r\n\r\n/**\r\n * Rate limiter for different actions\r\n */\r\nexport class ActionRateLimiter {\r\n  private limits: Map<string, RateLimitEntry> = new Map();\r\n  private readonly storageKey = 'rate_limits';\r\n\r\n  constructor() {\r\n    this.loadFromStorage();\r\n    this.cleanupExpired();\r\n  }\r\n\r\n  /**\r\n   * Check if an action is allowed\r\n   */\r\n  check(action: string, config: RateLimitConfig): {\r\n    allowed: boolean;\r\n    remainingAttempts: number;\r\n    resetTime?: Date;\r\n    waitTime?: number;\r\n  } {\r\n    const key = this.getKey(action, config.identifier);\r\n    const now = Date.now();\r\n    const entry = this.limits.get(key);\r\n\r\n    // Clean up old entries periodically\r\n    if (Math.random() < 0.1) {\r\n      this.cleanupExpired();\r\n    }\r\n\r\n    // Check if blocked\r\n    if (entry?.blockedUntil && entry.blockedUntil > now) {\r\n      const waitTime = Math.ceil((entry.blockedUntil - now) / 1000);\r\n      return {\r\n        allowed: false,\r\n        remainingAttempts: 0,\r\n        resetTime: new Date(entry.blockedUntil),\r\n        waitTime,\r\n      };\r\n    }\r\n\r\n    // No entry or window expired\r\n    if (!entry || now - entry.firstAttemptTime > config.windowMs) {\r\n      this.limits.set(key, {\r\n        attempts: 1,\r\n        firstAttemptTime: now,\r\n      });\r\n      this.saveToStorage();\r\n      \r\n      return {\r\n        allowed: true,\r\n        remainingAttempts: config.maxAttempts - 1,\r\n        resetTime: new Date(now + config.windowMs),\r\n      };\r\n    }\r\n\r\n    // Within window\r\n    if (entry.attempts >= config.maxAttempts) {\r\n      // Use custom block duration or default to a reasonable time\r\n      const blockDuration = config.blockDuration || Math.min(config.windowMs, 60 * 60 * 1000); // Max 1 hour default\r\n      entry.blockedUntil = now + blockDuration;\r\n      this.saveToStorage();\r\n      \r\n      return {\r\n        allowed: false,\r\n        remainingAttempts: 0,\r\n        resetTime: new Date(entry.blockedUntil),\r\n        waitTime: Math.ceil(blockDuration / 1000),\r\n      };\r\n    }\r\n\r\n    // Increment attempts\r\n    entry.attempts++;\r\n    this.saveToStorage();\r\n    \r\n    return {\r\n      allowed: true,\r\n      remainingAttempts: config.maxAttempts - entry.attempts,\r\n      resetTime: new Date(entry.firstAttemptTime + config.windowMs),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reset rate limit for specific action\r\n   */\r\n  reset(action: string, identifier?: string): void {\r\n    const key = this.getKey(action, identifier);\r\n    this.limits.delete(key);\r\n    this.saveToStorage();\r\n  }\r\n\r\n  /**\r\n   * Get key for rate limit entry\r\n   */\r\n  private getKey(action: string, identifier?: string): string {\r\n    return identifier ? `${action}:${identifier}` : action;\r\n  }\r\n\r\n  /**\r\n   * Load rate limits from localStorage\r\n   */\r\n  private loadFromStorage(): void {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    try {\r\n      const stored = localStorage.getItem(this.storageKey);\r\n      if (stored) {\r\n        const data = JSON.parse(stored);\r\n        this.limits = new Map(Object.entries(data));\r\n      }\r\n    } catch {\r\n      // Ignore errors\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save rate limits to localStorage\r\n   */\r\n  private saveToStorage(): void {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    try {\r\n      const data: Record<string, RateLimitEntry> = {};\r\n      this.limits.forEach((value, key) => {\r\n        data[key] = value;\r\n      });\r\n      localStorage.setItem(this.storageKey, JSON.stringify(data));\r\n    } catch {\r\n      // Ignore errors\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up expired entries\r\n   */\r\n  private cleanupExpired(): void {\r\n    const now = Date.now();\r\n    const maxAge = 24 * 60 * 60 * 1000; // 24 hours\r\n\r\n    this.limits.forEach((entry, key) => {\r\n      if (now - entry.firstAttemptTime > maxAge) {\r\n        this.limits.delete(key);\r\n      }\r\n    });\r\n\r\n    this.saveToStorage();\r\n  }\r\n}\r\n\r\n/**\r\n * Predefined rate limit configurations\r\n */\r\nexport const RATE_LIMITS = {\r\n  // Authentication - INCREASED FOR TESTING\r\n  LOGIN: {\r\n    maxAttempts: 300, // Increased from 5 to 300 for testing\r\n    windowMs: 30 * 60 * 1000, // Changed to 30 minutes\r\n    blockDuration: 30 * 60 * 1000, // Block for 30 minutes\r\n  },\r\n  SIGNUP: {\r\n    maxAttempts: 3,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour\r\n  },\r\n  PASSWORD_RESET: {\r\n    maxAttempts: 3,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour\r\n  },\r\n\r\n  // User actions\r\n  MESSAGE_SEND: {\r\n    maxAttempts: 30,\r\n    windowMs: 60 * 1000, // 1 minute\r\n    blockDuration: 5 * 60 * 1000, // Block for 5 minutes\r\n  },\r\n  LISTING_CREATE: {\r\n    maxAttempts: 10,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour\r\n  },\r\n  CUSTOM_REQUEST: {\r\n    maxAttempts: 5,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour\r\n  },\r\n\r\n  // Financial - More reasonable block times\r\n  WITHDRAWAL: {\r\n    maxAttempts: 5,\r\n    windowMs: 15 * 60 * 1000, // 15 minutes\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour if exceeded\r\n  },\r\n  DEPOSIT: {\r\n    maxAttempts: 10,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 30 * 60 * 1000, // Block for 30 minutes\r\n  },\r\n  TIP: {\r\n    maxAttempts: 20,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 30 * 60 * 1000, // Block for 30 minutes\r\n  },\r\n\r\n  // Search/Browse\r\n  SEARCH: {\r\n    maxAttempts: 60,\r\n    windowMs: 60 * 1000, // 1 minute\r\n    blockDuration: 5 * 60 * 1000, // Block for 5 minutes\r\n  },\r\n  API_CALL: {\r\n    maxAttempts: 100,\r\n    windowMs: 60 * 1000, // 1 minute\r\n    blockDuration: 5 * 60 * 1000, // Block for 5 minutes\r\n  },\r\n\r\n  // File uploads\r\n  IMAGE_UPLOAD: {\r\n    maxAttempts: 20,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 30 * 60 * 1000, // Block for 30 minutes\r\n  },\r\n  DOCUMENT_UPLOAD: {\r\n    maxAttempts: 5,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour\r\n  },\r\n\r\n  // Admin actions\r\n  BAN_USER: {\r\n    maxAttempts: 10,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 60 * 60 * 1000, // Block for 1 hour\r\n  },\r\n  REPORT_ACTION: {\r\n    maxAttempts: 20,\r\n    windowMs: 60 * 60 * 1000, // 1 hour\r\n    blockDuration: 30 * 60 * 1000, // Block for 30 minutes\r\n  },\r\n};\r\n\r\n/**\r\n * Global rate limiter instance\r\n */\r\nlet rateLimiterInstance: ActionRateLimiter | null = null;\r\n\r\nexport function getRateLimiter(): ActionRateLimiter {\r\n  if (!rateLimiterInstance) {\r\n    rateLimiterInstance = new ActionRateLimiter();\r\n  }\r\n  return rateLimiterInstance;\r\n}\r\n\r\n/**\r\n * Rate limit decorator for functions\r\n */\r\nexport function rateLimit(action: string, config: RateLimitConfig) {\r\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n    const originalMethod = descriptor.value;\r\n\r\n    descriptor.value = async function (...args: any[]) {\r\n      const limiter = getRateLimiter();\r\n      const result = limiter.check(action, config);\r\n\r\n      if (!result.allowed) {\r\n        throw new Error(\r\n          `Rate limit exceeded. Please wait ${result.waitTime} seconds before trying again.`\r\n        );\r\n      }\r\n\r\n      return originalMethod.apply(this, args);\r\n    };\r\n\r\n    return descriptor;\r\n  };\r\n}\r\n\r\n/**\r\n * React hook for rate limiting\r\n */\r\nexport function useRateLimit(action: string, config: RateLimitConfig = RATE_LIMITS.API_CALL) {\r\n  const limiter = getRateLimiter();\r\n\r\n  const checkLimit = (identifier?: string) => {\r\n    return limiter.check(action, { ...config, identifier });\r\n  };\r\n\r\n  const resetLimit = (identifier?: string) => {\r\n    limiter.reset(action, identifier);\r\n  };\r\n\r\n  return { checkLimit, resetLimit };\r\n}\r\n\r\n/**\r\n * Middleware-style rate limit checker\r\n */\r\nexport async function withRateLimit<T>(\r\n  action: string,\r\n  config: RateLimitConfig,\r\n  callback: () => Promise<T>\r\n): Promise<T> {\r\n  const limiter = getRateLimiter();\r\n  const result = limiter.check(action, config);\r\n\r\n  if (!result.allowed) {\r\n    throw new Error(\r\n      `Rate limit exceeded. Please wait ${result.waitTime} seconds before trying again.`\r\n    );\r\n  }\r\n\r\n  try {\r\n    return await callback();\r\n  } catch (error) {\r\n    // On error, give back one attempt\r\n    limiter.reset(action, config.identifier);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Format wait time for user display\r\n */\r\nexport function formatWaitTime(seconds: number): string {\r\n  if (seconds < 60) {\r\n    return `${seconds} second${seconds === 1 ? '' : 's'}`;\r\n  }\r\n\r\n  const minutes = Math.ceil(seconds / 60);\r\n  if (minutes < 60) {\r\n    return `${minutes} minute${minutes === 1 ? '' : 's'}`;\r\n  }\r\n\r\n  const hours = Math.ceil(minutes / 60);\r\n  if (hours < 24) {\r\n    return `${hours} hour${hours === 1 ? '' : 's'}`;\r\n  }\r\n\r\n  const days = Math.ceil(hours / 24);\r\n  return `${days} day${days === 1 ? '' : 's'}`;\r\n}\r\n\r\n/**\r\n * Get human-readable rate limit message\r\n */\r\nexport function getRateLimitMessage(result: ReturnType<ActionRateLimiter['check']>): string {\r\n  if (result.allowed) {\r\n    if (result.remainingAttempts <= 3) {\r\n      return `You have ${result.remainingAttempts} attempt${\r\n        result.remainingAttempts === 1 ? '' : 's'\r\n      } remaining.`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  if (result.waitTime) {\r\n    return `Too many attempts. Please wait ${formatWaitTime(result.waitTime)} before trying again.`;\r\n  }\r\n\r\n  return 'Rate limit exceeded. Please try again later.';\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/security/validation.ts"],"sourcesContent":["import { z } from 'zod';\r\n\r\n/**\r\n * Common validation functions for forms and inputs\r\n */\r\n\r\n/**\r\n * Validates an email address\r\n */\r\nexport function isValidEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\n/**\r\n * Validates a username\r\n */\r\nexport function isValidUsername(username: string): boolean {\r\n  const usernameRegex = /^[a-zA-Z0-9_-]{3,30}$/;\r\n  return usernameRegex.test(username);\r\n}\r\n\r\n/**\r\n * Validates password strength (summary type)\r\n */\r\nexport interface PasswordStrength {\r\n  isValid: boolean;\r\n  score: number; // 0-5\r\n  feedback: string[];\r\n}\r\n\r\n/**\r\n * HOISTED, STABLE export to avoid TDZ/circular surprises.\r\n * Returns a simple boolean using the strength rules below.\r\n */\r\nexport function isValidPassword(password: string): boolean {\r\n  return validatePasswordStrength(password).isValid;\r\n}\r\n\r\nexport function validatePasswordStrength(password: string): PasswordStrength {\r\n  const feedback: string[] = [];\r\n  let score = 0;\r\n\r\n  if (!password) {\r\n    return {\r\n      isValid: false,\r\n      score: 0,\r\n      feedback: ['Password is required'],\r\n    };\r\n  }\r\n\r\n  // Length check\r\n  if (password.length >= 8) {\r\n    score++;\r\n  } else {\r\n    feedback.push('Must be at least 8 characters');\r\n  }\r\n\r\n  if (password.length >= 12) {\r\n    score++;\r\n  }\r\n\r\n  // Uppercase check\r\n  if (/[A-Z]/.test(password)) {\r\n    score++;\r\n  } else {\r\n    feedback.push('Include at least one uppercase letter');\r\n  }\r\n\r\n  // Lowercase check\r\n  if (/[a-z]/.test(password)) {\r\n    score++;\r\n  } else {\r\n    feedback.push('Include at least one lowercase letter');\r\n  }\r\n\r\n  // Number check\r\n  if (/\\d/.test(password)) {\r\n    score++;\r\n  } else {\r\n    feedback.push('Include at least one number');\r\n  }\r\n\r\n  // Special character check\r\n  if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n    score++;\r\n    feedback.push('Great! Contains special characters');\r\n  }\r\n\r\n  // Common patterns to avoid\r\n  const commonPatterns = [\r\n    /^12345/,\r\n    /^password/i,\r\n    /^qwerty/i,\r\n    /^abc123/i,\r\n    /^admin/i,\r\n  ];\r\n\r\n  const hasCommonPattern = commonPatterns.some((pattern) => pattern.test(password));\r\n  if (hasCommonPattern) {\r\n    score = Math.max(0, score - 2);\r\n    feedback.push('Avoid common patterns');\r\n  }\r\n\r\n  const isValid =\r\n    password.length >= 8 &&\r\n    /[A-Z]/.test(password) &&\r\n    /[a-z]/.test(password) &&\r\n    /\\d/.test(password);\r\n\r\n  return {\r\n    isValid,\r\n    score: Math.min(5, score),\r\n    feedback: isValid && feedback.length === 0 ? ['Strong password!'] : feedback,\r\n  };\r\n}\r\n\r\n/**\r\n * Validates a URL\r\n */\r\nexport function isValidUrl(url: string): boolean {\r\n  try {\r\n    const urlObj = new URL(url);\r\n    return ['http:', 'https:'].includes(urlObj.protocol);\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Validates a phone number (international format)\r\n */\r\nexport function isValidPhoneNumber(phone: string): boolean {\r\n  const phoneRegex = /^\\+?[\\d\\s-()]+$/;\r\n  return phoneRegex.test(phone) && phone.replace(/\\D/g, '').length >= 10;\r\n}\r\n\r\n/**\r\n * Validates a credit card number using Luhn algorithm\r\n */\r\nexport function isValidCreditCard(cardNumber: string): boolean {\r\n  const cleaned = cardNumber.replace(/\\s/g, '');\r\n\r\n  if (!/^\\d{13,19}$/.test(cleaned)) {\r\n    return false;\r\n  }\r\n\r\n  let sum = 0;\r\n  let isEven = false;\r\n\r\n  for (let i = cleaned.length - 1; i >= 0; i--) {\r\n    let digit = parseInt(cleaned[i], 10);\r\n\r\n    if (isEven) {\r\n      digit *= 2;\r\n      if (digit > 9) {\r\n        digit -= 9;\r\n      }\r\n    }\r\n\r\n    sum += digit;\r\n    isEven = !isEven;\r\n  }\r\n\r\n  return sum % 10 === 0;\r\n}\r\n\r\n/**\r\n * Validates an image file\r\n */\r\nexport interface ImageValidationResult {\r\n  isValid: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport function validateImageFile(file: File): ImageValidationResult {\r\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n  const maxSize = 5 * 1024 * 1024; // 5MB\r\n\r\n  if (!file) {\r\n    return { isValid: false, error: 'No file selected' };\r\n  }\r\n\r\n  if (!allowedTypes.includes(file.type)) {\r\n    return { isValid: false, error: 'Only JPEG, PNG, and WebP images are allowed' };\r\n  }\r\n\r\n  if (file.size > maxSize) {\r\n    return { isValid: false, error: 'File size must be less than 5MB' };\r\n  }\r\n\r\n  return { isValid: true };\r\n}\r\n\r\n/**\r\n * Validates listing price\r\n */\r\nexport function isValidPrice(price: string | number): boolean {\r\n  const numPrice = typeof price === 'string' ? parseFloat(price) : price;\r\n\r\n  if (isNaN(numPrice) || !isFinite(numPrice)) {\r\n    return false;\r\n  }\r\n\r\n  return numPrice >= 0.01 && numPrice <= 10000;\r\n}\r\n\r\n/**\r\n * Validates a date is in the future\r\n */\r\nexport function isFutureDate(date: Date | string): boolean {\r\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n  return dateObj > new Date();\r\n}\r\n\r\n/**\r\n * Validates age (must be 18+)\r\n */\r\nexport function isValidAge(birthDate: Date | string): boolean {\r\n  const date = typeof birthDate === 'string' ? new Date(birthDate) : birthDate;\r\n  const today = new Date();\r\n  const age = today.getFullYear() - date.getFullYear();\r\n  const monthDiff = today.getMonth() - date.getMonth();\r\n\r\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < date.getDate())) {\r\n    return age - 1 >= 18;\r\n  }\r\n\r\n  return age >= 18;\r\n}\r\n\r\n/**\r\n * Validates Bitcoin address\r\n */\r\nexport function isValidBitcoinAddress(address: string): boolean {\r\n  // Basic Bitcoin address validation (simplified)\r\n  const btcRegex = /^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^bc1[a-z0-9]{39,59}$/;\r\n  return btcRegex.test(address);\r\n}\r\n\r\n/**\r\n * Validates Ethereum address\r\n */\r\nexport function isValidEthereumAddress(address: string): boolean {\r\n  const ethRegex = /^0x[a-fA-F0-9]{40}$/;\r\n  return ethRegex.test(address);\r\n}\r\n\r\n/**\r\n * Validates bank account number (US)\r\n */\r\nexport function isValidBankAccount(accountNumber: string): boolean {\r\n  const cleaned = accountNumber.replace(/\\D/g, '');\r\n  return cleaned.length >= 8 && cleaned.length <= 17;\r\n}\r\n\r\n/**\r\n * Validates routing number (US)\r\n */\r\nexport function isValidRoutingNumber(routingNumber: string): boolean {\r\n  const cleaned = routingNumber.replace(/\\D/g, '');\r\n\r\n  if (cleaned.length !== 9) {\r\n    return false;\r\n  }\r\n\r\n  // Checksum validation for US routing numbers\r\n  let sum = 0;\r\n  for (let i = 0; i < 9; i += 3) {\r\n    sum += parseInt(cleaned[i], 10) * 3;\r\n    sum += parseInt(cleaned[i + 1], 10) * 7;\r\n    sum += parseInt(cleaned[i + 2], 10) * 1;\r\n  }\r\n\r\n  return sum % 10 === 0;\r\n}\r\n\r\n/**\r\n * Validates a color hex code\r\n */\r\nexport function isValidHexColor(color: string): boolean {\r\n  const hexRegex = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\r\n  return hexRegex.test(color);\r\n}\r\n\r\n/**\r\n * Validates file extension\r\n */\r\nexport function hasValidExtension(filename: string, allowedExtensions: string[]): boolean {\r\n  const ext = filename.split('.').pop()?.toLowerCase();\r\n  return ext ? allowedExtensions.includes(ext) : false;\r\n}\r\n\r\n/**\r\n * Validates a UUID\r\n */\r\nexport function isValidUUID(uuid: string): boolean {\r\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n  return uuidRegex.test(uuid);\r\n}\r\n\r\n/**\r\n * Rate limiting helper\r\n */\r\nexport class RateLimiter {\r\n  private attempts: Map<string, { count: number; firstAttempt: number }> = new Map();\r\n  private readonly maxAttempts: number;\r\n  private readonly windowMs: number;\r\n\r\n  constructor(maxAttempts: number = 5, windowMs: number = 60000) {\r\n    this.maxAttempts = maxAttempts;\r\n    this.windowMs = windowMs;\r\n  }\r\n\r\n  isAllowed(key: string): boolean {\r\n    const now = Date.now();\r\n    const attempt = this.attempts.get(key);\r\n\r\n    if (!attempt) {\r\n      this.attempts.set(key, { count: 1, firstAttempt: now });\r\n      return true;\r\n    }\r\n\r\n    if (now - attempt.firstAttempt > this.windowMs) {\r\n      // Reset window\r\n      this.attempts.set(key, { count: 1, firstAttempt: now });\r\n      return true;\r\n    }\r\n\r\n    if (attempt.count >= this.maxAttempts) {\r\n      return false;\r\n    }\r\n\r\n    attempt.count++;\r\n    return true;\r\n  }\r\n\r\n  reset(key: string): void {\r\n    this.attempts.delete(key);\r\n  }\r\n\r\n  getRemainingAttempts(key: string): number {\r\n    const attempt = this.attempts.get(key);\r\n    if (!attempt) return this.maxAttempts;\r\n\r\n    const now = Date.now();\r\n    if (now - attempt.firstAttempt > this.windowMs) {\r\n      return this.maxAttempts;\r\n    }\r\n\r\n    return Math.max(0, this.maxAttempts - attempt.count);\r\n  }\r\n\r\n  getResetTime(key: string): number | null {\r\n    const attempt = this.attempts.get(key);\r\n    if (!attempt) return null;\r\n\r\n    return attempt.firstAttempt + this.windowMs;\r\n  }\r\n}\r\n\r\n/**\r\n * CSRF token management (client-side preparation)\r\n */\r\nexport class CSRFTokenManager {\r\n  private token: string | null = null;\r\n  private readonly tokenKey = 'csrf_token';\r\n\r\n  generateToken(): string {\r\n    if (typeof window === 'undefined') {\r\n      return '';\r\n    }\r\n\r\n    const array = new Uint8Array(32);\r\n    window.crypto.getRandomValues(array);\r\n    const token = btoa(String.fromCharCode(...array));\r\n\r\n    this.token = token;\r\n    sessionStorage.setItem(this.tokenKey, token);\r\n\r\n    return token;\r\n  }\r\n\r\n  getToken(): string | null {\r\n    if (this.token) {\r\n      return this.token;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n      this.token = sessionStorage.getItem(this.tokenKey);\r\n    }\r\n\r\n    return this.token;\r\n  }\r\n\r\n  validateToken(token: string): boolean {\r\n    const storedToken = this.getToken();\r\n    return storedToken !== null && storedToken === token;\r\n  }\r\n\r\n  clearToken(): void {\r\n    this.token = null;\r\n    if (typeof window !== 'undefined') {\r\n      sessionStorage.removeItem(this.tokenKey);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Input debouncing for validation\r\n */\r\nexport function debounce<T extends (...args: any[]) => any>(func: T, wait: number): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout | null = null;\r\n\r\n  return function executedFunction(...args: Parameters<T>) {\r\n    const later = () => {\r\n      timeout = null;\r\n      func(...args);\r\n    };\r\n\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\n/**\r\n * Safe JSON parse with validation\r\n */\r\nexport function safeJsonParse<T>(\r\n  json: string,\r\n  schema?: z.ZodSchema<T>\r\n): { success: boolean; data?: T; error?: string } {\r\n  try {\r\n    const parsed = JSON.parse(json);\r\n\r\n    if (schema) {\r\n      const result = schema.safeParse(parsed);\r\n      if (!result.success) {\r\n        return { success: false, error: 'Invalid data format' };\r\n      }\r\n      return { success: true, data: result.data };\r\n    }\r\n\r\n    return { success: true, data: parsed };\r\n  } catch (error) {\r\n    return { success: false, error: 'Invalid JSON' };\r\n  }\r\n}\r\n\r\n/**\r\n * Validates form data against schema\r\n */\r\nexport async function validateFormData<T>(\r\n  data: unknown,\r\n  schema: z.ZodSchema<T>\r\n): Promise<{ isValid: boolean; data?: T; errors?: Record<string, string> }> {\r\n  try {\r\n    const validData = await schema.parseAsync(data);\r\n    return { isValid: true, data: validData };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      const errors: Record<string, string> = {};\r\n      error.errors.forEach((err) => {\r\n        const path = err.path.join('.');\r\n        errors[path] = err.message;\r\n      });\r\n      return { isValid: false, errors };\r\n    }\r\n    return { isValid: false, errors: { general: 'Validation failed' } };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AASO,SAAS,aAAa,KAAa;IACxC,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC;AACzB;AAKO,SAAS,gBAAgB,QAAgB;IAC9C,MAAM,gBAAgB;IACtB,OAAO,cAAc,IAAI,CAAC;AAC5B;AAeO,SAAS,gBAAgB,QAAgB;IAC9C,OAAO,yBAAyB,UAAU,OAAO;AACnD;AAEO,SAAS,yBAAyB,QAAgB;IACvD,MAAM,WAAqB,EAAE;IAC7B,IAAI,QAAQ;IAEZ,IAAI,CAAC,UAAU;QACb,OAAO;YACL,SAAS;YACT,OAAO;YACP,UAAU;gBAAC;aAAuB;QACpC;IACF;IAEA,eAAe;IACf,IAAI,SAAS,MAAM,IAAI,GAAG;QACxB;IACF,OAAO;QACL,SAAS,IAAI,CAAC;IAChB;IAEA,IAAI,SAAS,MAAM,IAAI,IAAI;QACzB;IACF;IAEA,kBAAkB;IAClB,IAAI,QAAQ,IAAI,CAAC,WAAW;QAC1B;IACF,OAAO;QACL,SAAS,IAAI,CAAC;IAChB;IAEA,kBAAkB;IAClB,IAAI,QAAQ,IAAI,CAAC,WAAW;QAC1B;IACF,OAAO;QACL,SAAS,IAAI,CAAC;IAChB;IAEA,eAAe;IACf,IAAI,KAAK,IAAI,CAAC,WAAW;QACvB;IACF,OAAO;QACL,SAAS,IAAI,CAAC;IAChB;IAEA,0BAA0B;IAC1B,IAAI,yBAAyB,IAAI,CAAC,WAAW;QAC3C;QACA,SAAS,IAAI,CAAC;IAChB;IAEA,2BAA2B;IAC3B,MAAM,iBAAiB;QACrB;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,mBAAmB,eAAe,IAAI,CAAC,CAAC,UAAY,QAAQ,IAAI,CAAC;IACvE,IAAI,kBAAkB;QACpB,QAAQ,KAAK,GAAG,CAAC,GAAG,QAAQ;QAC5B,SAAS,IAAI,CAAC;IAChB;IAEA,MAAM,UACJ,SAAS,MAAM,IAAI,KACnB,QAAQ,IAAI,CAAC,aACb,QAAQ,IAAI,CAAC,aACb,KAAK,IAAI,CAAC;IAEZ,OAAO;QACL;QACA,OAAO,KAAK,GAAG,CAAC,GAAG;QACnB,UAAU,WAAW,SAAS,MAAM,KAAK,IAAI;YAAC;SAAmB,GAAG;IACtE;AACF;AAKO,SAAS,WAAW,GAAW;IACpC,IAAI;QACF,MAAM,SAAS,IAAI,IAAI;QACvB,OAAO;YAAC;YAAS;SAAS,CAAC,QAAQ,CAAC,OAAO,QAAQ;IACrD,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAKO,SAAS,mBAAmB,KAAa;IAC9C,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC,UAAU,MAAM,OAAO,CAAC,OAAO,IAAI,MAAM,IAAI;AACtE;AAKO,SAAS,kBAAkB,UAAkB;IAClD,MAAM,UAAU,WAAW,OAAO,CAAC,OAAO;IAE1C,IAAI,CAAC,cAAc,IAAI,CAAC,UAAU;QAChC,OAAO;IACT;IAEA,IAAI,MAAM;IACV,IAAI,SAAS;IAEb,IAAK,IAAI,IAAI,QAAQ,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;QAC5C,IAAI,QAAQ,SAAS,OAAO,CAAC,EAAE,EAAE;QAEjC,IAAI,QAAQ;YACV,SAAS;YACT,IAAI,QAAQ,GAAG;gBACb,SAAS;YACX;QACF;QAEA,OAAO;QACP,SAAS,CAAC;IACZ;IAEA,OAAO,MAAM,OAAO;AACtB;AAUO,SAAS,kBAAkB,IAAU;IAC1C,MAAM,eAAe;QAAC;QAAc;QAAa;QAAa;KAAa;IAC3E,MAAM,UAAU,IAAI,OAAO,MAAM,MAAM;IAEvC,IAAI,CAAC,MAAM;QACT,OAAO;YAAE,SAAS;YAAO,OAAO;QAAmB;IACrD;IAEA,IAAI,CAAC,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;QACrC,OAAO;YAAE,SAAS;YAAO,OAAO;QAA8C;IAChF;IAEA,IAAI,KAAK,IAAI,GAAG,SAAS;QACvB,OAAO;YAAE,SAAS;YAAO,OAAO;QAAkC;IACpE;IAEA,OAAO;QAAE,SAAS;IAAK;AACzB;AAKO,SAAS,aAAa,KAAsB;IACjD,MAAM,WAAW,OAAO,UAAU,WAAW,WAAW,SAAS;IAEjE,IAAI,MAAM,aAAa,CAAC,SAAS,WAAW;QAC1C,OAAO;IACT;IAEA,OAAO,YAAY,QAAQ,YAAY;AACzC;AAKO,SAAS,aAAa,IAAmB;IAC9C,MAAM,UAAU,OAAO,SAAS,WAAW,IAAI,KAAK,QAAQ;IAC5D,OAAO,UAAU,IAAI;AACvB;AAKO,SAAS,WAAW,SAAwB;IACjD,MAAM,OAAO,OAAO,cAAc,WAAW,IAAI,KAAK,aAAa;IACnE,MAAM,QAAQ,IAAI;IAClB,MAAM,MAAM,MAAM,WAAW,KAAK,KAAK,WAAW;IAClD,MAAM,YAAY,MAAM,QAAQ,KAAK,KAAK,QAAQ;IAElD,IAAI,YAAY,KAAM,cAAc,KAAK,MAAM,OAAO,KAAK,KAAK,OAAO,IAAK;QAC1E,OAAO,MAAM,KAAK;IACpB;IAEA,OAAO,OAAO;AAChB;AAKO,SAAS,sBAAsB,OAAe;IACnD,gDAAgD;IAChD,MAAM,WAAW;IACjB,OAAO,SAAS,IAAI,CAAC;AACvB;AAKO,SAAS,uBAAuB,OAAe;IACpD,MAAM,WAAW;IACjB,OAAO,SAAS,IAAI,CAAC;AACvB;AAKO,SAAS,mBAAmB,aAAqB;IACtD,MAAM,UAAU,cAAc,OAAO,CAAC,OAAO;IAC7C,OAAO,QAAQ,MAAM,IAAI,KAAK,QAAQ,MAAM,IAAI;AAClD;AAKO,SAAS,qBAAqB,aAAqB;IACxD,MAAM,UAAU,cAAc,OAAO,CAAC,OAAO;IAE7C,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,OAAO;IACT;IAEA,6CAA6C;IAC7C,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,EAAG;QAC7B,OAAO,SAAS,OAAO,CAAC,EAAE,EAAE,MAAM;QAClC,OAAO,SAAS,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM;QACtC,OAAO,SAAS,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM;IACxC;IAEA,OAAO,MAAM,OAAO;AACtB;AAKO,SAAS,gBAAgB,KAAa;IAC3C,MAAM,WAAW;IACjB,OAAO,SAAS,IAAI,CAAC;AACvB;AAKO,SAAS,kBAAkB,QAAgB,EAAE,iBAA2B;QACjE;IAAZ,MAAM,OAAM,sBAAA,SAAS,KAAK,CAAC,KAAK,GAAG,gBAAvB,0CAAA,oBAA2B,WAAW;IAClD,OAAO,MAAM,kBAAkB,QAAQ,CAAC,OAAO;AACjD;AAKO,SAAS,YAAY,IAAY;IACtC,MAAM,YAAY;IAClB,OAAO,UAAU,IAAI,CAAC;AACxB;AAKO,MAAM;IAUX,UAAU,GAAW,EAAW;QAC9B,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAElC,IAAI,CAAC,SAAS;YACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;gBAAE,OAAO;gBAAG,cAAc;YAAI;YACrD,OAAO;QACT;QAEA,IAAI,MAAM,QAAQ,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC9C,eAAe;YACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;gBAAE,OAAO;gBAAG,cAAc;YAAI;YACrD,OAAO;QACT;QAEA,IAAI,QAAQ,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;YACrC,OAAO;QACT;QAEA,QAAQ,KAAK;QACb,OAAO;IACT;IAEA,MAAM,GAAW,EAAQ;QACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACvB;IAEA,qBAAqB,GAAW,EAAU;QACxC,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAClC,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,WAAW;QAErC,MAAM,MAAM,KAAK,GAAG;QACpB,IAAI,MAAM,QAAQ,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC9C,OAAO,IAAI,CAAC,WAAW;QACzB;QAEA,OAAO,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,KAAK;IACrD;IAEA,aAAa,GAAW,EAAiB;QACvC,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAClC,IAAI,CAAC,SAAS,OAAO;QAErB,OAAO,QAAQ,YAAY,GAAG,IAAI,CAAC,QAAQ;IAC7C;IAjDA,YAAY,cAAsB,CAAC,EAAE,WAAmB,KAAK,CAAE;QAJ/D,+KAAQ,YAAiE,IAAI;QAC7E,+KAAiB,eAAjB,KAAA;QACA,+KAAiB,YAAjB,KAAA;QAGE,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,QAAQ,GAAG;IAClB;AA+CF;AAKO,MAAM;IAIX,gBAAwB;QACtB;;QAIA,MAAM,QAAQ,IAAI,WAAW;QAC7B,OAAO,MAAM,CAAC,eAAe,CAAC;QAC9B,MAAM,QAAQ,KAAK,OAAO,YAAY,IAAI;QAE1C,IAAI,CAAC,KAAK,GAAG;QACb,eAAe,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;QAEtC,OAAO;IACT;IAEA,WAA0B;QACxB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK;QACnB;QAEA,wCAAmC;YACjC,IAAI,CAAC,KAAK,GAAG,eAAe,OAAO,CAAC,IAAI,CAAC,QAAQ;QACnD;QAEA,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,cAAc,KAAa,EAAW;QACpC,MAAM,cAAc,IAAI,CAAC,QAAQ;QACjC,OAAO,gBAAgB,QAAQ,gBAAgB;IACjD;IAEA,aAAmB;QACjB,IAAI,CAAC,KAAK,GAAG;QACb,wCAAmC;YACjC,eAAe,UAAU,CAAC,IAAI,CAAC,QAAQ;QACzC;IACF;;QAxCA,+KAAQ,SAAuB;QAC/B,+KAAiB,YAAW;;AAwC9B;AAKO,SAAS,SAA4C,IAAO,EAAE,IAAY;IAC/E,IAAI,UAAiC;IAErC,OAAO,SAAS;QAAiB,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,OAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;YAAG,KAAH,QAAA,SAAA,CAAA,KAAsB;;QACrD,MAAM,QAAQ;YACZ,UAAU;YACV,QAAQ;QACV;QAEA,IAAI,SAAS;YACX,aAAa;QACf;QAEA,UAAU,WAAW,OAAO;IAC9B;AACF;AAKO,SAAS,cACd,IAAY,EACZ,MAAuB;IAEvB,IAAI;QACF,MAAM,SAAS,KAAK,KAAK,CAAC;QAE1B,IAAI,QAAQ;YACV,MAAM,SAAS,OAAO,SAAS,CAAC;YAChC,IAAI,CAAC,OAAO,OAAO,EAAE;gBACnB,OAAO;oBAAE,SAAS;oBAAO,OAAO;gBAAsB;YACxD;YACA,OAAO;gBAAE,SAAS;gBAAM,MAAM,OAAO,IAAI;YAAC;QAC5C;QAEA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAO;IACvC,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,SAAS;YAAO,OAAO;QAAe;IACjD;AACF;AAKO,eAAe,iBACpB,IAAa,EACb,MAAsB;IAEtB,IAAI;QACF,MAAM,YAAY,MAAM,OAAO,UAAU,CAAC;QAC1C,OAAO;YAAE,SAAS;YAAM,MAAM;QAAU;IAC1C,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,qKAAA,CAAA,IAAC,CAAC,QAAQ,EAAE;YAC/B,MAAM,SAAiC,CAAC;YACxC,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;gBACpB,MAAM,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC;gBAC3B,MAAM,CAAC,KAAK,GAAG,IAAI,OAAO;YAC5B;YACA,OAAO;gBAAE,SAAS;gBAAO;YAAO;QAClC;QACA,OAAO;YAAE,SAAS;YAAO,QAAQ;gBAAE,SAAS;YAAoB;QAAE;IACpE;AACF","debugId":null}},
    {"offset": {"line": 1918, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/ordersMigration.ts"],"sourcesContent":["// src/utils/ordersMigration.ts\r\n\r\nimport type { Order } from '@/types/wallet';\r\nimport { storageService, ordersService, authService } from '@/services';\r\n\r\n/**\r\n * Orders Migration Utilities\r\n * Ensures smooth transition from direct storage to service-based architecture\r\n */\r\n\r\n/**\r\n * Check if orders need migration\r\n */\r\nexport async function checkOrdersMigrationNeeded(): Promise<boolean> {\r\n  try {\r\n    // Check if migration flag exists\r\n    const migrationFlag = await storageService.getItem<boolean>('orders_migrated_to_service', false);\r\n    if (migrationFlag) {\r\n      return false; // Already migrated\r\n    }\r\n\r\n    // Check if old orders exist in storage\r\n    const oldOrders = await storageService.getItem<Order[]>('wallet_orders', []);\r\n    return oldOrders.length > 0;\r\n  } catch (error) {\r\n    console.error('Error checking orders migration:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Migrate orders from direct storage to service\r\n */\r\nexport async function migrateOrdersToService(): Promise<{ success: boolean; migratedCount: number }> {\r\n  try {\r\n    console.log('[OrdersMigration] Starting orders migration...');\r\n\r\n    // CRITICAL FIX: Check if user is authenticated before attempting migration\r\n    const isAuthenticated = await authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      console.log('[OrdersMigration] No authenticated user - skipping API migration');\r\n      await storageService.setItem('orders_migrated_to_service', true);\r\n      return { success: true, migratedCount: 0 };\r\n    }\r\n\r\n    // Get existing orders from storage\r\n    const existingOrders = await storageService.getItem<Order[]>('wallet_orders', []);\r\n    \r\n    if (existingOrders.length === 0) {\r\n      console.log('[OrdersMigration] No orders to migrate');\r\n      await storageService.setItem('orders_migrated_to_service', true);\r\n      return { success: true, migratedCount: 0 };\r\n    }\r\n\r\n    console.log(`[OrdersMigration] Found ${existingOrders.length} orders to migrate`);\r\n\r\n    let migratedCount = 0;\r\n    const errors: string[] = [];\r\n\r\n    // Process each order\r\n    for (const order of existingOrders) {\r\n      try {\r\n        // Check if order already exists (by ID)\r\n        const existingResult = await ordersService.getOrder(order.id);\r\n        \r\n        if (existingResult.success && existingResult.data) {\r\n          console.log(`[OrdersMigration] Order ${order.id} already exists, skipping`);\r\n          migratedCount++;\r\n          continue;\r\n        }\r\n\r\n        // Create order through service\r\n        const createResult = await ordersService.createOrder({\r\n          title: order.title,\r\n          description: order.description,\r\n          price: order.price,\r\n          markedUpPrice: order.markedUpPrice,\r\n          imageUrl: order.imageUrl,\r\n          seller: order.seller,\r\n          buyer: order.buyer,\r\n          tags: order.tags,\r\n          wearTime: order.wearTime,\r\n          wasAuction: order.wasAuction,\r\n          finalBid: order.finalBid,\r\n          deliveryAddress: order.deliveryAddress,\r\n          tierCreditAmount: order.tierCreditAmount,\r\n          isCustomRequest: order.isCustomRequest,\r\n          originalRequestId: order.originalRequestId,\r\n          listingId: order.listingId,\r\n          listingTitle: order.listingTitle,\r\n          quantity: order.quantity,\r\n          // Ensure shippingStatus is cast correctly including pending-auction\r\n          shippingStatus: order.shippingStatus as 'pending' | 'processing' | 'shipped' | 'pending-auction' | undefined,\r\n        });\r\n\r\n        if (createResult.success) {\r\n          migratedCount++;\r\n          \r\n          // If the order has a shipping status, update it\r\n          if (order.shippingStatus && order.shippingStatus !== 'pending') {\r\n            await ordersService.updateOrderStatus(order.id, {\r\n              shippingStatus: order.shippingStatus as 'pending' | 'processing' | 'shipped' | 'pending-auction',\r\n            });\r\n          }\r\n        } else {\r\n          errors.push(`Failed to migrate order ${order.id}: ${createResult.error?.message}`);\r\n        }\r\n      } catch (error) {\r\n        errors.push(`Error migrating order ${order.id}: ${error}`);\r\n      }\r\n    }\r\n\r\n    // Log any errors\r\n    if (errors.length > 0) {\r\n      console.error('[OrdersMigration] Migration errors:', errors);\r\n    }\r\n\r\n    // Set migration flag\r\n    await storageService.setItem('orders_migrated_to_service', true);\r\n\r\n    console.log(`[OrdersMigration] Migration complete. Migrated ${migratedCount}/${existingOrders.length} orders`);\r\n\r\n    return {\r\n      success: errors.length === 0,\r\n      migratedCount,\r\n    };\r\n  } catch (error) {\r\n    console.error('[OrdersMigration] Migration failed:', error);\r\n    return { success: false, migratedCount: 0 };\r\n  }\r\n}\r\n\r\n/**\r\n * Sync orders between storage and service\r\n * Ensures data consistency during transition period\r\n */\r\nexport async function syncOrdersWithService(): Promise<void> {\r\n  try {\r\n    // CRITICAL FIX: Check if user is authenticated before attempting sync\r\n    const isAuthenticated = await authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      console.log('[OrdersSync] No authenticated user - skipping API sync');\r\n      return;\r\n    }\r\n\r\n    // Get orders from both sources\r\n    const [storageOrders, serviceResult] = await Promise.all([\r\n      storageService.getItem<Order[]>('wallet_orders', []),\r\n      ordersService.getOrders(),\r\n    ]);\r\n\r\n    if (!serviceResult.success || !serviceResult.data) {\r\n      console.error('[OrdersSync] Failed to fetch orders from service');\r\n      return;\r\n    }\r\n\r\n    const serviceOrders = serviceResult.data;\r\n\r\n    // Create a map of service orders for quick lookup\r\n    const serviceOrderMap = new Map(serviceOrders.map(order => [order.id, order]));\r\n\r\n    // Check for orders in storage but not in service\r\n    const ordersToAdd: Order[] = [];\r\n    for (const storageOrder of storageOrders) {\r\n      if (!serviceOrderMap.has(storageOrder.id)) {\r\n        ordersToAdd.push(storageOrder);\r\n      }\r\n    }\r\n\r\n    // Add missing orders to service\r\n    if (ordersToAdd.length > 0) {\r\n      console.log(`[OrdersSync] Found ${ordersToAdd.length} orders to sync to service`);\r\n      \r\n      for (const order of ordersToAdd) {\r\n        try {\r\n          await ordersService.createOrder({\r\n            title: order.title,\r\n            description: order.description,\r\n            price: order.price,\r\n            markedUpPrice: order.markedUpPrice,\r\n            imageUrl: order.imageUrl,\r\n            seller: order.seller,\r\n            buyer: order.buyer,\r\n            tags: order.tags,\r\n            wearTime: order.wearTime,\r\n            wasAuction: order.wasAuction,\r\n            finalBid: order.finalBid,\r\n            deliveryAddress: order.deliveryAddress,\r\n            tierCreditAmount: order.tierCreditAmount,\r\n            isCustomRequest: order.isCustomRequest,\r\n            originalRequestId: order.originalRequestId,\r\n            listingId: order.listingId,\r\n            listingTitle: order.listingTitle,\r\n            quantity: order.quantity,\r\n            // Ensure shippingStatus is cast correctly including pending-auction\r\n            shippingStatus: order.shippingStatus as 'pending' | 'processing' | 'shipped' | 'pending-auction' | undefined,\r\n          });\r\n        } catch (error) {\r\n          console.error(`[OrdersSync] Failed to sync order ${order.id}:`, error);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('[OrdersSync] Sync complete');\r\n  } catch (error) {\r\n    console.error('[OrdersSync] Sync failed:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Validate order data integrity\r\n */\r\nexport async function validateOrderIntegrity(): Promise<{\r\n  valid: boolean;\r\n  issues: string[];\r\n}> {\r\n  const issues: string[] = [];\r\n\r\n  try {\r\n    // CRITICAL FIX: Check if user is authenticated before attempting validation\r\n    const isAuthenticated = await authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      console.log('[OrdersIntegrity] No authenticated user - skipping API validation');\r\n      return { valid: true, issues: [] };\r\n    }\r\n\r\n    const result = await ordersService.getOrders();\r\n    if (!result.success || !result.data) {\r\n      issues.push('Failed to fetch orders from service');\r\n      return { valid: false, issues };\r\n    }\r\n\r\n    const orders = result.data;\r\n\r\n    // Check for duplicate orders\r\n    const orderIds = new Set<string>();\r\n    for (const order of orders) {\r\n      if (orderIds.has(order.id)) {\r\n        issues.push(`Duplicate order ID found: ${order.id}`);\r\n      }\r\n      orderIds.add(order.id);\r\n    }\r\n\r\n    // Validate required fields\r\n    for (const order of orders) {\r\n      if (!order.id) issues.push('Order missing ID');\r\n      if (!order.title) issues.push(`Order ${order.id} missing title`);\r\n      if (!order.seller) issues.push(`Order ${order.id} missing seller`);\r\n      if (!order.buyer) issues.push(`Order ${order.id} missing buyer`);\r\n      if (typeof order.price !== 'number') issues.push(`Order ${order.id} has invalid price`);\r\n      if (!order.date) issues.push(`Order ${order.id} missing date`);\r\n    }\r\n\r\n    return {\r\n      valid: issues.length === 0,\r\n      issues,\r\n    };\r\n  } catch (error) {\r\n    issues.push(`Validation error: ${error}`);\r\n    return { valid: false, issues };\r\n  }\r\n}\r\n\r\n/**\r\n * Run full orders migration process\r\n */\r\nexport async function runOrdersMigration(): Promise<void> {\r\n  try {\r\n    console.log('[OrdersMigration] Checking if migration is needed...');\r\n    \r\n    // CRITICAL FIX: Check authentication FIRST before any migration logic\r\n    const isAuthenticated = await authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      console.log('[OrdersMigration] No authenticated user - skipping all migration activities');\r\n      // Still set the migration flag to prevent future attempts during this session\r\n      await storageService.setItem('orders_migrated_to_service', true);\r\n      return;\r\n    }\r\n\r\n    const needsMigration = await checkOrdersMigrationNeeded();\r\n    \r\n    if (needsMigration) {\r\n      console.log('[OrdersMigration] Migration needed, starting process...');\r\n      \r\n      const result = await migrateOrdersToService();\r\n      \r\n      if (result.success) {\r\n        console.log('[OrdersMigration] Migration successful');\r\n      } else {\r\n        console.error('[OrdersMigration] Migration completed with errors');\r\n      }\r\n    } else {\r\n      console.log('[OrdersMigration] No migration needed');\r\n    }\r\n\r\n    // Only run sync and validation if user is authenticated (double-check)\r\n    if (isAuthenticated) {\r\n      // Always run sync to ensure consistency\r\n      await syncOrdersWithService();\r\n\r\n      // Validate integrity\r\n      const validation = await validateOrderIntegrity();\r\n      if (!validation.valid) {\r\n        console.error('[OrdersMigration] Integrity issues found:', validation.issues);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('[OrdersMigration] Migration process failed:', error);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2203, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/security/permissions.ts"],"sourcesContent":["// Centralized role/permission helpers for the frontend\r\n\r\nexport type Role = 'buyer' | 'seller' | 'admin';\r\n\r\nexport interface MinimalUser {\r\n  username?: string | null;\r\n  role?: Role | null;\r\n}\r\n\r\nexport function isAdmin(user: MinimalUser | null | undefined): boolean {\r\n  return (user?.role ?? null) === 'admin';\r\n}\r\n\r\n/**\r\n * True if the user's exact role matches.\r\n */\r\nexport function hasRole(user: MinimalUser | null | undefined, role: Role): boolean {\r\n  return (user?.role ?? null) === role;\r\n}\r\n\r\n/**\r\n * True if the user can access a page requiring `requiredRole`.\r\n * Admins can access anything.\r\n */\r\nexport function canAccessRole(user: MinimalUser | null | undefined, requiredRole: Role): boolean {\r\n  const r = user?.role ?? null;\r\n  return r === requiredRole || r === 'admin';\r\n}\r\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;AAShD,SAAS,QAAQ,IAAoC;QAClD;IAAR,OAAO,CAAC,CAAA,aAAA,iBAAA,2BAAA,KAAM,IAAI,cAAV,wBAAA,aAAc,IAAI,MAAM;AAClC;AAKO,SAAS,QAAQ,IAAoC,EAAE,IAAU;QAC9D;IAAR,OAAO,CAAC,CAAA,aAAA,iBAAA,2BAAA,KAAM,IAAI,cAAV,wBAAA,aAAc,IAAI,MAAM;AAClC;AAMO,SAAS,cAAc,IAAoC,EAAE,YAAkB;QAC1E;IAAV,MAAM,IAAI,CAAA,aAAA,iBAAA,2BAAA,KAAM,IAAI,cAAV,wBAAA,aAAc;IACxB,OAAO,MAAM,gBAAgB,MAAM;AACrC","debugId":null}},
    {"offset": {"line": 2231, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/types/users.ts"],"sourcesContent":["// src/types/users.ts\r\n\r\nimport { User } from '@/context/AuthContext';\r\n\r\n// User-related types\r\nexport type UserRole = 'buyer' | 'seller' | 'admin';\r\nexport type VerificationStatus = 'pending' | 'verified' | 'rejected' | 'unverified';\r\nexport type SellerTier = 'Tease' | 'Flirt' | 'Obsession' | 'Desire' | 'Goddess';\r\n\r\n// Extended user profile with all possible fields\r\nexport interface UserProfile {\r\n  bio: string;\r\n  profilePic: string | null;\r\n  subscriptionPrice: string;\r\n  lastUpdated?: string;\r\n  galleryImages?: string[];\r\n  preferences?: UserPreferences;\r\n  completeness?: ProfileCompleteness;\r\n  socialLinks?: SocialLinks;\r\n  stats?: UserStats;\r\n}\r\n\r\n// User preferences\r\nexport interface UserPreferences {\r\n  notifications: {\r\n    messages: boolean;\r\n    orders: boolean;\r\n    promotions: boolean;\r\n    newsletters: boolean;\r\n  };\r\n  privacy: {\r\n    showOnlineStatus: boolean;\r\n    allowDirectMessages: boolean;\r\n    profileVisibility: 'public' | 'subscribers' | 'private';\r\n  };\r\n  language: string;\r\n  currency: string;\r\n  timezone: string;\r\n}\r\n\r\n// Profile completeness tracking\r\nexport interface ProfileCompleteness {\r\n  percentage: number;\r\n  missingFields: string[];\r\n  suggestions: string[];\r\n}\r\n\r\n// Social links\r\nexport interface SocialLinks {\r\n  twitter?: string;\r\n  instagram?: string;\r\n  tiktok?: string;\r\n  website?: string;\r\n}\r\n\r\n// User statistics\r\nexport interface UserStats {\r\n  joinedDate: string;\r\n  lastActive: string;\r\n  totalSales?: number;\r\n  totalPurchases?: number;\r\n  averageRating?: number;\r\n  reviewCount?: number;\r\n  subscriberCount?: number;\r\n  listingCount?: number;\r\n  responseTime?: number; // in minutes\r\n}\r\n\r\n// Activity tracking\r\nexport interface UserActivity {\r\n  id: string;\r\n  userId: string;\r\n  type: 'login' | 'profile_update' | 'listing_created' | 'order_placed' | 'message_sent';\r\n  timestamp: string;\r\n  details?: Record<string, any>;\r\n  ipAddress?: string;\r\n  userAgent?: string;\r\n}\r\n\r\n// Search and filter types\r\nexport interface UserSearchParams {\r\n  query?: string;\r\n  role?: UserRole;\r\n  verified?: boolean;\r\n  tier?: SellerTier;\r\n  minRating?: number;\r\n  hasListings?: boolean;\r\n  isActive?: boolean;\r\n  sortBy?: 'username' | 'joinDate' | 'rating' | 'sales' | 'lastActive';\r\n  sortOrder?: 'asc' | 'desc';\r\n  page?: number;\r\n  limit?: number;\r\n}\r\n\r\n// Verification types\r\nexport interface VerificationRequest {\r\n  codePhoto?: string;\r\n  idFront?: string;\r\n  idBack?: string;\r\n  passport?: string;\r\n  code?: string;\r\n  submittedAt?: string;\r\n}\r\n\r\nexport interface VerificationUpdateRequest {\r\n  status: VerificationStatus;\r\n  rejectionReason?: string;\r\n  adminUsername?: string;\r\n  reviewedAt?: string;\r\n}\r\n\r\n// Ban management types\r\nexport interface BanDetails {\r\n  reason: string;\r\n  bannedBy: string;\r\n  bannedAt: string;\r\n  expiresAt?: string;\r\n  appealStatus?: 'none' | 'pending' | 'approved' | 'rejected';\r\n  appealReason?: string;\r\n  appealedAt?: string;\r\n}\r\n\r\nexport interface BanRequest {\r\n  username: string;\r\n  reason: string;\r\n  duration?: number; // in days, undefined = permanent\r\n  adminUsername: string;\r\n  evidence?: string[];\r\n}\r\n\r\n// Subscription types\r\nexport interface SubscriptionInfo {\r\n  seller: string;\r\n  buyer: string;\r\n  price: string;\r\n  subscribedAt: string;\r\n  expiresAt?: string;\r\n  autoRenew: boolean;\r\n  status: 'active' | 'expired' | 'cancelled';\r\n}\r\n\r\n// Batch operation types\r\nexport interface BatchUserUpdate {\r\n  username: string;\r\n  updates: Partial<User>;\r\n}\r\n\r\nexport interface BatchOperationResult {\r\n  succeeded: string[];\r\n  failed: Array<{\r\n    username: string;\r\n    error: string;\r\n  }>;\r\n}\r\n\r\n// Cache types\r\nexport interface CachedUser {\r\n  data: User;\r\n  timestamp: number;\r\n  expiresAt: number;\r\n}\r\n\r\nexport interface CachedUserProfile {\r\n  data: UserProfile;\r\n  timestamp: number;\r\n  expiresAt: number;\r\n}\r\n\r\n// Error types\r\nexport enum UserErrorCode {\r\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\r\n  PROFILE_NOT_FOUND = 'PROFILE_NOT_FOUND',\r\n  INVALID_USERNAME = 'INVALID_USERNAME',\r\n  INVALID_ROLE = 'INVALID_ROLE',\r\n  VERIFICATION_FAILED = 'VERIFICATION_FAILED',\r\n  BAN_FAILED = 'BAN_FAILED',\r\n  SUBSCRIPTION_FAILED = 'SUBSCRIPTION_FAILED',\r\n  PROFILE_UPDATE_FAILED = 'PROFILE_UPDATE_FAILED',\r\n  PERMISSION_DENIED = 'PERMISSION_DENIED',\r\n  NETWORK_ERROR = 'NETWORK_ERROR',\r\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\r\n}\r\n\r\nexport interface UserError {\r\n  code: UserErrorCode;\r\n  message: string;\r\n  field?: string;\r\n  details?: any;\r\n}\r\n\r\n// Validation schemas\r\nexport const UserValidation = {\r\n  username: {\r\n    min: 2,\r\n    max: 50,\r\n    pattern: /^[a-zA-Z0-9_-]+$/,\r\n    message: 'Username must be 2-50 characters and contain only letters, numbers, underscores, and hyphens',\r\n  },\r\n  bio: {\r\n    max: 500,\r\n    message: 'Bio must be less than 500 characters',\r\n  },\r\n  subscriptionPrice: {\r\n    min: 0,\r\n    max: 999.99,\r\n    pattern: /^\\d+(\\.\\d{1,2})?$/,\r\n    message: 'Price must be a valid amount between $0 and $999.99',\r\n  },\r\n};\r\n\r\n// Response types\r\nexport interface UsersResponse {\r\n  users: User[];\r\n  total: number;\r\n  page: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport interface ProfileResponse {\r\n  profile: UserProfile;\r\n  user: User;\r\n}\r\n\r\n// Export helper functions\r\nexport function isValidUsername(username: string): boolean {\r\n  return (\r\n    username.length >= UserValidation.username.min &&\r\n    username.length <= UserValidation.username.max &&\r\n    UserValidation.username.pattern.test(username)\r\n  );\r\n}\r\n\r\nexport function isValidBio(bio: string): boolean {\r\n  return bio.length <= UserValidation.bio.max;\r\n}\r\n\r\nexport function isValidSubscriptionPrice(price: string): boolean {\r\n  const numPrice = parseFloat(price);\r\n  return (\r\n    UserValidation.subscriptionPrice.pattern.test(price) &&\r\n    numPrice >= UserValidation.subscriptionPrice.min &&\r\n    numPrice <= UserValidation.subscriptionPrice.max\r\n  );\r\n}\r\n\r\nexport function calculateProfileCompleteness(user: User, profile?: UserProfile): ProfileCompleteness {\r\n  const requiredFields = [\r\n    { field: 'profilePic', label: 'Profile Picture' },\r\n    { field: 'bio', label: 'Bio' },\r\n    { field: 'subscriptionPrice', label: 'Subscription Price' },\r\n  ];\r\n\r\n  const missingFields: string[] = [];\r\n  let completedCount = 0;\r\n\r\n  // Check user fields\r\n  if (!user.profilePicture) missingFields.push('Profile Picture');\r\n  else completedCount++;\r\n\r\n  // Check profile fields\r\n  if (!profile?.bio || profile.bio.length < 50) missingFields.push('Bio (minimum 50 characters)');\r\n  else completedCount++;\r\n\r\n  if (!profile?.subscriptionPrice || profile.subscriptionPrice === '0') {\r\n    missingFields.push('Subscription Price');\r\n  } else {\r\n    completedCount++;\r\n  }\r\n\r\n  // Additional optional fields that improve profile\r\n  if (user.role === 'seller') {\r\n    if (!user.isVerified) missingFields.push('Verification');\r\n    if (!profile?.galleryImages?.length) missingFields.push('Gallery Images');\r\n  }\r\n\r\n  const percentage = Math.round((completedCount / requiredFields.length) * 100);\r\n\r\n  const suggestions: string[] = [];\r\n  if (percentage < 100) {\r\n    suggestions.push('Complete your profile to attract more buyers');\r\n    if (!user.isVerified && user.role === 'seller') {\r\n      suggestions.push('Get verified to build trust');\r\n    }\r\n  }\r\n\r\n  return {\r\n    percentage,\r\n    missingFields,\r\n    suggestions,\r\n  };\r\n}"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;;;;AAyKd,IAAA,AAAK,uCAAA;;;;;;;;;;;;WAAA;;AAsBL,MAAM,iBAAiB;IAC5B,UAAU;QACR,KAAK;QACL,KAAK;QACL,SAAS;QACT,SAAS;IACX;IACA,KAAK;QACH,KAAK;QACL,SAAS;IACX;IACA,mBAAmB;QACjB,KAAK;QACL,KAAK;QACL,SAAS;QACT,SAAS;IACX;AACF;AAgBO,SAAS,gBAAgB,QAAgB;IAC9C,OACE,SAAS,MAAM,IAAI,eAAe,QAAQ,CAAC,GAAG,IAC9C,SAAS,MAAM,IAAI,eAAe,QAAQ,CAAC,GAAG,IAC9C,eAAe,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;AAEzC;AAEO,SAAS,WAAW,GAAW;IACpC,OAAO,IAAI,MAAM,IAAI,eAAe,GAAG,CAAC,GAAG;AAC7C;AAEO,SAAS,yBAAyB,KAAa;IACpD,MAAM,WAAW,WAAW;IAC5B,OACE,eAAe,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,UAC9C,YAAY,eAAe,iBAAiB,CAAC,GAAG,IAChD,YAAY,eAAe,iBAAiB,CAAC,GAAG;AAEpD;AAEO,SAAS,6BAA6B,IAAU,EAAE,OAAqB;IAC5E,MAAM,iBAAiB;QACrB;YAAE,OAAO;YAAc,OAAO;QAAkB;QAChD;YAAE,OAAO;YAAO,OAAO;QAAM;QAC7B;YAAE,OAAO;YAAqB,OAAO;QAAqB;KAC3D;IAED,MAAM,gBAA0B,EAAE;IAClC,IAAI,iBAAiB;IAErB,oBAAoB;IACpB,IAAI,CAAC,KAAK,cAAc,EAAE,cAAc,IAAI,CAAC;SACxC;IAEL,uBAAuB;IACvB,IAAI,EAAC,oBAAA,8BAAA,QAAS,GAAG,KAAI,QAAQ,GAAG,CAAC,MAAM,GAAG,IAAI,cAAc,IAAI,CAAC;SAC5D;IAEL,IAAI,EAAC,oBAAA,8BAAA,QAAS,iBAAiB,KAAI,QAAQ,iBAAiB,KAAK,KAAK;QACpE,cAAc,IAAI,CAAC;IACrB,OAAO;QACL;IACF;IAEA,kDAAkD;IAClD,IAAI,KAAK,IAAI,KAAK,UAAU;YAErB;QADL,IAAI,CAAC,KAAK,UAAU,EAAE,cAAc,IAAI,CAAC;QACzC,IAAI,EAAC,oBAAA,+BAAA,yBAAA,QAAS,aAAa,cAAtB,6CAAA,uBAAwB,MAAM,GAAE,cAAc,IAAI,CAAC;IAC1D;IAEA,MAAM,aAAa,KAAK,KAAK,CAAC,AAAC,iBAAiB,eAAe,MAAM,GAAI;IAEzE,MAAM,cAAwB,EAAE;IAChC,IAAI,aAAa,KAAK;QACpB,YAAY,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,UAAU,IAAI,KAAK,IAAI,KAAK,UAAU;YAC9C,YAAY,IAAI,CAAC;QACnB;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/types/common.ts"],"sourcesContent":["// src/types/common.ts\r\n\r\n/**\r\n * Common types used across the application\r\n */\r\n\r\nimport { ValueOf } from './type-utils';\r\n\r\n// Branded types for type-safe IDs\r\nexport type UserId = string & { readonly brand: unique symbol };\r\nexport type ListingId = string & { readonly brand: unique symbol };\r\nexport type OrderId = string & { readonly brand: unique symbol };\r\nexport type MessageId = string & { readonly brand: unique symbol };\r\nexport type NotificationId = string & { readonly brand: unique symbol };\r\n\r\n// Helper functions to create branded types\r\nexport const UserId = (id: string): UserId => id as UserId;\r\nexport const ListingId = (id: string): ListingId => id as ListingId;\r\nexport const OrderId = (id: string): OrderId => id as OrderId;\r\nexport const MessageId = (id: string): MessageId => id as MessageId;\r\nexport const NotificationId = (id: string): NotificationId => id as NotificationId;\r\n\r\n// Timestamp types\r\nexport type ISOTimestamp = string & { readonly brand: unique symbol };\r\nexport type UnixTimestamp = number & { readonly brand: unique symbol };\r\n\r\n// Money type (in cents to avoid floating point issues)\r\nexport type Money = number & { readonly brand: unique symbol };\r\nexport const Money = {\r\n  fromDollars: (dollars: number): Money => Math.round(dollars * 100) as Money,\r\n  toDollars: (money: Money): number => money / 100,\r\n  format: (money: Money): string => `$${(money / 100).toFixed(2)}`,\r\n};\r\n\r\n// User roles as const\r\nexport const USER_ROLES = {\r\n  BUYER: 'buyer',\r\n  SELLER: 'seller',\r\n  ADMIN: 'admin',\r\n} as const;\r\n\r\nexport type UserRole = ValueOf<typeof USER_ROLES>;\r\n\r\n// Status types\r\nexport const ORDER_STATUS = {\r\n  PENDING: 'pending',\r\n  PROCESSING: 'processing',\r\n  SHIPPED: 'shipped',\r\n  DELIVERED: 'delivered',\r\n  CANCELLED: 'cancelled',\r\n  REFUNDED: 'refunded',\r\n} as const;\r\n\r\nexport type OrderStatus = ValueOf<typeof ORDER_STATUS>;\r\n\r\nexport const LISTING_STATUS = {\r\n  ACTIVE: 'active',\r\n  SOLD: 'sold',\r\n  EXPIRED: 'expired',\r\n  CANCELLED: 'cancelled',\r\n} as const;\r\n\r\nexport type ListingStatus = ValueOf<typeof LISTING_STATUS>;\r\n\r\n// Verification status\r\nexport const VERIFICATION_STATUS = {\r\n  UNVERIFIED: 'unverified',\r\n  PENDING: 'pending',\r\n  VERIFIED: 'verified',\r\n  REJECTED: 'rejected',\r\n} as const;\r\n\r\nexport type CommonVerificationStatus = ValueOf<typeof VERIFICATION_STATUS>;\r\n\r\n// Pagination\r\nexport interface Pagination {\r\n  page: number;\r\n  pageSize: number;\r\n  total: number;\r\n  totalPages: number;\r\n}\r\n\r\n// Sort options\r\nexport interface SortOptions<T = string> {\r\n  field: T;\r\n  order: 'asc' | 'desc';\r\n}\r\n\r\n// Filter options\r\nexport interface CommonFilterOptions {\r\n  [key: string]: string | number | boolean | string[] | undefined;\r\n}\r\n\r\n// Date range\r\nexport interface DateRange {\r\n  start: ISOTimestamp;\r\n  end: ISOTimestamp;\r\n}\r\n\r\n// Address type\r\nexport interface Address {\r\n  fullName: string;\r\n  addressLine1: string;\r\n  addressLine2?: string;\r\n  city: string;\r\n  state: string;\r\n  postalCode: string;\r\n  country: string;\r\n  phoneNumber?: string;\r\n}\r\n\r\n// Image type\r\nexport interface Image {\r\n  url: string;\r\n  publicId?: string;\r\n  width?: number;\r\n  height?: number;\r\n  format?: string;\r\n  size?: number;\r\n  alt?: string;\r\n}\r\n\r\n// Common Notification type (different from existing)\r\nexport interface CommonNotification {\r\n  id: NotificationId;\r\n  userId: UserId;\r\n  type: 'order' | 'message' | 'listing' | 'system' | 'promotion';\r\n  title: string;\r\n  message: string;\r\n  read: boolean;\r\n  createdAt: ISOTimestamp;\r\n  metadata?: Record<string, unknown>;\r\n}\r\n"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB;;CAEC;;;;;;;;;;;;AAYM,MAAM,SAAS,CAAC,KAAuB;KAAjC;AACN,MAAM,YAAY,CAAC,KAA0B;MAAvC;AACN,MAAM,UAAU,CAAC,KAAwB;MAAnC;AACN,MAAM,YAAY,CAAC,KAA0B;MAAvC;AACN,MAAM,iBAAiB,CAAC,KAA+B;MAAjD;AAQN,MAAM,QAAQ;IACnB,aAAa,CAAC,UAA2B,KAAK,KAAK,CAAC,UAAU;IAC9D,WAAW,CAAC,QAAyB,QAAQ;IAC7C,QAAQ,CAAC,QAAyB,AAAC,IAA4B,OAAzB,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC;AAC9D;AAGO,MAAM,aAAa;IACxB,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AAKO,MAAM,eAAe;IAC1B,SAAS;IACT,YAAY;IACZ,SAAS;IACT,WAAW;IACX,WAAW;IACX,UAAU;AACZ;AAIO,MAAM,iBAAiB;IAC5B,QAAQ;IACR,MAAM;IACN,SAAS;IACT,WAAW;AACb;AAKO,MAAM,sBAAsB;IACjC,YAAY;IACZ,SAAS;IACT,UAAU;IACV,UAAU;AACZ","debugId":null}},
    {"offset": {"line": 2409, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/types/websocket.ts"],"sourcesContent":["// src/types/websocket.ts\r\n\r\n// WebSocket connection states\r\nexport enum WebSocketState {\r\n  CONNECTING = 'CONNECTING',\r\n  CONNECTED = 'CONNECTED',\r\n  DISCONNECTED = 'DISCONNECTED',\r\n  RECONNECTING = 'RECONNECTING',\r\n  ERROR = 'ERROR'\r\n}\r\n\r\n// WebSocket event types - comprehensive list\r\nexport enum WebSocketEvent {\r\n  // Connection events\r\n  CONNECT = 'connect',\r\n  DISCONNECT = 'disconnect',\r\n  ERROR = 'error',\r\n  RECONNECT = 'reconnect',\r\n  \r\n  // Message events\r\n  MESSAGE_NEW = 'message:new',\r\n  MESSAGE_UPDATE = 'message:update',\r\n  MESSAGE_DELETE = 'message:delete',\r\n  MESSAGE_TYPING = 'message:typing',\r\n  MESSAGE_READ = 'message:read',\r\n  \r\n  // Order events\r\n  ORDER_NEW = 'order:new',\r\n  ORDER_UPDATE = 'order:update',\r\n  ORDER_STATUS_CHANGE = 'order:status_change',\r\n  \r\n  // Auction events\r\n  AUCTION_BID = 'auction:bid',\r\n  AUCTION_OUTBID = 'auction:outbid',\r\n  AUCTION_ENDING = 'auction:ending',\r\n  AUCTION_ENDED = 'auction:ended',\r\n  AUCTION_CANCELLED = 'auction:cancelled',\r\n  \r\n  // Notification events\r\n  NOTIFICATION_NEW = 'notification:new',\r\n  NOTIFICATION_READ = 'notification:read',\r\n  \r\n  // User events\r\n  USER_ONLINE = 'user:online',\r\n  USER_OFFLINE = 'user:offline',\r\n  USER_UPDATED = 'user:updated',\r\n  \r\n  // Wallet events\r\n  WALLET_BALANCE_UPDATE = 'wallet:balance_update',\r\n  WALLET_TRANSACTION = 'wallet:transaction',\r\n  \r\n  // Listing events\r\n  LISTING_NEW = 'listing:new',\r\n  LISTING_UPDATE = 'listing:update',\r\n  LISTING_SOLD = 'listing:sold',\r\n  \r\n  // Subscription events\r\n  SUBSCRIPTION_NEW = 'subscription:new',\r\n  SUBSCRIPTION_CANCELLED = 'subscription:cancelled',\r\n  \r\n  // Room events\r\n  ROOM_JOIN = 'room:join',\r\n  ROOM_LEAVE = 'room:leave',\r\n  \r\n  // System events\r\n  PING = 'ping',\r\n  PONG = 'pong'\r\n}\r\n\r\n// Type for WebSocket event handlers\r\nexport type WebSocketHandler<T = any> = (data: T) => void;\r\n\r\n// WebSocket options\r\nexport interface WebSocketOptions {\r\n  url: string;\r\n  auth?: Record<string, any>;\r\n  autoConnect?: boolean;\r\n  reconnect?: boolean;\r\n  reconnectAttempts?: number;\r\n  reconnectDelay?: number;\r\n}\r\n\r\n// WebSocket error\r\nexport interface WebSocketError {\r\n  message: string;\r\n  code?: string;\r\n  type?: string;\r\n}\r\n\r\n// WebSocket message structure\r\nexport interface WebSocketMessage<T = any> {\r\n  event: WebSocketEvent;\r\n  data: T;\r\n  timestamp?: number;\r\n  id?: string;\r\n}\r\n\r\n// Typing indicator data\r\nexport interface TypingData {\r\n  userId: string;\r\n  username?: string;\r\n  conversationId?: string;\r\n  threadId?: string; // Alternative to conversationId\r\n  isTyping: boolean;\r\n  timestamp?: number;\r\n}\r\n\r\n// Online status data\r\nexport interface OnlineStatusData {\r\n  userId: string;\r\n  username?: string;\r\n  isOnline?: boolean;\r\n  online?: boolean; // Alternative to isOnline\r\n  lastSeen?: string;\r\n  timestamp?: number;\r\n}\r\n\r\n// Realtime notification\r\nexport interface RealtimeNotification {\r\n  id: string;\r\n  type: 'message' | 'order' | 'wallet' | 'system';\r\n  title: string;\r\n  body: string;\r\n  data?: any;\r\n  read: boolean;\r\n  createdAt: string;\r\n}\r\n\r\n// Other event data types\r\nexport interface OrderUpdateData {\r\n  orderId: string;\r\n  status?: string;\r\n  updates?: Record<string, any>;\r\n  timestamp?: number;\r\n}\r\n\r\nexport interface WalletUpdateData {\r\n  balance?: number;\r\n  currency?: string;\r\n  amount?: number;\r\n  type?: string;\r\n  transactionId?: string;\r\n  timestamp?: number;\r\n}\r\n\r\nexport interface AuctionBidData {\r\n  listingId: string;\r\n  bidder: string;\r\n  amount: number;\r\n  previousBid?: number;\r\n  bidCount?: number;\r\n  timestamp?: number;\r\n}\r\n\r\nexport interface ListingUpdateData {\r\n  listingId: string;\r\n  title?: string;\r\n  updates?: Record<string, any>;\r\n  soldTo?: string;\r\n  price?: number;\r\n  timestamp?: number;\r\n}"],"names":[],"mappings":"AAAA,yBAAyB;AAEzB,8BAA8B;;;;;AACvB,IAAA,AAAK,wCAAA;;;;;;WAAA;;AASL,IAAA,AAAK,wCAAA;IACV,oBAAoB;;;;;IAMpB,iBAAiB;;;;;;IAOjB,eAAe;;;;IAKf,iBAAiB;;;;;;IAOjB,sBAAsB;;;IAItB,cAAc;;;;IAKd,gBAAgB;;;IAIhB,iBAAiB;;;;IAKjB,sBAAsB;;;IAItB,cAAc;;;IAId,gBAAgB;;;WApDN","debugId":null}},
    {"offset": {"line": 2479, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/lib/errorTracking.ts"],"sourcesContent":["// src/lib/errorTracking.ts\r\n\r\ninterface ErrorContext {\r\n  userId?: string;\r\n  action?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    Sentry?: any;\r\n  }\r\n}\r\n\r\nclass ErrorTracker {\r\n  private initialized = false;\r\n\r\n  initialize() {\r\n    if (this.initialized || typeof window === 'undefined') return;\r\n\r\n    // Global error handler\r\n    window.addEventListener('error', this.handleError);\r\n    window.addEventListener('unhandledrejection', this.handleRejection);\r\n\r\n    this.initialized = true;\r\n  }\r\n\r\n  private handleError = (event: ErrorEvent) => {\r\n    this.captureError(event.error || new Error(event.message), {\r\n      action: 'window_error',\r\n      metadata: {\r\n        filename: event.filename,\r\n        lineno: event.lineno,\r\n        colno: event.colno\r\n      }\r\n    });\r\n  };\r\n\r\n  private handleRejection = (event: PromiseRejectionEvent) => {\r\n    this.captureError(\r\n      new Error(event.reason?.message || 'Unhandled Promise Rejection'),\r\n      {\r\n        action: 'unhandled_rejection',\r\n        metadata: {\r\n          reason: event.reason\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  captureError(error: Error, context?: ErrorContext) {\r\n    console.error('[ErrorTracker]', error, context);\r\n\r\n    // Send to custom endpoint\r\n    if (process.env.NEXT_PUBLIC_ERROR_TRACKING_ENDPOINT) {\r\n      fetch(process.env.NEXT_PUBLIC_ERROR_TRACKING_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          message: error.message,\r\n          stack: error.stack,\r\n          context,\r\n          timestamp: new Date().toISOString(),\r\n          userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\r\n          url: typeof window !== 'undefined' ? window.location.href : ''\r\n        })\r\n      }).catch(() => {\r\n        // Fail silently\r\n      });\r\n    }\r\n  }\r\n\r\n  captureMessage(message: string, level: 'info' | 'warning' | 'error' = 'info') {\r\n    console.log(`[ErrorTracker:${level}]`, message);\r\n  }\r\n}\r\n\r\nexport const errorTracker = new ErrorTracker();"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAsDnB;;;AAxCR,MAAM;IAGJ,aAAa;QACX,IAAI,IAAI,CAAC,WAAW,IAAI,aAAkB,aAAa;QAEvD,uBAAuB;QACvB,OAAO,gBAAgB,CAAC,SAAS,IAAI,CAAC,WAAW;QACjD,OAAO,gBAAgB,CAAC,sBAAsB,IAAI,CAAC,eAAe;QAElE,IAAI,CAAC,WAAW,GAAG;IACrB;IAyBA,aAAa,KAAY,EAAE,OAAsB,EAAE;QACjD,QAAQ,KAAK,CAAC,kBAAkB,OAAO;QAEvC,0BAA0B;QAC1B,IAAI,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE;YACnD,MAAM,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE;gBACrD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,SAAS,MAAM,OAAO;oBACtB,OAAO,MAAM,KAAK;oBAClB;oBACA,WAAW,IAAI,OAAO,WAAW;oBACjC,WAAW,OAAO,cAAc,cAAc,UAAU,SAAS,GAAG;oBACpE,KAAK,uCAAgC,OAAO,QAAQ,CAAC,IAAI,GAAG;gBAC9D;YACF,GAAG,KAAK,CAAC;YACP,gBAAgB;YAClB;QACF;IACF;IAEA,eAAe,OAAe,EAAgD;YAA9C,QAAA,iEAAsC;QACpE,QAAQ,GAAG,CAAC,AAAC,iBAAsB,OAAN,OAAM,MAAI;IACzC;;QA3DA,+KAAQ,eAAc;QAYtB,+KAAQ,eAAc,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,MAAM,OAAO,GAAG;gBACzD,QAAQ;gBACR,UAAU;oBACR,UAAU,MAAM,QAAQ;oBACxB,QAAQ,MAAM,MAAM;oBACpB,OAAO,MAAM,KAAK;gBACpB;YACF;QACF;QAEA,+KAAQ,mBAAkB,CAAC;gBAEb;YADZ,IAAI,CAAC,YAAY,CACf,IAAI,MAAM,EAAA,gBAAA,MAAM,MAAM,cAAZ,oCAAA,cAAc,OAAO,KAAI,gCACnC;gBACE,QAAQ;gBACR,UAAU;oBACR,QAAQ,MAAM,MAAM;gBACtB;YACF;QAEJ;;AA2BF;AAEO,MAAM,eAAe,IAAI","debugId":null}},
    {"offset": {"line": 2553, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/hooks/usePerformanceMonitoring.ts"],"sourcesContent":["// src/hooks/usePerformanceMonitoring.ts\r\n\r\nimport { useEffect } from 'react';\r\nimport { usePathname } from 'next/navigation';\r\nimport { onCLS, onINP, onLCP, onFCP, onTTFB } from 'web-vitals';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    gtag?: (command: string, ...args: any[]) => void;\r\n  }\r\n}\r\n\r\nexport function usePerformanceMonitoring() {\r\n  const pathname = usePathname();\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined' || !('performance' in window)) return;\r\n\r\n    // Report web vitals\r\n    onCLS(sendToAnalytics);\r\n    onINP(sendToAnalytics);  // Note: FID is replaced with INP in newer versions\r\n    onLCP(sendToAnalytics);\r\n    onFCP(sendToAnalytics);\r\n    onTTFB(sendToAnalytics);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleRouteChange = () => {\r\n      // Track page navigation performance\r\n      if (window.performance && window.performance.mark) {\r\n        window.performance.mark('route-change-start');\r\n      }\r\n    };\r\n\r\n    const handleRouteChangeComplete = () => {\r\n      if (window.performance && window.performance.mark && window.performance.measure) {\r\n        window.performance.mark('route-change-end');\r\n        window.performance.measure(\r\n          'route-change',\r\n          'route-change-start',\r\n          'route-change-end'\r\n        );\r\n\r\n        const measure = window.performance.getEntriesByName('route-change')[0];\r\n        if (measure) {\r\n          sendToAnalytics({\r\n            name: 'route-change',\r\n            value: measure.duration,\r\n            id: 'route-change',\r\n            delta: measure.duration\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // Since we're using Next.js App Router, we need to track route changes differently\r\n    handleRouteChange();\r\n    return () => {\r\n      handleRouteChangeComplete();\r\n    };\r\n  }, [pathname]);\r\n}\r\n\r\nfunction sendToAnalytics(metric: any) {\r\n  // Send to Google Analytics\r\n  if (window.gtag) {\r\n    window.gtag('event', metric.name, {\r\n      value: Math.round(metric.value),\r\n      metric_id: metric.id,\r\n      metric_value: metric.value,\r\n      metric_delta: metric.delta,\r\n    });\r\n  }\r\n\r\n  // Send to custom endpoint\r\n  if (process.env.NEXT_PUBLIC_ANALYTICS_ENDPOINT) {\r\n    fetch(`${process.env.NEXT_PUBLIC_ANALYTICS_ENDPOINT}/metrics`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        metric: metric.name,\r\n        value: metric.value,\r\n        timestamp: new Date().toISOString(),\r\n        page: window.location.pathname\r\n      })\r\n    }).catch(() => {\r\n      // Fail silently\r\n    });\r\n  }\r\n}"],"names":[],"mappings":"AAAA,wCAAwC;;;;AA2ElC;AAzEN;AACA;AACA;;;;;AAQO,SAAS;;IACd,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8CAAE;YACR,IAAI,aAAkB,eAAe,CAAC,CAAC,iBAAiB,MAAM,GAAG;YAEjE,oBAAoB;YACpB,CAAA,GAAA,yJAAA,CAAA,QAAK,AAAD,EAAE;YACN,CAAA,GAAA,yJAAA,CAAA,QAAK,AAAD,EAAE,kBAAmB,mDAAmD;YAC5E,CAAA,GAAA,yJAAA,CAAA,QAAK,AAAD,EAAE;YACN,CAAA,GAAA,yJAAA,CAAA,QAAK,AAAD,EAAE;YACN,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE;QACT;6CAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8CAAE;YACR,MAAM;wEAAoB;oBACxB,oCAAoC;oBACpC,IAAI,OAAO,WAAW,IAAI,OAAO,WAAW,CAAC,IAAI,EAAE;wBACjD,OAAO,WAAW,CAAC,IAAI,CAAC;oBAC1B;gBACF;;YAEA,MAAM;gFAA4B;oBAChC,IAAI,OAAO,WAAW,IAAI,OAAO,WAAW,CAAC,IAAI,IAAI,OAAO,WAAW,CAAC,OAAO,EAAE;wBAC/E,OAAO,WAAW,CAAC,IAAI,CAAC;wBACxB,OAAO,WAAW,CAAC,OAAO,CACxB,gBACA,sBACA;wBAGF,MAAM,UAAU,OAAO,WAAW,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE;wBACtE,IAAI,SAAS;4BACX,gBAAgB;gCACd,MAAM;gCACN,OAAO,QAAQ,QAAQ;gCACvB,IAAI;gCACJ,OAAO,QAAQ,QAAQ;4BACzB;wBACF;oBACF;gBACF;;YAEA,mFAAmF;YACnF;YACA;sDAAO;oBACL;gBACF;;QACF;6CAAG;QAAC;KAAS;AACf;GAjDgB;;QACG,qIAAA,CAAA,cAAW;;;AAkD9B,SAAS,gBAAgB,MAAW;IAClC,2BAA2B;IAC3B,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,IAAI,CAAC,SAAS,OAAO,IAAI,EAAE;YAChC,OAAO,KAAK,KAAK,CAAC,OAAO,KAAK;YAC9B,WAAW,OAAO,EAAE;YACpB,cAAc,OAAO,KAAK;YAC1B,cAAc,OAAO,KAAK;QAC5B;IACF;IAEA,0BAA0B;IAC1B,IAAI,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE;QAC9C,MAAM,AAAC,GAA6C,OAA3C,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,8BAA8B,EAAC,aAAW;YAC7D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,QAAQ,OAAO,IAAI;gBACnB,OAAO,OAAO,KAAK;gBACnB,WAAW,IAAI,OAAO,WAAW;gBACjC,MAAM,OAAO,QAAQ,CAAC,QAAQ;YAChC;QACF,GAAG,KAAK,CAAC;QACP,gBAAgB;QAClB;IACF;AACF","debugId":null}},
    {"offset": {"line": 2660, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/app/ClientLayout.tsx"],"sourcesContent":["// src/app/ClientLayout.tsx\r\n'use client';\r\n\r\nimport { Suspense, useState, useEffect } from 'react';\r\nimport { usePathname } from 'next/navigation';\r\nimport Providers from '@/components/Providers';\r\nimport Header from '@/components/Header';\r\nimport AgeVerificationModal from '@/components/AgeVerificationModal';\r\nimport BanCheck from '@/components/BanCheck';\r\nimport MessageNotifications from '@/components/MessageNotifications';\r\nimport { PWAInstall } from '@/components/PWAInstall';\r\nimport { GoogleAnalytics } from '@/components/GoogleAnalytics';\r\nimport { errorTracker } from '@/lib/errorTracking';\r\nimport { usePerformanceMonitoring } from '@/hooks/usePerformanceMonitoring';\r\n\r\n// Simple loading component\r\nfunction LoadingFallback() {\r\n  return (\r\n    <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\r\n      <div className=\"text-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#ff950e] mx-auto mb-4\"></div>\r\n        <p className=\"text-gray-400\">Loading PantyPost...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ClientLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const [mounted, setMounted] = useState(false);\r\n  const pathname = usePathname();\r\n\r\n  const hideHeaderRoutes = [\r\n    '/login',\r\n    '/signup',\r\n    '/reset-password',\r\n    '/forgot-password',\r\n    '/verify-reset-code',\r\n    '/reset-password-final'\r\n  ];\r\n\r\n  const shouldHideHeader = hideHeaderRoutes.some(route => {\r\n    return pathname === route || pathname.startsWith(route + '?') || pathname.startsWith(route + '#');\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if ('serviceWorker' in navigator && window.location.hostname !== 'localhost') {\r\n      window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/sw.js')\r\n          .then(registration => console.log('SW registered:', registration))\r\n          .catch(error => console.log('SW registration failed:', error));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    errorTracker.initialize();\r\n  }, []);\r\n\r\n  usePerformanceMonitoring();\r\n\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('Current pathname:', pathname);\r\n      console.log('Should hide header:', shouldHideHeader);\r\n    }\r\n  }, [pathname, shouldHideHeader]);\r\n\r\n  if (!mounted) {\r\n    return <LoadingFallback />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Google Analytics */}\r\n      <GoogleAnalytics />\r\n      \r\n      <Providers>\r\n        <Suspense fallback={<LoadingFallback />}>\r\n          <div className=\"min-h-screen bg-black text-white\">\r\n            <BanCheck>\r\n              {!shouldHideHeader && <Header />}\r\n              <main className=\"flex-grow\">\r\n                {children}\r\n              </main>\r\n              <AgeVerificationModal />\r\n              {/* Keep message area if you still want DM popups; remove the next line if you don't want message popups either */}\r\n              <MessageNotifications />\r\n              {/* NOTICE: No NotificationToaster mounted here */}\r\n            </BanCheck>\r\n          </div>\r\n        </Suspense>\r\n        {/* PWA Install Prompt */}\r\n        <PWAInstall />\r\n      </Providers>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAqEnB;;AAlER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAZA;;;;;;;;;;;;AAcA,2BAA2B;AAC3B,SAAS;IACP,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;;;;;8BACf,6LAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;;;;;AAIrC;KATS;AAWM,SAAS,aAAa,KAIpC;QAJoC,EACnC,QAAQ,EAGT,GAJoC;;IAKnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,mBAAmB;QACvB;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,mBAAmB,iBAAiB,IAAI,CAAC,CAAA;QAC7C,OAAO,aAAa,SAAS,SAAS,UAAU,CAAC,QAAQ,QAAQ,SAAS,UAAU,CAAC,QAAQ;IAC/F;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,WAAW;QACb;iCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,mBAAmB,aAAa,OAAO,QAAQ,CAAC,QAAQ,KAAK,aAAa;gBAC5E,OAAO,gBAAgB,CAAC;8CAAQ;wBAC9B,UAAU,aAAa,CAAC,QAAQ,CAAC,UAC9B,IAAI;sDAAC,CAAA,eAAgB,QAAQ,GAAG,CAAC,kBAAkB;qDACnD,KAAK;sDAAC,CAAA,QAAS,QAAQ,GAAG,CAAC,2BAA2B;;oBAC3D;;YACF;QACF;iCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,8HAAA,CAAA,eAAY,CAAC,UAAU;QACzB;iCAAG,EAAE;IAEL,CAAA,GAAA,2IAAA,CAAA,2BAAwB,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,wCAA4C;gBAC1C,QAAQ,GAAG,CAAC,qBAAqB;gBACjC,QAAQ,GAAG,CAAC,uBAAuB;YACrC;QACF;iCAAG;QAAC;QAAU;KAAiB;IAE/B,IAAI,CAAC,SAAS;QACZ,qBAAO,6LAAC;;;;;IACV;IAEA,qBACE;;0BAEE,6LAAC,wIAAA,CAAA,kBAAe;;;;;0BAEhB,6LAAC,kIAAA,CAAA,UAAS;;kCACR,6LAAC,6JAAA,CAAA,WAAQ;wBAAC,wBAAU,6LAAC;;;;;kCACnB,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,iIAAA,CAAA,UAAQ;;oCACN,CAAC,kCAAoB,6LAAC,+HAAA,CAAA,UAAM;;;;;kDAC7B,6LAAC;wCAAK,WAAU;kDACb;;;;;;kDAEH,6LAAC,6IAAA,CAAA,UAAoB;;;;;kDAErB,6LAAC,6IAAA,CAAA,UAAoB;;;;;;;;;;;;;;;;;;;;;kCAM3B,6LAAC,mIAAA,CAAA,aAAU;;;;;;;;;;;;;AAInB;GA7EwB;;QAML,qIAAA,CAAA,cAAW;QAiC5B,2IAAA,CAAA,2BAAwB;;;MAvCF","debugId":null}}]
}