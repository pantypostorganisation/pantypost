{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/admin/reports/ResolveModal.tsx"],"sourcesContent":["// src/components/admin/reports/ResolveModal.tsx\r\n'use client';\r\n\r\nimport { useEffect, useCallback, useMemo, useRef, useState } from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport { ResolveModalProps } from './types';\r\nimport { SecureMessageDisplay } from '@/components/ui/SecureMessageDisplay';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\n\r\nconst SEVERITIES = ['low', 'medium', 'high', 'critical'] as const;\r\ntype Severity = typeof SEVERITIES[number];\r\n\r\nconst CATEGORIES = ['harassment', 'spam', 'inappropriate_content', 'scam', 'other'] as const;\r\ntype Category = typeof CATEGORIES[number];\r\n\r\nexport default function ResolveModal({\r\n  isOpen,\r\n  report,\r\n  onClose,\r\n  onConfirm\r\n}: ResolveModalProps) {\r\n  const dialogRef = useRef<HTMLDivElement | null>(null);\r\n  const confirmBtnRef = useRef<HTMLButtonElement | null>(null);\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  // Normalize/validate category & severity\r\n  const safeCategory = useMemo<Category>(() => {\r\n    const v = String(report?.category ?? '').toLowerCase();\r\n    return (CATEGORIES as readonly string[]).includes(v) ? (v as Category) : 'other';\r\n  }, [report?.category]);\r\n\r\n  const safeSeverity = useMemo<Severity>(() => {\r\n    const v = String(report?.severity ?? '').toLowerCase();\r\n    return (SEVERITIES as readonly string[]).includes(v) ? (v as Severity) : 'medium';\r\n  }, [report?.severity]);\r\n\r\n  const prettyCategory = useMemo(() => {\r\n    return safeCategory === 'inappropriate_content'\r\n      ? 'Inappropriate Content'\r\n      : safeCategory.charAt(0).toUpperCase() + safeCategory.slice(1);\r\n  }, [safeCategory]);\r\n\r\n  const prettySeverity = useMemo(() => {\r\n    return safeSeverity.charAt(0).toUpperCase() + safeSeverity.slice(1);\r\n  }, [safeSeverity]);\r\n\r\n  // Close on ESC\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        e.stopPropagation();\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [isOpen, onClose]);\r\n\r\n  // Lock scroll + focus the confirm button on open\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    const prevOverflow = document.body.style.overflow;\r\n    document.body.style.overflow = 'hidden';\r\n    const t = setTimeout(() => {\r\n      confirmBtnRef.current?.focus();\r\n    }, 0);\r\n    return () => {\r\n      clearTimeout(t);\r\n      document.body.style.overflow = prevOverflow;\r\n    };\r\n  }, [isOpen]);\r\n\r\n  const handleBackdropClick = useCallback(\r\n    (e: React.MouseEvent<HTMLDivElement>) => {\r\n      if (e.target === e.currentTarget) onClose();\r\n    },\r\n    [onClose]\r\n  );\r\n\r\n  const handleConfirm = useCallback(async () => {\r\n    if (busy) return;\r\n    setBusy(true);\r\n    try {\r\n      // Works for both sync (void) and async (Promise<void>) handlers\r\n      await Promise.resolve(onConfirm());\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }, [onConfirm, busy]);\r\n\r\n  if (!isOpen || !report) return null;\r\n\r\n  const titleId = 'resolve-modal-title';\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 bg-black/75 backdrop-blur-sm flex items-center justify-center z-50 p-4\"\r\n      onMouseDown={handleBackdropClick}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby={titleId}\r\n    >\r\n      <div\r\n        ref={dialogRef}\r\n        className=\"bg-[#1a1a1a] border border-gray-800 rounded-lg p-6 max-w-md w-full shadow-2xl\"\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n      >\r\n        <h3 id={titleId} className=\"text-xl font-bold text-white mb-4 flex items-center\">\r\n          <CheckCircle className=\"mr-2 text-green-400\" />\r\n          Resolve Report\r\n        </h3>\r\n\r\n        <p className=\"text-gray-300 mb-4\">\r\n          Are you sure you want to mark this report as resolved without applying a ban?\r\n        </p>\r\n\r\n        <div className=\"bg-[#222] rounded-lg p-3 mb-4\">\r\n          <p className=\"text-sm text-gray-400\">Report Details:</p>\r\n\r\n          <p className=\"text-white text-sm mt-1\">\r\n            <span className=\"text-gray-400\">Reporter:</span>{' '}\r\n            <SecureMessageDisplay\r\n              content={report.reporter}\r\n              allowBasicFormatting={false}\r\n              className=\"inline\"\r\n              maxLength={120}\r\n            />\r\n          </p>\r\n\r\n          <p className=\"text-white text-sm\">\r\n            <span className=\"text-gray-400\">Reportee:</span>{' '}\r\n            <SecureMessageDisplay\r\n              content={report.reportee}\r\n              allowBasicFormatting={false}\r\n              className=\"inline\"\r\n              maxLength={120}\r\n            />\r\n          </p>\r\n\r\n          <p className=\"text-white text-sm\">\r\n            <span className=\"text-gray-400\">Category:</span>{' '}\r\n            {sanitizeStrict(prettyCategory)}\r\n          </p>\r\n\r\n          <p className=\"text-white text-sm\">\r\n            <span className=\"text-gray-400\">Severity:</span>{' '}\r\n            {sanitizeStrict(prettySeverity)}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"flex-1 px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\r\n            aria-label=\"Cancel resolving report\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            ref={confirmBtnRef}\r\n            type=\"button\"\r\n            onClick={handleConfirm}\r\n            disabled={busy}\r\n            className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-60 disabled:cursor-not-allowed flex items-center justify-center transition-colors\"\r\n            aria-label=\"Confirm resolve without ban\"\r\n          >\r\n            <CheckCircle size={16} className=\"mr-2\" />\r\n            {busy ? 'Resolvingâ€¦' : 'Resolve Without Ban'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}