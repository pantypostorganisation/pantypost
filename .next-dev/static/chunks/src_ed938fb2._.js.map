{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/RequireAuth.tsx"],"sourcesContent":["// src/components/RequireAuth.tsx\r\n'use client';\r\n\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect, useState } from 'react';\r\nimport { z } from 'zod';\r\n\r\nconst VALID_ROLES = ['buyer', 'seller', 'admin'] as const;\r\ntype ValidRole = (typeof VALID_ROLES)[number];\r\n\r\nconst RoleSchema = z.enum(VALID_ROLES);\r\n\r\nexport default function RequireAuth({\r\n  role,\r\n  children,\r\n}: {\r\n  role: ValidRole;\r\n  children: React.ReactNode;\r\n}) {\r\n  const { user, isAuthReady } = useAuth();\r\n  const router = useRouter();\r\n  const [authorized, setAuthorized] = useState(false);\r\n  const [hasChecked, setHasChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || hasChecked) return;\r\n\r\n    // Runtime validation of `role` prop (dev-only noise)\r\n    const parsed = RoleSchema.safeParse(role);\r\n    if (!parsed.success) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('[RequireAuth] Invalid role prop supplied:', role);\r\n      }\r\n      router.push('/login');\r\n      setHasChecked(true);\r\n      return;\r\n    }\r\n\r\n    const userRole = user?.role as ValidRole | undefined;\r\n\r\n    // NEW: strict role matching — no admin override for buyer/seller routes\r\n    let hasAccess = false;\r\n    if (parsed.data === 'admin') {\r\n      hasAccess = userRole === 'admin';\r\n    } else {\r\n      hasAccess = userRole === parsed.data; // admin can’t view buyer/seller pages\r\n    }\r\n\r\n    if (!user || !hasAccess) {\r\n      router.push('/login');\r\n    } else {\r\n      setAuthorized(true);\r\n    }\r\n\r\n    setHasChecked(true);\r\n  }, [isAuthReady, user, role, router, hasChecked]);\r\n\r\n  if (!isAuthReady || !hasChecked) {\r\n    return (\r\n      <div className=\"min-h-screen bg-black flex items-center justify-center\" role=\"status\" aria-label=\"Checking access\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }} />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!authorized) return null;\r\n\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AA+BvB;;AA5BV;AACA;AACA;AACA;;;AALA;;;;;AAOA,MAAM,cAAc;IAAC;IAAS;IAAU;CAAQ;AAGhD,MAAM,aAAa,qKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;;AAEX,SAAS,YAAY,KAMnC;QANmC,EAClC,IAAI,EACJ,QAAQ,EAIT,GANmC;;IAOlC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IACpC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,CAAC,eAAe,YAAY;YAEhC,qDAAqD;YACrD,MAAM,SAAS,WAAW,SAAS,CAAC;YACpC,IAAI,CAAC,OAAO,OAAO,EAAE;gBACnB,wCAA4C;oBAC1C,QAAQ,IAAI,CAAC,6CAA6C;gBAC5D;gBACA,OAAO,IAAI,CAAC;gBACZ,cAAc;gBACd;YACF;YAEA,MAAM,WAAW,iBAAA,2BAAA,KAAM,IAAI;YAE3B,wEAAwE;YACxE,IAAI,YAAY;YAChB,IAAI,OAAO,IAAI,KAAK,SAAS;gBAC3B,YAAY,aAAa;YAC3B,OAAO;gBACL,YAAY,aAAa,OAAO,IAAI,EAAE,sCAAsC;YAC9E;YAEA,IAAI,CAAC,QAAQ,CAAC,WAAW;gBACvB,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,cAAc;YAChB;YAEA,cAAc;QAChB;gCAAG;QAAC;QAAa;QAAM;QAAM;QAAQ;KAAW;IAEhD,IAAI,CAAC,eAAe,CAAC,YAAY;QAC/B,qBACE,6LAAC;YAAI,WAAU;YAAyD,MAAK;YAAS,cAAW;sBAC/F,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;kCACjG,6LAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;;;;;;;;;;;;IAIzG;IAEA,IAAI,CAAC,YAAY,OAAO;IAExB,qBAAO;kBAAG;;AACZ;GA5DwB;;QAOQ,iIAAA,CAAA,UAAO;QACtB,qIAAA,CAAA,YAAS;;;MARF","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/skeletons/AdminSkeletons.tsx"],"sourcesContent":["// src/components/skeletons/AdminSkeletons.tsx\r\n'use client';\r\n\r\nimport { useMemo } from 'react';\r\n\r\n/** Utility: clamp a numeric count to avoid runaway DOM renders */\r\nconst clampCount = (n: number | undefined, min = 1, max = 50) =>\r\n  Number.isFinite(n as number) ? Math.min(max, Math.max(min, Math.floor(n as number))) : min;\r\n\r\n// Ban Card Skeleton\r\nexport function BanCardSkeleton() {\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] border border-gray-800 rounded-lg p-6\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      <div className=\"flex justify-between items-start\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"flex items-center gap-3 mb-2\">\r\n            <div className=\"h-6 bg-gray-800 rounded w-32 animate-pulse\" />\r\n            <div className=\"h-5 bg-gray-800 rounded w-20 animate-pulse\" />\r\n          </div>\r\n\r\n          <div className=\"h-4 bg-gray-800 rounded w-48 mb-2 animate-pulse\" />\r\n          <div className=\"h-4 bg-gray-800 rounded w-36 animate-pulse\" />\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-2 ml-4\">\r\n          <div className=\"h-8 bg-gray-800 rounded w-16 animate-pulse\" />\r\n          <div className=\"h-8 bg-gray-800 rounded w-16 animate-pulse\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Report Card Skeleton\r\nexport function ReportCardSkeleton() {\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] border border-gray-800 rounded-lg overflow-hidden\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      <div className=\"p-6\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"flex items-center gap-4 mb-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"h-4 w-4 bg-gray-800 rounded animate-pulse\" />\r\n                <div className=\"h-5 bg-gray-800 rounded w-48 animate-pulse\" />\r\n              </div>\r\n              <div className=\"h-5 bg-gray-800 rounded w-24 animate-pulse\" />\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"h-4 bg-gray-800 rounded w-32 animate-pulse\" />\r\n              <div className=\"h-4 bg-gray-800 rounded w-16 animate-pulse\" />\r\n              <div className=\"h-4 bg-gray-800 rounded w-20 animate-pulse\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"h-8 bg-gray-800 rounded w-24 animate-pulse\" />\r\n            <div className=\"h-8 bg-gray-800 rounded w-24 animate-pulse\" />\r\n            <div className=\"h-5 w-5 bg-gray-800 rounded animate-pulse\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Wallet User List Skeleton\r\nexport function WalletUserListSkeleton() {\r\n  return (\r\n    <div className=\"lg:col-span-2 bg-[#1a1a1a] rounded-xl border border-gray-800 shadow-lg\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      <div className=\"p-6 border-b border-gray-800\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"h-5 w-5 bg-gray-800 rounded animate-pulse\" />\r\n          <div className=\"h-6 bg-gray-800 rounded w-24 animate-pulse\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-2 space-y-1\">\r\n        {Array.from({ length: 5 }).map((_, index) => (\r\n          <div key={index} className=\"p-3 rounded-lg bg-black/30\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-3 flex-1\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"h-4 w-4 bg-gray-800 rounded animate-pulse\" />\r\n                  <div className=\"h-4 w-4 bg-gray-800 rounded animate-pulse\" />\r\n                </div>\r\n\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-2 mb-1\">\r\n                    <div className=\"h-5 bg-gray-800 rounded w-32 animate-pulse\" />\r\n                    <div className=\"h-5 bg-gray-800 rounded w-16 animate-pulse\" />\r\n                  </div>\r\n                  <div className=\"h-4 bg-gray-800 rounded w-24 animate-pulse\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Admin Stats Skeleton (for dashboard stats)\r\nexport function AdminStatsSkeleton() {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      {Array.from({ length: 4 }).map((_, index) => (\r\n        <div key={index} className=\"bg-[#1a1a1a] rounded-lg border border-gray-800 p-6\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"h-4 bg-gray-800 rounded w-20 animate-pulse\" />\r\n            <div className=\"h-8 w-8 bg-gray-800 rounded animate-pulse\" />\r\n          </div>\r\n          <div className=\"h-8 bg-gray-800 rounded w-24 animate-pulse mb-1\" />\r\n          <div className=\"h-3 bg-gray-800 rounded w-16 animate-pulse\" />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Message Thread Skeleton\r\nexport function MessageThreadSkeleton() {\r\n  // Precompute stable widths so they don't change on re-render\r\n  const bubbleWidths = useMemo(\r\n    () => Array.from({ length: 5 }, () => 100 + Math.floor(Math.random() * 100)),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-4 p-4\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      {bubbleWidths.map((w, index) => (\r\n        <div key={index} className={`flex ${index % 2 === 0 ? 'justify-start' : 'justify-end'}`}>\r\n          <div className=\"max-w-xs space-y-2\">\r\n            <div className=\"flex items-center gap-2\">\r\n              {index % 2 === 0 && <div className=\"h-8 w-8 bg-gray-800 rounded-full animate-pulse\" />}\r\n              <div\r\n                className={`h-10 bg-gray-800 rounded-lg animate-pulse ${\r\n                  index % 2 === 0 ? 'rounded-bl-none' : 'rounded-br-none'\r\n                }`}\r\n                style={{ width: `${w}px` }}\r\n              />\r\n              {index % 2 !== 0 && <div className=\"h-8 w-8 bg-gray-800 rounded-full animate-pulse\" />}\r\n            </div>\r\n            <div className=\"h-3 bg-gray-800 rounded animate-pulse w-20 ml-10\" />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Verification Card Skeleton\r\nexport function VerificationCardSkeleton() {\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] rounded-lg border border-gray-800 p-6\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      <div className=\"flex justify-between items-start mb-4\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <div className=\"h-10 w-10 bg-gray-800 rounded-full animate-pulse\" />\r\n          <div>\r\n            <div className=\"h-5 bg-gray-800 rounded w-32 animate-pulse mb-1\" />\r\n            <div className=\"h-4 bg-gray-800 rounded w-24 animate-pulse\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"h-5 bg-gray-800 rounded w-20 animate-pulse\" />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-3 gap-2 mb-4\">\r\n        {Array.from({ length: 3 }).map((_, index) => (\r\n          <div key={index} className=\"aspect-square bg-gray-800 rounded animate-pulse\" />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"flex gap-2\">\r\n        <div className=\"h-9 bg-gray-800 rounded flex-1 animate-pulse\" />\r\n        <div className=\"h-9 bg-gray-800 rounded flex-1 animate-pulse\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Order Card Skeleton (from your OrderCard component)\r\nexport function OrderCardSkeleton() {\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] rounded-lg border border-gray-800 overflow-hidden\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      <div className=\"p-6\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"h-12 w-12 bg-gray-800 rounded-full animate-pulse\" />\r\n            <div>\r\n              <div className=\"h-5 bg-gray-800 rounded w-48 animate-pulse mb-2\" />\r\n              <div className=\"flex gap-4\">\r\n                <div className=\"h-4 bg-gray-800 rounded w-24 animate-pulse\" />\r\n                <div className=\"h-4 bg-gray-800 rounded w-20 animate-pulse\" />\r\n                <div className=\"h-4 bg-gray-800 rounded w-16 animate-pulse\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"h-6 bg-gray-800 rounded w-24 animate-pulse\" />\r\n            <div className=\"h-8 w-8 bg-gray-800 rounded animate-pulse\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// List Skeletons (for multiple items)\r\nexport function BanListSkeleton({ count = 5 }: { count?: number }) {\r\n  const safe = clampCount(count, 1, 50);\r\n  return (\r\n    <div className=\"space-y-4\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      {Array.from({ length: safe }).map((_, index) => (\r\n        <BanCardSkeleton key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ReportListSkeleton({ count = 5 }: { count?: number }) {\r\n  const safe = clampCount(count, 1, 50);\r\n  return (\r\n    <div className=\"space-y-4\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      {Array.from({ length: safe }).map((_, index) => (\r\n        <ReportCardSkeleton key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function OrderListSkeleton({ count = 5 }: { count?: number }) {\r\n  const safe = clampCount(count, 1, 50);\r\n  return (\r\n    <div className=\"space-y-4\" role=\"status\" aria-live=\"polite\" aria-busy=\"true\">\r\n      {Array.from({ length: safe }).map((_, index) => (\r\n        <OrderCardSkeleton key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/app/admin/reports/page.tsx"],"sourcesContent":["// src/app/admin/reports/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, lazy, Suspense } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useBans } from '@/context/BanContext';\r\nimport RequireAuth from '@/components/RequireAuth';\r\nimport { storageService } from '@/services';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\nimport { securityService } from '@/services/security.service';\r\nimport type { ReportLog, BanFormData, ReportStats, UserReportStats } from '@/components/admin/reports/types';\r\nimport {\r\n  ReportListSkeleton,\r\n  AdminStatsSkeleton\r\n} from '@/components/skeletons/AdminSkeletons';\r\n\r\n// Lazy load heavy components\r\nconst ReportsHeader = lazy(() => import('@/components/admin/reports/ReportsHeader'));\r\nconst ReportsStats = lazy(() => import('@/components/admin/reports/ReportsStats'));\r\nconst ReportsFilters = lazy(() => import('@/components/admin/reports/ReportsFilters'));\r\nconst ReportsList = lazy(() => import('@/components/admin/reports/ReportsList'));\r\nconst BanModal = lazy(() => import('@/components/admin/reports/BanModal'));\r\nconst ResolveModal = lazy(() => import('@/components/admin/reports/ResolveModal'));\r\n\r\n// Loading skeleton for filters\r\nfunction FiltersSkeletons() {\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] rounded-lg border border-gray-800 p-4 mb-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        {[...Array(5)].map((_, i) => (\r\n          <div key={i} className=\"h-10 bg-gray-800 rounded animate-pulse\" />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Loading skeleton for modals\r\nfunction ModalSkeleton() {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center\">\r\n      <div className=\"bg-[#1a1a1a] rounded-lg p-6 w-full max-w-md\">\r\n        <div className=\"h-6 bg-gray-800 rounded w-32 mb-4 animate-pulse\" />\r\n        <div className=\"space-y-3\">\r\n          <div className=\"h-4 bg-gray-800 rounded animate-pulse\" />\r\n          <div className=\"h-4 bg-gray-800 rounded w-3/4 animate-pulse\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ---- Mock data detection (conservative) ----\r\nconst isMockString = (val?: string) => {\r\n  if (!val) return false;\r\n  const v = String(val).trim().toLowerCase();\r\n  // Avoid over-aggressive removal; only common dev-demo patterns\r\n  const patterns = [\r\n    'spammer',       // e.g., spammer999\r\n    'spam_bot',      // explicit mock\r\n    'test',          // test, testuser, etc.\r\n    'demo',          // demo accounts\r\n    'sample',        // sample data\r\n    'mock',          // mock entries\r\n    'lorem', 'ipsum',\r\n    'john_doe', 'jane_doe'\r\n  ];\r\n  // exact dev junk or clear substrings\r\n  return patterns.some(p => v.includes(p));\r\n};\r\n\r\nconst isMockReport = (r: ReportLog) => {\r\n  return (\r\n    isMockString(r.reporter) ||\r\n    isMockString(r.reportee) ||\r\n    isMockString(r.adminNotes) ||\r\n    (r.category && isMockString(r.category)) ||\r\n    (r.severity && isMockString(r.severity)) ||\r\n    (r.id && (r.id.startsWith('mock_') || r.id.includes('sample') || r.id.includes('test')))\r\n  );\r\n};\r\n// -------------------------------------------\r\n\r\nexport default function AdminReportsPage() {\r\n  const { user } = useAuth();\r\n\r\n  // Safely handle the ban context with try-catch\r\n  let banContext: any = null;\r\n  let banContextError: string | null = null;\r\n\r\n  try {\r\n    banContext = useBans();\r\n  } catch (error) {\r\n    console.error('Error initializing ban context:', error);\r\n    banContextError = 'Ban management system not available';\r\n    // Provide fallback methods to prevent crashes\r\n    banContext = {\r\n      banUser: () => Promise.resolve(false),\r\n      getActiveBans: () => [],\r\n      getBanStats: () => ({\r\n        totalActiveBans: 0,\r\n        temporaryBans: 0,\r\n        permanentBans: 0,\r\n        pendingAppeals: 0,\r\n        recentBans24h: 0,\r\n        bansByReason: {},\r\n        appealStats: { totalAppeals: 0, pendingAppeals: 0, approvedAppeals: 0, rejectedAppeals: 0 }\r\n      }),\r\n      getBanInfo: () => null,\r\n      validateBanInput: () => ({ valid: true })\r\n    };\r\n  }\r\n\r\n  // State variables\r\n  const [reports, setReports] = useState<ReportLog[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterBy, setFilterBy] = useState<'all' | 'unprocessed' | 'processed'>('unprocessed');\r\n  const [severityFilter, setSeverityFilter] = useState<'all' | 'low' | 'medium' | 'high' | 'critical'>('all');\r\n  const [categoryFilter, setCategoryFilter] = useState<'all' | 'harassment' | 'spam' | 'inappropriate_content' | 'scam' | 'other'>('all');\r\n  const [selectedReport, setSelectedReport] = useState<ReportLog | null>(null);\r\n  const [expandedReports, setExpandedReports] = useState<Set<string>>(new Set());\r\n  const [showBanModal, setShowBanModal] = useState(false);\r\n  const [showResolveModal, setShowResolveModal] = useState(false);\r\n  const [sortBy, setSortBy] = useState<'date' | 'severity' | 'reporter'>('date');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\r\n  const [banForm, setBanForm] = useState<BanFormData>({\r\n    username: '',\r\n    banType: 'temporary',\r\n    hours: '24',\r\n    reason: 'harassment',\r\n    customReason: '',\r\n    notes: ''\r\n  });\r\n  const [isProcessingBan, setIsProcessingBan] = useState(false);\r\n  const [reportBanInfo, setReportBanInfo] = useState<{ [key: string]: any }>({});\r\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\r\n  const [isLoadingReports, setIsLoadingReports] = useState(true);\r\n  const [mockRemovalCount, setMockRemovalCount] = useState<number>(0);\r\n\r\n  // Load reports (and cleanse mock data)\r\n  useEffect(() => {\r\n    loadReports();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const loadReports = async () => {\r\n    setIsLoadingReports(true);\r\n    if (typeof window !== 'undefined') {\r\n      try {\r\n        const stored = await storageService.getItem<ReportLog[]>('panty_report_logs', []);\r\n        // Sanitize stored reports and normalize\r\n        const enhancedReports = stored.map((report, index) => ({\r\n          ...report,\r\n          id: report.id || `report_${Date.now()}_${index}`,\r\n          processed: report.processed || false,\r\n          severity: report.severity || 'medium',\r\n          category: report.category || 'other',\r\n          // Sanitize text fields\r\n          reporter: sanitizeStrict(report.reporter || ''),\r\n          reportee: sanitizeStrict(report.reportee || ''),\r\n          adminNotes: sanitizeStrict(report.adminNotes || ''),\r\n          processedBy: report.processedBy ? sanitizeStrict(report.processedBy) : undefined\r\n        }));\r\n\r\n        // Remove any mock/dev data\r\n        const cleansed = enhancedReports.filter(r => !isMockReport(r));\r\n        const removedCount = enhancedReports.length - cleansed.length;\r\n\r\n        // Sort newest → oldest\r\n        cleansed.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n        // Persist the cleansed list if anything was removed\r\n        if (removedCount > 0) {\r\n          await storageService.setItem('panty_report_logs', cleansed);\r\n          setMockRemovalCount(removedCount);\r\n        } else {\r\n          setMockRemovalCount(0);\r\n        }\r\n\r\n        setReports(cleansed);\r\n        setLastRefresh(new Date());\r\n      } catch (error) {\r\n        console.error('Error loading reports:', error);\r\n        setReports([]);\r\n      } finally {\r\n        setIsLoadingReports(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Calculate user report statistics\r\n  const getUserReportStats = (username: string): UserReportStats => {\r\n    const sanitizedUsername = sanitizeStrict(username);\r\n    const userReports = reports.filter((report) => report.reportee === sanitizedUsername);\r\n    const activeReports = userReports.filter((report) => !report.processed);\r\n    const totalReports = userReports.length;\r\n\r\n    // Get current ban status\r\n    const banInfo =\r\n      banContext && typeof banContext.getBanInfo === 'function'\r\n        ? banContext.getBanInfo(sanitizedUsername)\r\n        : null;\r\n\r\n    return {\r\n      totalReports,\r\n      activeReports: activeReports.length,\r\n      processedReports: totalReports - activeReports.length,\r\n      isBanned: !!banInfo,\r\n      banInfo,\r\n      reportHistory: userReports.sort(\r\n        (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()\r\n      )\r\n    };\r\n  };\r\n\r\n  // Handle search term update with sanitization\r\n  const handleSearchTermChange = (newSearchTerm: string) => {\r\n    const sanitized = securityService.sanitizeSearchQuery(newSearchTerm);\r\n    setSearchTerm(sanitized);\r\n  };\r\n\r\n  // Calculate filtered and sorted reports\r\n  const filteredAndSortedReports = (() => {\r\n    let filtered = reports.filter((report) => {\r\n      if (!report) return false;\r\n\r\n      const searchLower = searchTerm.toLowerCase();\r\n      const matchesSearch = searchTerm\r\n        ? (report.reporter && report.reporter.toLowerCase().includes(searchLower)) ||\r\n          (report.reportee && report.reportee.toLowerCase().includes(searchLower)) ||\r\n          (report.adminNotes && report.adminNotes.toLowerCase().includes(searchLower))\r\n        : true;\r\n\r\n      const matchesFilter =\r\n        filterBy === 'all' ? true : filterBy === 'processed' ? report.processed : !report.processed;\r\n\r\n      const matchesSeverity = severityFilter === 'all' ? true : report.severity === severityFilter;\r\n\r\n      const matchesCategory = categoryFilter === 'all' ? true : report.category === categoryFilter;\r\n\r\n      return matchesSearch && matchesFilter && matchesSeverity && matchesCategory;\r\n    });\r\n\r\n    // Sort\r\n    filtered.sort((a, b) => {\r\n      let comparison = 0;\r\n\r\n      switch (sortBy) {\r\n        case 'severity': {\r\n          const severityOrder: Record<string, number> = { critical: 4, high: 3, medium: 2, low: 1 };\r\n          comparison =\r\n            (severityOrder[a.severity || 'medium'] || 2) -\r\n            (severityOrder[b.severity || 'medium'] || 2);\r\n          break;\r\n        }\r\n        case 'reporter':\r\n          comparison = (a.reporter || '').localeCompare(b.reporter || '');\r\n          break;\r\n        case 'date':\r\n        default:\r\n          comparison = new Date(a.date || 0).getTime() - new Date(b.date || 0).getTime();\r\n          break;\r\n      }\r\n\r\n      return sortOrder === 'asc' ? comparison : -comparison;\r\n    });\r\n\r\n    return filtered;\r\n  })();\r\n\r\n  // Update ban info\r\n  useEffect(() => {\r\n    if (!banContext || !filteredAndSortedReports.length) return;\r\n\r\n    const updateBanInfo = () => {\r\n      try {\r\n        const newBanInfo: { [key: string]: any } = {};\r\n        const uniqueReportees = [...new Set(filteredAndSortedReports.map((r) => r.reportee))];\r\n\r\n        uniqueReportees.forEach((reportee) => {\r\n          if (reportee && typeof banContext.getBanInfo === 'function') {\r\n            try {\r\n              const banInfo = banContext.getBanInfo(reportee);\r\n              newBanInfo[reportee] = banInfo;\r\n            } catch (error) {\r\n              console.error(`Error getting ban info for ${sanitizeStrict(reportee)}:`, error);\r\n              newBanInfo[reportee] = null;\r\n            }\r\n          }\r\n        });\r\n\r\n        setReportBanInfo(newBanInfo);\r\n      } catch (error) {\r\n        console.error('Error updating ban info:', error);\r\n      }\r\n    };\r\n\r\n    const timeoutId = setTimeout(updateBanInfo, 100);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [filteredAndSortedReports, banContext]);\r\n\r\n  // Save reports with sanitization\r\n  const saveReports = async (newReports: ReportLog[]) => {\r\n    // Sanitize before saving\r\n    const sanitizedReports = newReports.map((report) => ({\r\n      ...report,\r\n      reporter: sanitizeStrict(report.reporter || ''),\r\n      reportee: sanitizeStrict(report.reportee || ''),\r\n      adminNotes: sanitizeStrict(report.adminNotes || ''),\r\n      processedBy: report.processedBy ? sanitizeStrict(report.processedBy) : undefined\r\n    }))\r\n    // Also ensure we never save mock entries\r\n    .filter(r => !isMockReport(r));\r\n\r\n    setReports(sanitizedReports);\r\n    await storageService.setItem('panty_report_logs', sanitizedReports);\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new Event('updateReports'));\r\n    }\r\n  };\r\n\r\n  // Toggle expanded state\r\n  const toggleExpanded = (reportId: string) => {\r\n    setExpandedReports((prev) => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(reportId)) {\r\n        newSet.delete(reportId);\r\n      } else {\r\n        newSet.add(reportId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  // Handle manual ban with sanitization\r\n  const handleManualBan = async () => {\r\n    if (!banContext || typeof banContext.banUser !== 'function') {\r\n      alert('Ban system not available');\r\n      return;\r\n    }\r\n\r\n    setIsProcessingBan(true);\r\n\r\n    try {\r\n      const adminUsername = user?.username || 'admin';\r\n      const reportIds = selectedReport ? [selectedReport.id!] : [];\r\n\r\n      // Sanitize form inputs\r\n      const sanitizedUsername = sanitizeStrict(banForm.username);\r\n      const sanitizedNotes = sanitizeStrict(banForm.notes);\r\n      const sanitizedCustomReason = sanitizeStrict(banForm.customReason);\r\n\r\n      // Robust duration parsing\r\n      const parsed = parseInt(String(banForm.hours), 10);\r\n      const duration =\r\n        banForm.banType === 'permanent'\r\n          ? 'permanent'\r\n          : Number.isFinite(parsed) && parsed > 0\r\n          ? parsed\r\n          : 24;\r\n\r\n      const success = await banContext.banUser(\r\n        sanitizedUsername,\r\n        duration,\r\n        banForm.reason,\r\n        adminUsername,\r\n        sanitizedNotes,\r\n        reportIds,\r\n        sanitizedCustomReason\r\n      );\r\n\r\n      if (success) {\r\n        // Update report if it was from a report\r\n        if (selectedReport) {\r\n          const updatedReports = reports.map((r) =>\r\n            r.id === selectedReport.id\r\n              ? {\r\n                  ...r,\r\n                  processed: true,\r\n                  banApplied: true,\r\n                  processedBy: adminUsername,\r\n                  processedAt: new Date().toISOString()\r\n                }\r\n              : r\r\n          );\r\n          await saveReports(updatedReports);\r\n        }\r\n\r\n        setShowBanModal(false);\r\n        setSelectedReport(null);\r\n        resetBanForm();\r\n\r\n        const durationText = banForm.banType === 'permanent' ? 'permanently' : `for ${duration} hours`;\r\n        alert(`Successfully banned ${sanitizedUsername} ${durationText}`);\r\n      } else {\r\n        alert('Failed to ban user. They may already be banned or invalid parameters provided.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error applying ban:', error);\r\n      alert('An error occurred while applying the ban.');\r\n    } finally {\r\n      setIsProcessingBan(false);\r\n    }\r\n  };\r\n\r\n  // Update ban form with sanitization\r\n  const updateBanForm = (form: BanFormData | ((prev: BanFormData) => BanFormData)) => {\r\n    setBanForm((prev) => {\r\n      const newForm = typeof form === 'function' ? form(prev) : form;\r\n\r\n      // Sanitize text fields\r\n      return {\r\n        ...newForm,\r\n        username: sanitizeStrict(newForm.username),\r\n        customReason: sanitizeStrict(newForm.customReason),\r\n        notes: sanitizeStrict(newForm.notes)\r\n      };\r\n    });\r\n  };\r\n\r\n  // Reset ban form\r\n  const resetBanForm = () => {\r\n    setBanForm({\r\n      username: '',\r\n      banType: 'temporary',\r\n      hours: '24',\r\n      reason: 'harassment',\r\n      customReason: '',\r\n      notes: ''\r\n    });\r\n  };\r\n\r\n  // Mark report as resolved\r\n  const handleMarkResolved = (report: ReportLog) => {\r\n    setSelectedReport(report);\r\n    setShowResolveModal(true);\r\n  };\r\n\r\n  const confirmResolve = async () => {\r\n    if (!selectedReport) return;\r\n\r\n    const adminUsername = user?.username || 'admin';\r\n\r\n    // Update report as processed\r\n    const updatedReports = reports.map((r) =>\r\n      r.id === selectedReport.id\r\n        ? {\r\n            ...r,\r\n            processed: true,\r\n            banApplied: false,\r\n            processedBy: adminUsername,\r\n            processedAt: new Date().toISOString(),\r\n            adminNotes: sanitizeStrict((r.adminNotes || '') + '\\n[Resolved without ban]')\r\n          }\r\n        : r\r\n    );\r\n    await saveReports(updatedReports);\r\n\r\n    // Add to resolved reports with sanitization (and never save mock)\r\n    const resolvedEntry = {\r\n      reporter: sanitizeStrict(selectedReport.reporter),\r\n      reportee: sanitizeStrict(selectedReport.reportee),\r\n      date: new Date().toISOString(),\r\n      resolvedBy: adminUsername,\r\n      resolvedReason: 'Resolved without ban',\r\n      banApplied: false,\r\n      notes: sanitizeStrict(selectedReport.adminNotes || 'No admin notes')\r\n    };\r\n    if (!(isMockString(resolvedEntry.reporter) || isMockString(resolvedEntry.reportee))) {\r\n      const existingResolved = await storageService.getItem<any[]>('panty_report_resolved', []);\r\n      existingResolved.push(resolvedEntry);\r\n      await storageService.setItem('panty_report_resolved', existingResolved);\r\n    }\r\n\r\n    setShowResolveModal(false);\r\n    setSelectedReport(null);\r\n    alert(`Report marked as resolved without ban`);\r\n  };\r\n\r\n  // Delete report\r\n  const handleDeleteReport = async (reportId: string) => {\r\n    if (confirm('Are you sure you want to delete this report? This action cannot be undone.')) {\r\n      const updatedReports = reports.filter((r) => r.id !== reportId);\r\n      await saveReports(updatedReports);\r\n      alert('Report deleted');\r\n    }\r\n  };\r\n\r\n  // Update report severity\r\n  const updateReportSeverity = async (reportId: string, severity: ReportLog['severity']) => {\r\n    const updatedReports = reports.map((r) => (r.id === reportId ? { ...r, severity } : r));\r\n    await saveReports(updatedReports);\r\n  };\r\n\r\n  // Update report category\r\n  const updateReportCategory = async (reportId: string, category: ReportLog['category']) => {\r\n    const updatedReports = reports.map((r) => (r.id === reportId ? { ...r, category } : r));\r\n    await saveReports(updatedReports);\r\n  };\r\n\r\n  // Update admin notes with sanitization\r\n  const updateAdminNotes = async (reportId: string, notes: string) => {\r\n    const sanitizedNotes = sanitizeStrict(notes);\r\n    const updatedReports = reports.map((report) =>\r\n      report.id === reportId ? { ...report, adminNotes: sanitizedNotes } : report\r\n    );\r\n    await saveReports(updatedReports);\r\n  };\r\n\r\n  // Handle ban from report\r\n  const handleBanFromReport = (report: ReportLog) => {\r\n    setSelectedReport(report);\r\n    updateBanForm({\r\n      username: report.reportee,\r\n      banType: 'temporary',\r\n      hours: '24',\r\n      reason: report.category || 'harassment',\r\n      customReason: '',\r\n      notes: ''\r\n    });\r\n    setShowBanModal(true);\r\n  };\r\n\r\n  // Calculate report stats\r\n  const reportStats: ReportStats = {\r\n    total: reports.length,\r\n    unprocessed: reports.filter((r) => !r.processed).length,\r\n    processed: reports.filter((r) => r.processed).length,\r\n    critical: reports.filter((r) => r.severity === 'critical' && !r.processed).length,\r\n    today: reports.filter((r) => {\r\n      const reportDate = new Date(r.date);\r\n      const today = new Date();\r\n      return reportDate.toDateString() === today.toDateString();\r\n    }).length,\r\n    withBans: reports.filter((r) => r.banApplied).length\r\n  };\r\n\r\n  return (\r\n    <RequireAuth role=\"admin\">\r\n      <main className=\"p-8 max-w-7xl mx-auto\">\r\n        {/* Optional banner if we cleaned mock entries */}\r\n        {mockRemovalCount > 0 && (\r\n          <div className=\"mb-4 p-3 rounded border border-yellow-600/30 bg-yellow-600/10 text-yellow-300 text-sm\">\r\n            Removed {mockRemovalCount} mock report{mockRemovalCount === 1 ? '' : 's'} from storage.\r\n          </div>\r\n        )}\r\n\r\n        <Suspense fallback={<div className=\"h-20 bg-gray-800 rounded mb-6 animate-pulse\" />}>\r\n          <ReportsHeader banContextError={banContextError} lastRefresh={lastRefresh} onRefresh={loadReports} />\r\n        </Suspense>\r\n\r\n        <Suspense fallback={<AdminStatsSkeleton />}>\r\n          <ReportsStats reportStats={reportStats} />\r\n        </Suspense>\r\n\r\n        <Suspense fallback={<FiltersSkeletons />}>\r\n          <ReportsFilters\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={handleSearchTermChange}\r\n            filterBy={filterBy}\r\n            setFilterBy={setFilterBy}\r\n            severityFilter={severityFilter}\r\n            setSeverityFilter={setSeverityFilter}\r\n            categoryFilter={categoryFilter}\r\n            setCategoryFilter={setCategoryFilter}\r\n            sortBy={sortBy}\r\n            setSortBy={setSortBy}\r\n            sortOrder={sortOrder}\r\n            setSortOrder={setSortOrder}\r\n          />\r\n        </Suspense>\r\n\r\n        {isLoadingReports ? (\r\n          <ReportListSkeleton count={5} />\r\n        ) : (\r\n          <Suspense fallback={<ReportListSkeleton count={5} />}>\r\n            <ReportsList\r\n              reports={filteredAndSortedReports}\r\n              searchTerm={searchTerm}\r\n              expandedReports={expandedReports}\r\n              toggleExpanded={toggleExpanded}\r\n              onBan={handleBanFromReport}\r\n              onResolve={handleMarkResolved}\r\n              onDelete={handleDeleteReport}\r\n              onUpdateSeverity={updateReportSeverity}\r\n              onUpdateCategory={updateReportCategory}\r\n              onUpdateAdminNotes={updateAdminNotes}\r\n              getUserReportStats={getUserReportStats}\r\n              banContext={banContext}\r\n              reportBanInfo={reportBanInfo}\r\n            />\r\n          </Suspense>\r\n        )}\r\n\r\n        {showBanModal && (\r\n          <Suspense fallback={<ModalSkeleton />}>\r\n            <BanModal\r\n              isOpen={showBanModal}\r\n              banForm={banForm}\r\n              setBanForm={updateBanForm}\r\n              isProcessing={isProcessingBan}\r\n              onClose={() => {\r\n                setShowBanModal(false);\r\n                resetBanForm();\r\n              }}\r\n              onConfirm={handleManualBan}\r\n            />\r\n          </Suspense>\r\n        )}\r\n\r\n        {showResolveModal && (\r\n          <Suspense fallback={<ModalSkeleton />}>\r\n            <ResolveModal\r\n              isOpen={showResolveModal}\r\n              report={selectedReport}\r\n              onClose={() => {\r\n                setShowResolveModal(false);\r\n                setSelectedReport(null);\r\n              }}\r\n              onConfirm={confirmResolve}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </main>\r\n    </RequireAuth>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}