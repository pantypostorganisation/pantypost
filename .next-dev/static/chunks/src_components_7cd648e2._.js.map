{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/ui/SecureForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { FormEvent, useState, useEffect } from 'react';\r\nimport { AlertCircle, ShieldCheck, Loader2 } from 'lucide-react';\r\nimport { getRateLimiter, getRateLimitMessage } from '@/utils/security/rate-limiter';\r\n\r\ninterface SecureFormProps {\r\n  children: React.ReactNode;\r\n  onSubmit: (e: FormEvent) => Promise<void> | void;\r\n  className?: string;\r\n  rateLimitKey?: string;\r\n  rateLimitConfig?: { maxAttempts: number; windowMs: number };\r\n  showSecurityBadge?: boolean;\r\n  csrfProtection?: boolean;\r\n  isRateLimited?: boolean;\r\n  rateLimitWaitTime?: number;\r\n}\r\n\r\n/**\r\n * Secure form wrapper with CSRF protection and rate limiting\r\n */\r\nexport const SecureForm: React.FC<SecureFormProps> = ({\r\n  children,\r\n  onSubmit,\r\n  className = '',\r\n  rateLimitKey,\r\n  rateLimitConfig,\r\n  showSecurityBadge = false,\r\n  csrfProtection = true,\r\n  isRateLimited = false,\r\n  rateLimitWaitTime = 0,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [rateLimitError, setRateLimitError] = useState<string | null>(null);\r\n  const [csrfToken, setCsrfToken] = useState<string>('');\r\n\r\n  // Initialize CSRF token\r\n  useEffect(() => {\r\n    if (csrfProtection && typeof window !== 'undefined') {\r\n      const tokenManager = new CSRFTokenManager();\r\n      const token = tokenManager.generateToken();\r\n      setCsrfToken(token);\r\n    }\r\n  }, [csrfProtection]);\r\n\r\n  // Update rate limit error when props change\r\n  useEffect(() => {\r\n    if (isRateLimited && rateLimitWaitTime > 0) {\r\n      setRateLimitError(\r\n        `Too many attempts. Please wait ${rateLimitWaitTime} seconds before trying again.`\r\n      );\r\n    } else {\r\n      setRateLimitError(null);\r\n    }\r\n  }, [isRateLimited, rateLimitWaitTime]);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Don't submit if externally rate limited\r\n    if (isRateLimited) {\r\n      return;\r\n    }\r\n\r\n    // Clear previous errors\r\n    setRateLimitError(null);\r\n\r\n    // Check rate limit if configured and not already checked externally\r\n    if (rateLimitKey && rateLimitConfig && !isRateLimited) {\r\n      const limiter = getRateLimiter();\r\n      const result = limiter.check(rateLimitKey, rateLimitConfig);\r\n\r\n      if (!result.allowed) {\r\n        setRateLimitError(getRateLimitMessage(result));\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      await onSubmit(e);\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n\r\n      // If it's a rate limit error, reset the attempt\r\n      if (rateLimitKey && error instanceof Error && error.message.includes('Rate limit')) {\r\n        const limiter = getRateLimiter();\r\n        limiter.reset(rateLimitKey);\r\n      }\r\n\r\n      throw error;\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={className} noValidate>\r\n      {/* CSRF Token (hidden) */}\r\n      {csrfProtection && csrfToken && <input type=\"hidden\" name=\"_csrf\" value={csrfToken} />}\r\n\r\n      {/* Security Badge */}\r\n      {showSecurityBadge && (\r\n        <div className=\"mb-4 flex items-center gap-2 text-xs text-gray-500\">\r\n          <ShieldCheck className=\"w-4 h-4\" />\r\n          <span>Secure form with protection against attacks</span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Rate Limit Error - only show if not handled externally */}\r\n      {rateLimitError && !isRateLimited && (\r\n        <div className=\"mb-4 p-3 bg-red-500/10 border border-red-500/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 text-sm text-red-400\">\r\n            <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{rateLimitError}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Form Content */}\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\n/**\r\n * Field wrapper for consistent styling and error handling\r\n */\r\ninterface SecureFieldWrapperProps {\r\n  children: React.ReactNode;\r\n  error?: string;\r\n  touched?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport const SecureFieldWrapper: React.FC<SecureFieldWrapperProps> = ({\r\n  children,\r\n  error,\r\n  touched,\r\n  className = '',\r\n}) => (\r\n  <div className={className}>\r\n    {children}\r\n    {touched && error && (\r\n      <div className=\"mt-1 flex items-center gap-1 text-xs text-red-400\">\r\n        <AlertCircle className=\"w-3 h-3 flex-shrink-0\" />\r\n        <span>{error}</span>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\n/**\r\n * Secure submit button with loading state\r\n */\r\ninterface SecureSubmitButtonProps {\r\n  children: React.ReactNode;\r\n  isLoading?: boolean;\r\n  isDisabled?: boolean;\r\n  className?: string;\r\n  loadingText?: string;\r\n  type?: 'submit' | 'button';\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const SecureSubmitButton: React.FC<SecureSubmitButtonProps> = ({\r\n  children,\r\n  isLoading = false,\r\n  isDisabled = false,\r\n  disabled = false,\r\n  className = '',\r\n  loadingText = 'Processing...',\r\n  type = 'submit',\r\n}) => (\r\n  <button\r\n    type={type}\r\n    disabled={isLoading || isDisabled || disabled}\r\n    className={`relative ${className} ${\r\n      isLoading || isDisabled || disabled ? 'opacity-50 cursor-not-allowed' : ''\r\n    }`}\r\n  >\r\n    {isLoading ? (\r\n      <span className=\"flex items-center justify-center gap-2\">\r\n        <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n        {loadingText}\r\n      </span>\r\n    ) : (\r\n      children\r\n    )}\r\n  </button>\r\n);\r\n\r\n/**\r\n * CSRF Token Manager for form protection\r\n */\r\nclass CSRFTokenManager {\r\n  private tokenKey = 'csrf_token';\r\n  private tokenExpiry = 60 * 60 * 1000; // 1 hour\r\n\r\n  generateToken(): string {\r\n    const token = this.createSecureToken();\r\n    const expiry = Date.now() + this.tokenExpiry;\r\n\r\n    if (typeof window !== 'undefined') {\r\n      sessionStorage.setItem(this.tokenKey, JSON.stringify({ token, expiry }));\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n  validateToken(token: string): boolean {\r\n    if (typeof window === 'undefined') return false;\r\n\r\n    try {\r\n      const stored = sessionStorage.getItem(this.tokenKey);\r\n      if (!stored) return false;\r\n\r\n      const { token: storedToken, expiry } = JSON.parse(stored);\r\n\r\n      if (Date.now() > expiry) {\r\n        sessionStorage.removeItem(this.tokenKey);\r\n        return false;\r\n      }\r\n\r\n      return token === storedToken;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private createSecureToken(): string {\r\n    const array = new Uint8Array(32);\r\n    crypto.getRandomValues(array);\r\n    return Array.from(array, (byte) => byte.toString(16).padStart(2, '0')).join('');\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/admin/reports/BanModal.tsx"],"sourcesContent":["// src/components/admin/reports/BanModal.tsx\r\n'use client';\r\n\r\nimport { Ban, AlertCircle } from 'lucide-react';\r\nimport { BanModalProps } from './types';\r\nimport { SecureInput, SecureTextarea } from '@/components/ui/SecureInput';\r\nimport { SecureForm } from '@/components/ui/SecureForm';\r\nimport { sanitizeNumber } from '@/utils/security/sanitization';\r\nimport { useState, useEffect } from 'react';\r\nimport { usersService } from '@/services/users.service';\r\n\r\nexport default function BanModal({\r\n  isOpen,\r\n  banForm,\r\n  setBanForm,\r\n  isProcessing,\r\n  onClose,\r\n  onConfirm\r\n}: BanModalProps) {\r\n  const [touched, setTouched] = useState({\r\n    username: false,\r\n    hours: false,\r\n    customReason: false,\r\n    details: false,\r\n    notes: false\r\n  });\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [targetUserRole, setTargetUserRole] = useState<'buyer' | 'seller' | 'admin' | null>(null);\r\n  const [isCheckingUser, setIsCheckingUser] = useState(false);\r\n\r\n  // Check user role when username changes\r\n  useEffect(() => {\r\n    const checkUserRole = async () => {\r\n      if (!banForm.username.trim()) {\r\n        setTargetUserRole(null);\r\n        return;\r\n      }\r\n      \r\n      setIsCheckingUser(true);\r\n      try {\r\n        const result = await usersService.getUser(banForm.username);\r\n        if (result.success && result.data) {\r\n          setTargetUserRole(result.data.role);\r\n          \r\n          // If user is admin, set error immediately\r\n          if (result.data.role === 'admin') {\r\n            setErrors(prev => ({\r\n              ...prev,\r\n              username: 'Admin accounts cannot be banned'\r\n            }));\r\n          } else {\r\n            // Clear username error if not admin\r\n            setErrors(prev => {\r\n              const { username, ...rest } = prev;\r\n              return rest;\r\n            });\r\n          }\r\n        } else {\r\n          setTargetUserRole(null);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to check user role:', error);\r\n        setTargetUserRole(null);\r\n      } finally {\r\n        setIsCheckingUser(false);\r\n      }\r\n    };\r\n    \r\n    const debounceTimer = setTimeout(checkUserRole, 500);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [banForm.username]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Handle secure form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n    \r\n    const validationErrors: Record<string, string> = {};\r\n    \r\n    // Validate username\r\n    if (!banForm.username.trim()) {\r\n      validationErrors.username = 'Username is required';\r\n    }\r\n    \r\n    // Check if trying to ban an admin\r\n    if (targetUserRole === 'admin') {\r\n      validationErrors.username = 'Admin accounts cannot be banned';\r\n    }\r\n    \r\n    // Validate hours for temporary ban\r\n    if (banForm.banType === 'temporary') {\r\n      const hours = parseInt(banForm.hours);\r\n      if (isNaN(hours) || hours < 1 || hours > 8760) { // Max 1 year\r\n        validationErrors.hours = 'Please enter valid hours (1-8760)';\r\n      }\r\n    }\r\n    \r\n    // Validate custom reason if \"other\" is selected\r\n    if (banForm.reason === 'other' && !banForm.customReason.trim()) {\r\n      validationErrors.customReason = 'Please specify a custom reason';\r\n    }\r\n    \r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      setTouched({\r\n        username: true,\r\n        hours: true,\r\n        customReason: true,\r\n        details: true,\r\n        notes: true\r\n      });\r\n      return;\r\n    }\r\n    \r\n    await onConfirm();\r\n  };\r\n\r\n  // Handle secure hours change\r\n  const handleHoursChange = (value: string) => {\r\n    if (value === '') {\r\n      setBanForm(prev => ({ ...prev, hours: '' }));\r\n    } else {\r\n      const sanitized = sanitizeNumber(value, 1, 8760); // 1 hour to 1 year\r\n      setBanForm(prev => ({ ...prev, hours: sanitized.toString() }));\r\n    }\r\n  };\r\n\r\n  // Reset form when closing\r\n  const handleClose = () => {\r\n    setTouched({\r\n      username: false,\r\n      hours: false,\r\n      customReason: false,\r\n      details: false,\r\n      notes: false\r\n    });\r\n    setErrors({});\r\n    setTargetUserRole(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-[#1a1a1a] border border-gray-800 rounded-lg p-6 max-w-md w-full\">\r\n        <h3 className=\"text-xl font-bold text-white mb-4 flex items-center\">\r\n          <Ban className=\"mr-2 text-red-400\" />\r\n          Manual Ban Decision\r\n        </h3>\r\n        \r\n        <SecureForm\r\n          onSubmit={handleSubmit}\r\n          rateLimitKey=\"admin_ban_user\"\r\n          rateLimitConfig={{ maxAttempts: 10, windowMs: 60 * 1000 }}\r\n        >\r\n          <div className=\"space-y-4\">\r\n            {/* Username */}\r\n            <div>\r\n              <SecureInput\r\n                label=\"Username\"\r\n                type=\"text\"\r\n                value={banForm.username}\r\n                onChange={(value) => setBanForm(prev => ({ ...prev, username: value }))}\r\n                onBlur={() => setTouched(prev => ({ ...prev, username: true }))}\r\n                className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                placeholder=\"Enter username to ban\"\r\n                error={errors.username}\r\n                touched={touched.username}\r\n                maxLength={50}\r\n                required\r\n              />\r\n              {isCheckingUser && (\r\n                <p className=\"text-xs text-gray-400 mt-1\">Checking user...</p>\r\n              )}\r\n              {targetUserRole && !errors.username && (\r\n                <p className=\"text-xs text-gray-400 mt-1\">\r\n                  User role: <span className={targetUserRole === 'admin' ? 'text-red-400 font-bold' : 'text-gray-300'}>\r\n                    {targetUserRole}\r\n                  </span>\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Ban Type */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">Ban Type</label>\r\n              <select\r\n                value={banForm.banType}\r\n                onChange={(e) => setBanForm(prev => ({ ...prev, banType: e.target.value as 'temporary' | 'permanent' }))}\r\n                className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                disabled={targetUserRole === 'admin'}\r\n              >\r\n                <option value=\"temporary\">Temporary</option>\r\n                <option value=\"permanent\">Permanent</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Duration (for temporary bans) */}\r\n            {banForm.banType === 'temporary' && (\r\n              <div>\r\n                <SecureInput\r\n                  label=\"Duration (hours)\"\r\n                  type=\"number\"\r\n                  value={banForm.hours}\r\n                  onChange={handleHoursChange}\r\n                  onBlur={() => setTouched(prev => ({ ...prev, hours: true }))}\r\n                  className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                  min=\"1\"\r\n                  max=\"8760\"\r\n                  placeholder=\"24\"\r\n                  error={errors.hours}\r\n                  touched={touched.hours}\r\n                  helpText=\"Maximum: 8760 hours (1 year)\"\r\n                  sanitize={false}\r\n                  disabled={targetUserRole === 'admin'}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Reason */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">Reason</label>\r\n              <select\r\n                value={banForm.reason}\r\n                onChange={(e) => setBanForm(prev => ({ ...prev, reason: e.target.value as any }))}\r\n                className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                disabled={targetUserRole === 'admin'}\r\n              >\r\n                <option value=\"harassment\">Harassment</option>\r\n                <option value=\"scam\">Scam/Fraud</option>\r\n                <option value=\"spam\">Spam</option>\r\n                <option value=\"inappropriate_content\">Inappropriate Content</option>\r\n                <option value=\"underage\">Underage</option>\r\n                <option value=\"other\">Other</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Custom Reason */}\r\n            {banForm.reason === 'other' && (\r\n              <div>\r\n                <SecureInput\r\n                  label=\"Custom Reason\"\r\n                  type=\"text\"\r\n                  value={banForm.customReason}\r\n                  onChange={(value) => setBanForm(prev => ({ ...prev, customReason: value }))}\r\n                  onBlur={() => setTouched(prev => ({ ...prev, customReason: true }))}\r\n                  className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                  placeholder=\"Specify reason...\"\r\n                  error={errors.customReason}\r\n                  touched={touched.customReason}\r\n                  maxLength={200}\r\n                  required={banForm.reason === 'other'}\r\n                  disabled={targetUserRole === 'admin'}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Additional Details */}\r\n            <div>\r\n              <SecureInput\r\n                label=\"Additional Details\"\r\n                type=\"text\"\r\n                value={banForm.notes.split('\\n')[0] || ''}\r\n                onChange={(value) => setBanForm(prev => ({ ...prev, notes: value + '\\n' + (prev.notes.split('\\n')[1] || '') }))}\r\n                onBlur={() => setTouched(prev => ({ ...prev, details: true }))}\r\n                className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                placeholder=\"Additional details...\"\r\n                touched={touched.details}\r\n                maxLength={300}\r\n                disabled={targetUserRole === 'admin'}\r\n              />\r\n            </div>\r\n            \r\n            {/* Admin Notes */}\r\n            <div>\r\n              <SecureTextarea\r\n                label=\"Admin Notes\"\r\n                value={banForm.notes.split('\\n').slice(1).join('\\n')}\r\n                onChange={(value) => setBanForm(prev => ({ ...prev, notes: (prev.notes.split('\\n')[0] || '') + '\\n' + value }))}\r\n                onBlur={() => setTouched(prev => ({ ...prev, notes: true }))}\r\n                className=\"w-full px-3 py-2 bg-[#222] border border-gray-700 rounded text-white focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n                rows={3}\r\n                placeholder=\"Internal notes about this ban...\"\r\n                touched={touched.notes}\r\n                maxLength={1000}\r\n                characterCount={true}\r\n                disabled={targetUserRole === 'admin'}\r\n              />\r\n            </div>\r\n\r\n            {/* Admin warning */}\r\n            {targetUserRole === 'admin' && (\r\n              <div className=\"p-3 bg-red-900/20 border border-red-800 rounded-lg\">\r\n                <div className=\"flex items-center text-red-400\">\r\n                  <AlertCircle size={16} className=\"mr-2\" />\r\n                  <span className=\"font-medium\">Admin Account Protection</span>\r\n                </div>\r\n                <p className=\"text-sm text-red-300 mt-1\">\r\n                  This is an admin account and cannot be banned for security reasons.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"flex gap-3 mt-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n              className=\"flex-1 px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\r\n              disabled={isProcessing}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 flex items-center justify-center transition-colors disabled:bg-gray-600 disabled:cursor-not-allowed\"\r\n              disabled={isProcessing || targetUserRole === 'admin'}\r\n            >\r\n              {isProcessing ? (\r\n                <>\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                  Applying...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Ban size={16} className=\"mr-2\" />\r\n                  Apply Ban\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </SecureForm>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}