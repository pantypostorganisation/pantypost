{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/RequireAuth.tsx"],"sourcesContent":["// src/components/RequireAuth.tsx\r\n'use client';\r\n\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect, useState } from 'react';\r\nimport { z } from 'zod';\r\n\r\nconst VALID_ROLES = ['buyer', 'seller', 'admin'] as const;\r\ntype ValidRole = (typeof VALID_ROLES)[number];\r\n\r\nconst RoleSchema = z.enum(VALID_ROLES);\r\n\r\nexport default function RequireAuth({\r\n  role,\r\n  children,\r\n}: {\r\n  role: ValidRole;\r\n  children: React.ReactNode;\r\n}) {\r\n  const { user, isAuthReady } = useAuth();\r\n  const router = useRouter();\r\n  const [authorized, setAuthorized] = useState(false);\r\n  const [hasChecked, setHasChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || hasChecked) return;\r\n\r\n    // Runtime validation of `role` prop (dev-only noise)\r\n    const parsed = RoleSchema.safeParse(role);\r\n    if (!parsed.success) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('[RequireAuth] Invalid role prop supplied:', role);\r\n      }\r\n      router.push('/login');\r\n      setHasChecked(true);\r\n      return;\r\n    }\r\n\r\n    const userRole = user?.role as ValidRole | undefined;\r\n\r\n    // NEW: strict role matching — no admin override for buyer/seller routes\r\n    let hasAccess = false;\r\n    if (parsed.data === 'admin') {\r\n      hasAccess = userRole === 'admin';\r\n    } else {\r\n      hasAccess = userRole === parsed.data; // admin can’t view buyer/seller pages\r\n    }\r\n\r\n    if (!user || !hasAccess) {\r\n      router.push('/login');\r\n    } else {\r\n      setAuthorized(true);\r\n    }\r\n\r\n    setHasChecked(true);\r\n  }, [isAuthReady, user, role, router, hasChecked]);\r\n\r\n  if (!isAuthReady || !hasChecked) {\r\n    return (\r\n      <div className=\"min-h-screen bg-black flex items-center justify-center\" role=\"status\" aria-label=\"Checking access\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }} />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!authorized) return null;\r\n\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,cAAc;IAAC;IAAS;IAAU;CAAQ;AAGhD,MAAM,aAAa,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;AAEX,SAAS,YAAY,EAClC,IAAI,EACJ,QAAQ,EAIT;IACC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IACpC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,eAAe,YAAY;QAEhC,qDAAqD;QACrD,MAAM,SAAS,WAAW,SAAS,CAAC;QACpC,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,wCAA4C;gBAC1C,QAAQ,IAAI,CAAC,6CAA6C;YAC5D;YACA,OAAO,IAAI,CAAC;YACZ,cAAc;YACd;QACF;QAEA,MAAM,WAAW,MAAM;QAEvB,wEAAwE;QACxE,IAAI,YAAY;QAChB,IAAI,OAAO,IAAI,KAAK,SAAS;YAC3B,YAAY,aAAa;QAC3B,OAAO;YACL,YAAY,aAAa,OAAO,IAAI,EAAE,sCAAsC;QAC9E;QAEA,IAAI,CAAC,QAAQ,CAAC,WAAW;YACvB,OAAO,IAAI,CAAC;QACd,OAAO;YACL,cAAc;QAChB;QAEA,cAAc;IAChB,GAAG;QAAC;QAAa;QAAM;QAAM;QAAQ;KAAW;IAEhD,IAAI,CAAC,eAAe,CAAC,YAAY;QAC/B,qBACE,8OAAC;YAAI,WAAU;YAAyD,MAAK;YAAS,cAAW;sBAC/F,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;kCACjG,8OAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;;;;;;;;;;;;IAIzG;IAEA,IAAI,CAAC,YAAY,OAAO;IAExB,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/hooks/seller-settings/useProfileSave.ts"],"sourcesContent":["// src/hooks/seller-settings/useProfileSave.ts\r\n\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\nimport { securityService } from '@/services/security.service';\r\nimport { usersService } from '@/services/users.service';\r\nimport { enhancedUsersService } from '@/services/users.service.enhanced';\r\nimport { apiClient } from '@/services/api.config';\r\n\r\ninterface ProfileSaveData {\r\n  bio: string;\r\n  profilePic: string | null;\r\n  subscriptionPrice: string;\r\n  galleryImages?: string[];\r\n}\r\n\r\ninterface UseProfileSaveReturn {\r\n  saveSuccess: boolean;\r\n  saveError: string;\r\n  isSaving: boolean;\r\n  handleSave: (data: ProfileSaveData) => Promise<void>;\r\n  handleSaveWithGallery: (galleryImages: string[]) => Promise<void>;\r\n  handleQuickSave: (data: Partial<ProfileSaveData>) => Promise<void>;\r\n  debouncedSave: (data: Partial<ProfileSaveData>) => void;\r\n}\r\n\r\nexport function useProfileSave(): UseProfileSaveReturn {\r\n  const { user, updateUser } = useAuth();\r\n  const [saveSuccess, setSaveSuccess] = useState(false);\r\n  const [saveError, setSaveError] = useState<string>('');\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  \r\n  // Store the latest data for debounced saves\r\n  const latestDataRef = useRef<Partial<ProfileSaveData>>({});\r\n  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const pendingSavePromiseRef = useRef<Promise<void> | null>(null);\r\n\r\n  // Custom URL validator that accepts placeholders\r\n  const validateProfilePicUrl = (url: string | null): string | null => {\r\n    if (!url) return null;\r\n    \r\n    // Allow placeholder URLs\r\n    if (url.includes('placeholder')) return url;\r\n    \r\n    // Allow relative URLs\r\n    if (url.startsWith('/uploads/')) return url;\r\n    \r\n    // Allow http/https URLs\r\n    if (url.startsWith('http://') || url.startsWith('https://')) return url;\r\n    \r\n    // Otherwise, consider it invalid\r\n    return null;\r\n  };\r\n\r\n  const validateGalleryUrl = (url: string): string | null => {\r\n    if (!url) return null;\r\n    \r\n    // Allow relative URLs\r\n    if (url.startsWith('/uploads/')) return url;\r\n    \r\n    // Allow http/https URLs\r\n    if (url.startsWith('http://') || url.startsWith('https://')) return url;\r\n    \r\n    // Otherwise, consider it invalid\r\n    return null;\r\n  };\r\n\r\n  const validateAndSanitizeData = (data: Partial<ProfileSaveData>): Partial<ProfileSaveData> | null => {\r\n    try {\r\n      const sanitized: Partial<ProfileSaveData> = {};\r\n\r\n      // Sanitize bio if provided\r\n      if (data.bio !== undefined) {\r\n        const sanitizedBio = sanitizeStrict(data.bio);\r\n        if (sanitizedBio.length > 500) {\r\n          setSaveError('Bio must be less than 500 characters');\r\n          return null;\r\n        }\r\n        sanitized.bio = sanitizedBio;\r\n      }\r\n\r\n      // Validate profile pic URL if provided\r\n      if (data.profilePic !== undefined) {\r\n        const sanitizedProfilePic = validateProfilePicUrl(data.profilePic);\r\n        if (data.profilePic && !sanitizedProfilePic) {\r\n          setSaveError('Invalid profile picture URL');\r\n          return null;\r\n        }\r\n        sanitized.profilePic = sanitizedProfilePic;\r\n      }\r\n\r\n      // Validate subscription price if provided\r\n      if (data.subscriptionPrice !== undefined) {\r\n        const priceValidation = securityService.validateAmount(data.subscriptionPrice, {\r\n          min: 0,\r\n          max: 999.99,\r\n          allowDecimals: true\r\n        });\r\n\r\n        if (!priceValidation.valid) {\r\n          setSaveError(priceValidation.error || 'Invalid subscription price');\r\n          return null;\r\n        }\r\n        sanitized.subscriptionPrice = data.subscriptionPrice;\r\n      }\r\n\r\n      // Sanitize gallery images if provided\r\n      if (data.galleryImages !== undefined) {\r\n        const sanitizedGallery = data.galleryImages\r\n          .map(url => validateGalleryUrl(url))\r\n          .filter((url): url is string => url !== null);\r\n        \r\n        if (sanitizedGallery.length > 20) {\r\n          setSaveError('Maximum 20 gallery images allowed');\r\n          return null;\r\n        }\r\n        sanitized.galleryImages = sanitizedGallery;\r\n      }\r\n\r\n      return sanitized;\r\n    } catch (error) {\r\n      setSaveError('Data validation failed');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Quick save for individual fields with optimistic updates\r\n  const handleQuickSave = useCallback(async (data: Partial<ProfileSaveData>) => {\r\n    if (!user?.username) {\r\n      setSaveError('User not authenticated');\r\n      return;\r\n    }\r\n\r\n    setSaveError('');\r\n    \r\n    // Validate and sanitize data\r\n    const sanitizedData = validateAndSanitizeData(data);\r\n    if (!sanitizedData) {\r\n      return; // Error already set\r\n    }\r\n\r\n    try {\r\n      console.log('[useProfileSave] Quick saving:', sanitizedData);\r\n\r\n      // Use enhanced service for better caching\r\n      let response;\r\n      if (enhancedUsersService && typeof enhancedUsersService.updateUserProfile === 'function') {\r\n        response = await enhancedUsersService.updateUserProfile(user.username, sanitizedData);\r\n      } else if (usersService && typeof usersService.updateUserProfile === 'function') {\r\n        response = await usersService.updateUserProfile(user.username, sanitizedData);\r\n      } else {\r\n        response = await apiClient.call(`/users/${user.username}/profile`, {\r\n          method: 'PATCH',\r\n          body: JSON.stringify(sanitizedData)\r\n        });\r\n      }\r\n\r\n      if (response.success) {\r\n        console.log('[useProfileSave] Quick save successful');\r\n        \r\n        // Update user in auth context if needed\r\n        const updates: any = {};\r\n        if (sanitizedData.bio !== undefined && sanitizedData.bio !== user.bio) {\r\n          updates.bio = sanitizedData.bio;\r\n        }\r\n        if (sanitizedData.profilePic !== undefined && sanitizedData.profilePic !== user.profilePicture) {\r\n          updates.profilePicture = sanitizedData.profilePic;\r\n        }\r\n        \r\n        if (Object.keys(updates).length > 0 && updateUser) {\r\n          await updateUser(updates);\r\n        }\r\n\r\n        // Brief success indication\r\n        setSaveSuccess(true);\r\n        setTimeout(() => setSaveSuccess(false), 2000);\r\n      } else {\r\n        console.error('[useProfileSave] Quick save failed:', response.error);\r\n        setSaveError(response.error?.message || 'Failed to save');\r\n        setTimeout(() => setSaveError(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error('[useProfileSave] Error in quick save:', error);\r\n      setSaveError('Failed to save. Please try again.');\r\n      setTimeout(() => setSaveError(''), 3000);\r\n    }\r\n  }, [user?.username, user?.bio, user?.profilePicture, updateUser]);\r\n\r\n  // Debounced save function\r\n  const debouncedSave = useCallback((data: Partial<ProfileSaveData>) => {\r\n    // Update the latest data\r\n    latestDataRef.current = { ...latestDataRef.current, ...data };\r\n    \r\n    // Clear existing timeout\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n    \r\n    // Show saving indicator immediately\r\n    setIsSaving(true);\r\n    \r\n    // Set new timeout for save\r\n    saveTimeoutRef.current = setTimeout(async () => {\r\n      const savePromise = handleQuickSave(latestDataRef.current);\r\n      pendingSavePromiseRef.current = savePromise;\r\n      \r\n      await savePromise;\r\n      \r\n      pendingSavePromiseRef.current = null;\r\n      latestDataRef.current = {};\r\n      setIsSaving(false);\r\n    }, 1500); // Save after 1.5 seconds of inactivity\r\n  }, [handleQuickSave]);\r\n\r\n  // Main save function (for explicit save button)\r\n  const handleSave = async (data: ProfileSaveData) => {\r\n    if (!user?.username) {\r\n      setSaveError('User not authenticated');\r\n      return;\r\n    }\r\n\r\n    // Cancel any pending debounced save\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n      saveTimeoutRef.current = null;\r\n    }\r\n\r\n    // Wait for any pending save to complete\r\n    if (pendingSavePromiseRef.current) {\r\n      await pendingSavePromiseRef.current;\r\n    }\r\n\r\n    setSaveError('');\r\n    setIsSaving(true);\r\n    \r\n    // Validate and sanitize data\r\n    const sanitizedData = validateAndSanitizeData(data);\r\n    if (!sanitizedData) {\r\n      setIsSaving(false);\r\n      return; // Error already set\r\n    }\r\n\r\n    try {\r\n      console.log('[useProfileSave] Saving profile for:', user.username);\r\n      console.log('[useProfileSave] Data to save:', sanitizedData);\r\n\r\n      // Use enhanced service for better caching\r\n      let response;\r\n      if (enhancedUsersService && typeof enhancedUsersService.updateUserProfile === 'function') {\r\n        console.log('[useProfileSave] Using enhancedUsersService.updateUserProfile');\r\n        response = await enhancedUsersService.updateUserProfile(user.username, sanitizedData);\r\n      } else if (usersService && typeof usersService.updateUserProfile === 'function') {\r\n        console.log('[useProfileSave] Using usersService.updateUserProfile');\r\n        response = await usersService.updateUserProfile(user.username, sanitizedData);\r\n      } else {\r\n        console.log('[useProfileSave] Using direct API call');\r\n        response = await apiClient.call(`/users/${user.username}/profile`, {\r\n          method: 'PATCH',\r\n          body: JSON.stringify(sanitizedData)\r\n        });\r\n      }\r\n\r\n      if (response.success) {\r\n        console.log('[useProfileSave] Profile saved successfully:', response.data);\r\n        \r\n        // Update user in auth context if bio or profile pic changed\r\n        const updates: any = {};\r\n        if (sanitizedData.bio && sanitizedData.bio !== user.bio) {\r\n          updates.bio = sanitizedData.bio;\r\n        }\r\n        if (sanitizedData.profilePic && sanitizedData.profilePic !== user.profilePicture) {\r\n          updates.profilePicture = sanitizedData.profilePic;\r\n        }\r\n        \r\n        if (Object.keys(updates).length > 0 && updateUser) {\r\n          await updateUser(updates);\r\n        }\r\n\r\n        // Show success message\r\n        setSaveSuccess(true);\r\n        setTimeout(() => setSaveSuccess(false), 3000);\r\n      } else {\r\n        console.error('[useProfileSave] Failed to save profile:', response.error);\r\n        setSaveError(response.error?.message || 'Failed to save profile');\r\n        setTimeout(() => setSaveError(''), 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error('[useProfileSave] Error saving profile:', error);\r\n      setSaveError('Failed to save profile. Please try again.');\r\n      setTimeout(() => setSaveError(''), 5000);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveWithGallery = async (galleryImages: string[]) => {\r\n    if (!user?.username) {\r\n      setSaveError('User not authenticated');\r\n      return;\r\n    }\r\n\r\n    setSaveError('');\r\n    setIsSaving(true);\r\n\r\n    // Sanitize gallery URLs with custom validator\r\n    const sanitizedGallery = galleryImages\r\n      .map(url => validateGalleryUrl(url))\r\n      .filter((url): url is string => url !== null)\r\n      .slice(0, 20); // Enforce max limit\r\n\r\n    try {\r\n      console.log('[useProfileSave] Updating gallery for:', user.username);\r\n      console.log('[useProfileSave] Gallery images:', sanitizedGallery);\r\n\r\n      // Update profile with just gallery images\r\n      let response;\r\n      \r\n      if (enhancedUsersService && typeof enhancedUsersService.updateUserProfile === 'function') {\r\n        console.log('[useProfileSave] Updating gallery via enhancedUsersService');\r\n        response = await enhancedUsersService.updateUserProfile(user.username, {\r\n          galleryImages: sanitizedGallery\r\n        });\r\n      } else if (usersService && typeof usersService.updateUserProfile === 'function') {\r\n        console.log('[useProfileSave] Updating gallery via usersService');\r\n        response = await usersService.updateUserProfile(user.username, {\r\n          galleryImages: sanitizedGallery\r\n        });\r\n      } else {\r\n        console.log('[useProfileSave] Updating gallery via direct API call');\r\n        response = await apiClient.call(`/users/${user.username}/profile`, {\r\n          method: 'PATCH',\r\n          body: JSON.stringify({ galleryImages: sanitizedGallery })\r\n        });\r\n      }\r\n\r\n      if (!response.success) {\r\n        console.error('[useProfileSave] Failed to save gallery:', response.error);\r\n        setSaveError(response.error?.message || 'Failed to save gallery images');\r\n        setTimeout(() => setSaveError(''), 5000);\r\n      } else {\r\n        console.log('[useProfileSave] Gallery saved successfully');\r\n        setSaveSuccess(true);\r\n        setTimeout(() => setSaveSuccess(false), 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('[useProfileSave] Error saving gallery:', error);\r\n      setSaveError('Failed to save gallery images');\r\n      setTimeout(() => setSaveError(''), 5000);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Clean up on unmount - ensure pending saves complete\r\n  useEffect(() => {\r\n    return () => {\r\n      // Clear timeout\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n      }\r\n      \r\n      // If there's pending data, save it immediately\r\n      if (Object.keys(latestDataRef.current).length > 0) {\r\n        handleQuickSave(latestDataRef.current);\r\n      }\r\n    };\r\n  }, [handleQuickSave]);\r\n\r\n  return {\r\n    saveSuccess,\r\n    saveError,\r\n    isSaving,\r\n    handleSave,\r\n    handleSaveWithGallery,\r\n    handleQuickSave,\r\n    debouncedSave\r\n  };\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller-settings/ProfileInfoCard.tsx"],"sourcesContent":["// src/components/seller-settings/ProfileInfoCard.tsx\r\n'use client';\r\n\r\nimport { AlertCircle, CheckCircle, Loader2 } from 'lucide-react';\r\nimport React, { RefObject, useState, useEffect, useCallback } from 'react';\r\nimport { SecureInput, SecureTextarea } from '@/components/ui/SecureInput';\r\nimport { SecureImage } from '@/components/ui/SecureMessageDisplay';\r\nimport { sanitizeStrict, sanitizeCurrency } from '@/utils/security/sanitization';\r\nimport { securityService } from '@/services/security.service';\r\nimport { useProfileSave } from '@/hooks/seller-settings/useProfileSave';\r\nimport { z } from 'zod';\r\n\r\nconst PropsSchema = z.object({\r\n  username: z.string().optional(),\r\n  bio: z.string().default(''),\r\n  setBio: z.function().args(z.string()).returns(z.void()),\r\n  preview: z.string().nullable().optional(),\r\n  profilePic: z.string().nullable().optional(),\r\n  subscriptionPrice: z.string().default(''),\r\n  setSubscriptionPrice: z.function().args(z.string()).returns(z.void()),\r\n  handleProfilePicChange: z.function().args(z.any()).returns(z.void()),\r\n  removeProfilePic: z.function().args().returns(z.void()),\r\n  profilePicInputRef: z.any(),\r\n  isUploading: z.boolean().optional(),\r\n  onSave: z.function().args().returns(z.promise(z.boolean())).optional(),\r\n});\r\n\r\ninterface ProfileInfoCardProps extends z.infer<typeof PropsSchema> {}\r\n\r\nexport default function ProfileInfoCard(rawProps: ProfileInfoCardProps) {\r\n  const parsed = PropsSchema.safeParse(rawProps);\r\n  const {\r\n    username,\r\n    bio,\r\n    setBio,\r\n    preview,\r\n    profilePic,\r\n    subscriptionPrice,\r\n    setSubscriptionPrice,\r\n    handleProfilePicChange,\r\n    removeProfilePic,\r\n    profilePicInputRef,\r\n    isUploading = false,\r\n    onSave,\r\n  } = parsed.success\r\n    ? parsed.data\r\n    : {\r\n        username: '',\r\n        bio: '',\r\n        setBio: () => {},\r\n        preview: null,\r\n        profilePic: null,\r\n        subscriptionPrice: '',\r\n        setSubscriptionPrice: () => {},\r\n        handleProfilePicChange: () => {},\r\n        removeProfilePic: () => {},\r\n        profilePicInputRef: { current: null } as RefObject<HTMLInputElement | null>,\r\n        isUploading: false,\r\n        onSave: undefined,\r\n      };\r\n\r\n  const { debouncedSave, isSaving, saveSuccess, saveError } = useProfileSave();\r\n  const [fileError, setFileError] = useState<string>('');\r\n  const [touched, setTouched] = useState<{ bio?: boolean; price?: boolean }>({});\r\n  const [lastSavedPrice, setLastSavedPrice] = useState(subscriptionPrice);\r\n  const [showPriceSaving, setShowPriceSaving] = useState(false);\r\n\r\n  // Sanitize username for display\r\n  const sanitizedUsername = username ? sanitizeStrict(username) : '';\r\n\r\n  // Handle secure file selection\r\n  const handleSecureFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFileError('');\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const validation = securityService.validateFileUpload(file, {\r\n      maxSize: 5 * 1024 * 1024, // 5MB\r\n      allowedTypes: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],\r\n      allowedExtensions: ['jpg', 'jpeg', 'png', 'webp'],\r\n    });\r\n\r\n    if (!validation.valid) {\r\n      setFileError(validation.error || 'Invalid file');\r\n      try {\r\n        if (e.target) e.target.value = '';\r\n      } catch {\r\n        /* ignore */\r\n      }\r\n      return;\r\n    }\r\n\r\n    // If valid, proceed with the original handler\r\n    handleProfilePicChange(e);\r\n  };\r\n\r\n  // Handle price change with auto-save\r\n  const handlePriceChange = useCallback((value: string) => {\r\n    if (value === '') {\r\n      setSubscriptionPrice('');\r\n      setShowPriceSaving(true);\r\n      debouncedSave({ subscriptionPrice: '0' });\r\n    } else {\r\n      const sanitized = sanitizeCurrency(value);\r\n      const sanitizedStr = sanitized.toString();\r\n      setSubscriptionPrice(sanitizedStr);\r\n      setShowPriceSaving(true);\r\n      debouncedSave({ subscriptionPrice: sanitizedStr });\r\n    }\r\n  }, [setSubscriptionPrice, debouncedSave]);\r\n\r\n  // Handle bio change with auto-save\r\n  const handleBioChange = useCallback((value: string) => {\r\n    setBio(value);\r\n    debouncedSave({ bio: value });\r\n  }, [setBio, debouncedSave]);\r\n\r\n  // Track when price is actually saved\r\n  useEffect(() => {\r\n    if (saveSuccess && showPriceSaving) {\r\n      setLastSavedPrice(subscriptionPrice);\r\n      setShowPriceSaving(false);\r\n    }\r\n  }, [saveSuccess, subscriptionPrice, showPriceSaving]);\r\n\r\n  // Clear saving indicator when error occurs\r\n  useEffect(() => {\r\n    if (saveError && showPriceSaving) {\r\n      setShowPriceSaving(false);\r\n    }\r\n  }, [saveError, showPriceSaving]);\r\n\r\n  // Keyboard access for overlay\r\n  const onOverlayKey = (ev: React.KeyboardEvent) => {\r\n    if (ev.key === 'Enter' || ev.key === ' ') {\r\n      ev.preventDefault();\r\n      profilePicInputRef.current?.click();\r\n    }\r\n  };\r\n\r\n  // Calculate if there are unsaved changes\r\n  const hasUnsavedChanges = subscriptionPrice !== lastSavedPrice;\r\n\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] rounded-xl shadow-lg border border-gray-800 p-6 relative\">\r\n      {/* Save Status Indicator */}\r\n      <div className=\"absolute top-4 right-4 flex items-center gap-2\">\r\n        {isSaving && (\r\n          <div className=\"flex items-center gap-2 text-yellow-500 text-sm\">\r\n            <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n            <span>Saving...</span>\r\n          </div>\r\n        )}\r\n        {saveSuccess && !isSaving && (\r\n          <div className=\"flex items-center gap-2 text-green-500 text-sm animate-fade-in\">\r\n            <CheckCircle className=\"w-4 h-4\" />\r\n            <span>Saved</span>\r\n          </div>\r\n        )}\r\n        {saveError && !isSaving && (\r\n          <div className=\"flex items-center gap-2 text-red-500 text-sm\">\r\n            <AlertCircle className=\"w-4 h-4\" />\r\n            <span>{sanitizeStrict(saveError)}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <h2 className=\"text-xl font-bold mb-6 text-white\">Profile Info</h2>\r\n\r\n      {/* Profile Picture Section */}\r\n      <div className=\"flex flex-col items-center mb-6\">\r\n        <div className=\"w-32 h-32 rounded-full border-4 border-[#ff950e] bg-black flex items-center justify-center overflow-hidden mb-4 shadow-lg relative group\">\r\n          {isUploading ? (\r\n            <div className=\"flex flex-col items-center justify-center\">\r\n              <div className=\"w-8 h-8 border-2 border-[#ff950e] border-t-transparent rounded-full animate-spin mb-2\"></div>\r\n              <span className=\"text-xs text-[#ff950e]\">Uploading...</span>\r\n            </div>\r\n          ) : preview || profilePic ? (\r\n            <SecureImage src={preview || profilePic || ''} alt=\"Profile preview\" className=\"w-full h-full object-cover\" />\r\n          ) : (\r\n            <div className=\"w-full h-full bg-gray-700 flex items-center justify-center text-gray-400 text-4xl font-bold\">\r\n              {sanitizedUsername ? sanitizedUsername.charAt(0).toUpperCase() : '?'}\r\n            </div>\r\n          )}\r\n\r\n          {!isUploading && (\r\n            <div\r\n              className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all cursor-pointer\"\r\n              onClick={() => profilePicInputRef.current?.click()}\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onKeyDown={onOverlayKey}\r\n              aria-label=\"Change profile photo\"\r\n            >\r\n              <div className=\"text-white text-xs font-medium bg-[#ff950e] rounded-full px-3 py-1\">Change Photo</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <input\r\n          ref={profilePicInputRef}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleSecureFileChange}\r\n          className=\"hidden\"\r\n          disabled={isUploading}\r\n        />\r\n\r\n        <SecureImage\r\n          src=\"/Upload_New_Picture.png\"\r\n          alt=\"Upload New Picture\"\r\n          onClick={() => !isUploading && profilePicInputRef.current?.click()}\r\n          className={`w-24 h-auto object-contain transition-transform duration-200 ${\r\n            isUploading ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:scale-[1.02]'\r\n          }`}\r\n        />\r\n\r\n        {/* File error message */}\r\n        {fileError && (\r\n          <p className=\"mt-2 text-xs text-red-400 flex items-center gap-1\" role=\"alert\" aria-live=\"assertive\">\r\n            <AlertCircle className=\"w-3 h-3\" />\r\n            {sanitizeStrict(fileError)}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Bio Section */}\r\n      <div className=\"mb-6 w-full\">\r\n        <SecureTextarea\r\n          label=\"Bio\"\r\n          id=\"bio\"\r\n          name=\"bio\"\r\n          value={bio}\r\n          onChange={handleBioChange}\r\n          onBlur={() => setTouched((prev) => ({ ...prev, bio: true }))}\r\n          className=\"w-full p-3 border border-gray-700 rounded-lg bg-black text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-[#ff950e] h-28 resize-none\"\r\n          placeholder=\"Tell buyers about yourself...\"\r\n          maxLength={500}\r\n          characterCount={true}\r\n          helpText=\"Describe yourself, your style, and what makes your items special\"\r\n          touched={touched.bio}\r\n        />\r\n        {isSaving && touched.bio && (\r\n          <p className=\"text-xs text-yellow-500 mt-1\">Auto-saving bio...</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Subscription Price */}\r\n      <div className=\"mb-4 w-full\">\r\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n          Subscription Price ($/month)\r\n          {showPriceSaving && (\r\n            <span className=\"ml-2 text-yellow-500 text-xs\">\r\n              <Loader2 className=\"inline w-3 h-3 animate-spin mr-1\" />\r\n              Saving...\r\n            </span>\r\n          )}\r\n          {!showPriceSaving && hasUnsavedChanges && !isSaving && (\r\n            <span className=\"ml-2 text-orange-500 text-xs\">• Unsaved</span>\r\n          )}\r\n        </label>\r\n        <SecureInput\r\n          id=\"subscriptionPrice\"\r\n          name=\"subscriptionPrice\"\r\n          type=\"number\"\r\n          value={subscriptionPrice}\r\n          onChange={handlePriceChange}\r\n          onBlur={() => setTouched((prev) => ({ ...prev, price: true }))}\r\n          className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-black text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-[#ff950e]\"\r\n          placeholder=\"19.99\"\r\n          min=\"0\"\r\n          max=\"999.99\"\r\n          step=\"0.01\"\r\n          touched={touched.price}\r\n          helpText=\"This is what buyers will pay to access your premium content (auto-saves as you type)\"\r\n        />\r\n      </div>\r\n\r\n      {/* Save notification for manual save button if onSave is provided */}\r\n      {onSave && hasUnsavedChanges && (\r\n        <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-600/30 rounded-lg\">\r\n          <p className=\"text-sm text-yellow-500 flex items-center gap-2\">\r\n            <AlertCircle className=\"w-4 h-4\" />\r\n            You have unsaved changes. Click \"Save Profile\" to save all changes.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 953, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/sellerTiers.ts"],"sourcesContent":["// src/utils/sellerTiers.ts\r\n\r\n// Import Order type from shared types to avoid circular dependencies\r\nimport type { Order } from '@/types/order';\r\n\r\nexport type TierLevel = 'Tease' | 'Flirt' | 'Obsession' | 'Desire' | 'Goddess' | 'None';\r\n\r\nexport interface TierInfo {\r\n  tier: TierLevel;\r\n  credit: number;\r\n  minSales: number;\r\n  minAmount: number;\r\n  badgeImage: string;\r\n  color: string;\r\n}\r\n\r\nexport const TIER_LEVELS: Record<TierLevel, TierInfo> = {\r\n  None: {\r\n    tier: 'None',\r\n    credit: 0,\r\n    minSales: 0,\r\n    minAmount: 0,\r\n    badgeImage: '',\r\n    color: 'gray'\r\n  },\r\n  Tease: {\r\n    tier: 'Tease',\r\n    credit: 0,\r\n    minSales: 0, // 0-10 sales\r\n    minAmount: 0,\r\n    badgeImage: '/Tease_Badge.png',\r\n    color: 'gray'\r\n  },\r\n  Flirt: {\r\n    tier: 'Flirt',\r\n    credit: 0.01, // 1% credit\r\n    minSales: 10, // 10-100 sales\r\n    minAmount: 5000, // or >$5,000\r\n    badgeImage: '/Flirt_Badge.png',\r\n    color: 'pink'\r\n  },\r\n  Obsession: {\r\n    tier: 'Obsession',\r\n    credit: 0.02, // 2% credit\r\n    minSales: 101, // 101-250 sales\r\n    minAmount: 12500, // or >$12,500\r\n    badgeImage: '/Obsession_Badge.png',\r\n    color: 'purple'\r\n  },\r\n  Desire: {\r\n    tier: 'Desire',\r\n    credit: 0.03, // 3% credit\r\n    minSales: 251, // 251-1000 sales\r\n    minAmount: 75000, // or >$75,000\r\n    badgeImage: '/Desire_Badge.png',\r\n    color: 'blue'\r\n  },\r\n  Goddess: {\r\n    tier: 'Goddess',\r\n    credit: 0.05, // 5% credit\r\n    minSales: 1001, // >1000 sales\r\n    minAmount: 150000, // or >$150,000\r\n    badgeImage: '/Goddess_Badge.png',\r\n    color: 'amber'\r\n  }\r\n};\r\n\r\n/**\r\n * Calculate a seller's tier level based on their sales history\r\n * @param sellerUsername The username of the seller\r\n * @param orderHistory Array of all orders in the system\r\n * @returns Object containing tier information including level and credit percentage\r\n */\r\nexport const getSellerTier = (\r\n  sellerUsername: string,\r\n  orderHistory: Order[]\r\n): TierInfo => {\r\n  if (!sellerUsername) {\r\n    return TIER_LEVELS.None;\r\n  }\r\n\r\n  // Filter orders for this seller\r\n  const sellerOrders = orderHistory.filter(\r\n    (order) => order.seller === sellerUsername\r\n  );\r\n\r\n  // Calculate total sales count and amount\r\n  const totalSales = sellerOrders.length;\r\n  const totalAmount = sellerOrders.reduce(\r\n    (sum, order) => sum + (order?.price ?? 0),\r\n    0\r\n  );\r\n\r\n  // Determine tier based on either sales count OR total amount\r\n  // Check from highest to lowest to ensure correct tier assignment\r\n  if (totalSales >= TIER_LEVELS.Goddess.minSales || totalAmount >= TIER_LEVELS.Goddess.minAmount) {\r\n    return TIER_LEVELS.Goddess;\r\n  } else if (totalSales >= TIER_LEVELS.Desire.minSales || totalAmount >= TIER_LEVELS.Desire.minAmount) {\r\n    return TIER_LEVELS.Desire;\r\n  } else if (totalSales >= TIER_LEVELS.Obsession.minSales || totalAmount >= TIER_LEVELS.Obsession.minAmount) {\r\n    return TIER_LEVELS.Obsession;\r\n  } else if (totalSales >= TIER_LEVELS.Flirt.minSales || totalAmount >= TIER_LEVELS.Flirt.minAmount) {\r\n    return TIER_LEVELS.Flirt;\r\n  } else {\r\n    return TIER_LEVELS.Tease;\r\n  }\r\n};\r\n\r\n// Cache tier calculations to prevent redundant calculations\r\n// and avoid re-render loops\r\nconst tierCache = new Map<string, { tier: TierInfo; timestamp: number }>();\r\nconst CACHE_TTL = 60 * 60 * 1000; // 1 hour cache TTL\r\n\r\n/**\r\n * Memoized version of getSellerTier to prevent recalculation\r\n * when used in components to avoid performance issues\r\n */\r\nexport const getSellerTierMemoized = (\r\n  sellerUsername: string,\r\n  orderHistory: Order[]\r\n): TierInfo => {\r\n  if (!sellerUsername) {\r\n    return TIER_LEVELS.None;\r\n  }\r\n  \r\n  const now = Date.now();\r\n  const cacheKey = `${sellerUsername}:${orderHistory.length}`;\r\n  const cachedValue = tierCache.get(cacheKey);\r\n  \r\n  // Use cached value if it exists and hasn't expired\r\n  if (cachedValue && now - cachedValue.timestamp < CACHE_TTL) {\r\n    return cachedValue.tier;\r\n  }\r\n  \r\n  // Calculate new tier\r\n  const tier = getSellerTier(sellerUsername, orderHistory);\r\n  \r\n  // Cache the result\r\n  tierCache.set(cacheKey, { tier, timestamp: now });\r\n  \r\n  return tier;\r\n};\r\n\r\n/**\r\n * Calculate tier info for a seller\r\n * This is an alias for getSellerTierMemoized for backward compatibility\r\n */\r\nexport const calculateTierInfo = getSellerTierMemoized;"],"names":[],"mappings":"AAAA,2BAA2B;AAE3B,qEAAqE;;;;;;;AAc9D,MAAM,cAA2C;IACtD,MAAM;QACJ,MAAM;QACN,QAAQ;QACR,UAAU;QACV,WAAW;QACX,YAAY;QACZ,OAAO;IACT;IACA,OAAO;QACL,MAAM;QACN,QAAQ;QACR,UAAU;QACV,WAAW;QACX,YAAY;QACZ,OAAO;IACT;IACA,OAAO;QACL,MAAM;QACN,QAAQ;QACR,UAAU;QACV,WAAW;QACX,YAAY;QACZ,OAAO;IACT;IACA,WAAW;QACT,MAAM;QACN,QAAQ;QACR,UAAU;QACV,WAAW;QACX,YAAY;QACZ,OAAO;IACT;IACA,QAAQ;QACN,MAAM;QACN,QAAQ;QACR,UAAU;QACV,WAAW;QACX,YAAY;QACZ,OAAO;IACT;IACA,SAAS;QACP,MAAM;QACN,QAAQ;QACR,UAAU;QACV,WAAW;QACX,YAAY;QACZ,OAAO;IACT;AACF;AAQO,MAAM,gBAAgB,CAC3B,gBACA;IAEA,IAAI,CAAC,gBAAgB;QACnB,OAAO,YAAY,IAAI;IACzB;IAEA,gCAAgC;IAChC,MAAM,eAAe,aAAa,MAAM,CACtC,CAAC,QAAU,MAAM,MAAM,KAAK;IAG9B,yCAAyC;IACzC,MAAM,aAAa,aAAa,MAAM;IACtC,MAAM,cAAc,aAAa,MAAM,CACrC,CAAC,KAAK,QAAU,MAAM,CAAC,OAAO,SAAS,CAAC,GACxC;IAGF,6DAA6D;IAC7D,iEAAiE;IACjE,IAAI,cAAc,YAAY,OAAO,CAAC,QAAQ,IAAI,eAAe,YAAY,OAAO,CAAC,SAAS,EAAE;QAC9F,OAAO,YAAY,OAAO;IAC5B,OAAO,IAAI,cAAc,YAAY,MAAM,CAAC,QAAQ,IAAI,eAAe,YAAY,MAAM,CAAC,SAAS,EAAE;QACnG,OAAO,YAAY,MAAM;IAC3B,OAAO,IAAI,cAAc,YAAY,SAAS,CAAC,QAAQ,IAAI,eAAe,YAAY,SAAS,CAAC,SAAS,EAAE;QACzG,OAAO,YAAY,SAAS;IAC9B,OAAO,IAAI,cAAc,YAAY,KAAK,CAAC,QAAQ,IAAI,eAAe,YAAY,KAAK,CAAC,SAAS,EAAE;QACjG,OAAO,YAAY,KAAK;IAC1B,OAAO;QACL,OAAO,YAAY,KAAK;IAC1B;AACF;AAEA,4DAA4D;AAC5D,4BAA4B;AAC5B,MAAM,YAAY,IAAI;AACtB,MAAM,YAAY,KAAK,KAAK,MAAM,mBAAmB;AAM9C,MAAM,wBAAwB,CACnC,gBACA;IAEA,IAAI,CAAC,gBAAgB;QACnB,OAAO,YAAY,IAAI;IACzB;IAEA,MAAM,MAAM,KAAK,GAAG;IACpB,MAAM,WAAW,GAAG,eAAe,CAAC,EAAE,aAAa,MAAM,EAAE;IAC3D,MAAM,cAAc,UAAU,GAAG,CAAC;IAElC,mDAAmD;IACnD,IAAI,eAAe,MAAM,YAAY,SAAS,GAAG,WAAW;QAC1D,OAAO,YAAY,IAAI;IACzB;IAEA,qBAAqB;IACrB,MAAM,OAAO,cAAc,gBAAgB;IAE3C,mBAAmB;IACnB,UAAU,GAAG,CAAC,UAAU;QAAE;QAAM,WAAW;IAAI;IAE/C,OAAO;AACT;AAMO,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/TierBadge.tsx"],"sourcesContent":["// src/components/TierBadge.tsx\r\n'use client';\r\n\r\nimport Image from 'next/image';\r\nimport { useState, useMemo } from 'react';\r\nimport { TierLevel, TIER_LEVELS } from '@/utils/sellerTiers';\r\nimport { sanitizeStrict, sanitizeNumber } from '@/utils/security/sanitization';\r\nimport { SecureMessageDisplay } from '@/components/ui/SecureMessageDisplay';\r\n\r\ninterface TierBadgeProps {\r\n  tier?: TierLevel | null;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl';\r\n  showTooltip?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// Valid tier levels for validation\r\nconst VALID_TIER_LEVELS: TierLevel[] = ['None', 'Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'];\r\nconst VALID_SIZES = ['sm', 'md', 'lg', 'xl', '2xl'] as const;\r\n\r\n// Get user-friendly tier number\r\nconst getTierNumber = (tierName: TierLevel): string => {\r\n  const tierMap: Record<TierLevel, string> = {\r\n    None: '0',\r\n    Tease: 'tier 1',\r\n    Flirt: 'tier 2',\r\n    Obsession: 'tier 3',\r\n    Desire: 'tier 4',\r\n    Goddess: 'tier 5',\r\n  };\r\n  return tierMap[tierName] || 'tier 1';\r\n};\r\n\r\n// Get display name (capitalize first letter) with sanitization\r\nconst getTierDisplayName = (tierName: TierLevel): string => {\r\n  const sanitized = sanitizeStrict(tierName);\r\n  return sanitized.charAt(0).toUpperCase() + sanitized.slice(1);\r\n};\r\n\r\n// Get tier-specific colors for text\r\nconst getTierColor = (tierName: TierLevel): string => {\r\n  const tierColorMap: Record<TierLevel, string> = {\r\n    None: '#ffffff',\r\n    Tease: '#e37c89',\r\n    Flirt: '#711b2a',\r\n    Obsession: '#2e0c29',\r\n    Desire: '#541831',\r\n    Goddess: '#fddc93',\r\n  };\r\n  return tierColorMap[tierName] || '#e37c89';\r\n};\r\n\r\nconst sizeClasses = {\r\n  sm: { image: 20, tooltip: 'w-48' },\r\n  md: { image: 32, tooltip: 'w-52' },\r\n  lg: { image: 48, tooltip: 'w-56' },\r\n  xl: { image: 64, tooltip: 'w-60' },\r\n  '2xl': { image: 96, tooltip: 'w-64' },\r\n} as const;\r\n\r\nconst TierBadge = ({\r\n  tier = 'Tease',\r\n  size = 'md',\r\n  showTooltip = true,\r\n  className = '',\r\n}: TierBadgeProps) => {\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const validatedTier: TierLevel = useMemo(\r\n    () => (tier && VALID_TIER_LEVELS.includes(tier) ? tier : 'Tease'),\r\n    [tier]\r\n  );\r\n  const validatedSize = useMemo(\r\n    () => (VALID_SIZES.includes(size as (typeof VALID_SIZES)[number]) ? size : 'md'),\r\n    [size]\r\n  );\r\n\r\n  // If no tier provided or \"None\", don't render anything\r\n  if (!tier || tier === 'None') {\r\n    return null;\r\n  }\r\n\r\n  const tierInfo = TIER_LEVELS[validatedTier] || TIER_LEVELS.Tease;\r\n  const imageSize = sizeClasses[validatedSize as keyof typeof sizeClasses]?.image || 64;\r\n\r\n  // Sanitize numerical values\r\n  const sanitizedMinSales = sanitizeNumber(tierInfo.minSales, 0, 999_999, 0);\r\n  const sanitizedMinAmount = sanitizeNumber(tierInfo.minAmount, 0, 9_999_999, 2);\r\n  const sanitizedCredit = sanitizeNumber(tierInfo.credit, 0, 1, 2);\r\n\r\n  const safeClass = sanitizeStrict(className);\r\n\r\n  return (\r\n    <div\r\n      className={`relative inline-block ${safeClass}`}\r\n      onMouseEnter={() => showTooltip && setShowDetails(true)}\r\n      onMouseLeave={() => showTooltip && setShowDetails(false)}\r\n    >\r\n      {/* Badge image */}\r\n      {tierInfo.badgeImage ? (\r\n        <div className=\"flex items-center justify-center\">\r\n          <Image\r\n            src={tierInfo.badgeImage}\r\n            alt={`${getTierDisplayName(validatedTier)} Seller Badge`}\r\n            width={imageSize}\r\n            height={imageSize}\r\n            className=\"object-contain drop-shadow-lg\"\r\n            quality={100}\r\n            priority={validatedSize === 'xl' || validatedSize === '2xl'}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex items-center justify-center\">\r\n          <span className=\"font-bold text-center text-xl\">\r\n            <SecureMessageDisplay content={validatedTier.charAt(0)} allowBasicFormatting={false} />\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tooltip */}\r\n      {showDetails && showTooltip && (\r\n        <div\r\n          className={`absolute z-10 ${\r\n            sizeClasses[validatedSize as keyof typeof sizeClasses]?.tooltip || 'w-60'\r\n          } bg-[#1a1a1a] rounded-md shadow-lg p-4 text-sm border border-gray-700 -translate-x-1/2 left-1/2 mt-1`}\r\n          role=\"tooltip\"\r\n        >\r\n          <div className=\"font-bold text-center mb-2\" style={{ color: getTierColor(validatedTier) }}>\r\n            <SecureMessageDisplay\r\n              content={`${getTierDisplayName(validatedTier)} ${validatedTier !== 'Goddess' ? 'Seller' : ''}`}\r\n              allowBasicFormatting={false}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"text-gray-200 space-y-2\">\r\n            <p>This seller is {getTierNumber(validatedTier)} out of 5 as they have:</p>\r\n            <p>\r\n              • {sanitizedMinSales.toLocaleString()}+ sales <span className=\"text-gray-400\">OR</span>\r\n            </p>\r\n            <p>• ${sanitizedMinAmount.toLocaleString()}+ in total sales</p>\r\n            <p className=\"pt-1 text-[#ff950e] font-medium\">\r\n              This seller earns an extra {(sanitizedCredit * 100).toFixed(0)}% on all sales made\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TierBadge;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/url.ts"],"sourcesContent":["// src/utils/url.ts\r\n\r\n/**\r\n * Resolve relative file paths (e.g., \"/uploads/xyz.jpg\") to an absolute backend URL.\r\n * This assumes NEXT_PUBLIC_API_BASE_URL looks like \"http://localhost:5000/api\" in dev\r\n * and strips the trailing \"/api\" for static files.\r\n */\r\nexport function resolveApiUrl(path?: string | null): string | null {\r\n  if (!path) return null;\r\n\r\n  // Already absolute http(s)\r\n  if (/^https?:\\/\\//i.test(path)) return path;\r\n\r\n  // Reject dangerous schemes outright (javascript:, data:, vbscript:, etc.)\r\n  if (!/^(\\/|https?:)/i.test(path)) return null;\r\n  if (/^(javascript|vbscript|data):/i.test(path)) return null;\r\n\r\n  const apiBase = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:5000/api';\r\n  const baseHost = apiBase.replace(/\\/api\\/?$/, '').replace(/\\/$/, ''); // strip trailing /api and trailing slash\r\n  const normalized = path.startsWith('/') ? path : `/${path}`;\r\n  return `${baseHost}${normalized}`;\r\n}\r\n\r\n/**\r\n * Return a safe image src string. Falls back to a placeholder if:\r\n *  - input is empty\r\n *  - scheme is not allowed\r\n *  - URL cannot be resolved\r\n */\r\nexport function safeImageSrc(\r\n  input?: string | null,\r\n  options?: { placeholder?: string }\r\n): string {\r\n  const placeholder = options?.placeholder ?? '/placeholder-image.png';\r\n  if (!input) return placeholder;\r\n\r\n  // Already http(s) — accept\r\n  if (/^https?:\\/\\//i.test(input)) return input;\r\n\r\n  // Unsafe schemes\r\n  if (/^(javascript|vbscript|data):/i.test(input)) return placeholder;\r\n\r\n  // Relative path — resolve against backend host\r\n  const resolved = resolveApiUrl(input);\r\n  return resolved ?? placeholder;\r\n}\r\n\r\n/**\r\n * Basic currency formatter that won't throw on bad input.\r\n * Always returns something like \"$0.00\".\r\n */\r\nexport function formatCurrency(value: unknown): string {\r\n  const n = typeof value === 'number' && Number.isFinite(value) ? value : 0;\r\n  return `$${n.toFixed(2)}`;\r\n}\r\n"],"names":[],"mappings":"AAAA,mBAAmB;AAEnB;;;;CAIC;;;;;AACM,SAAS,cAAc,IAAoB;IAChD,IAAI,CAAC,MAAM,OAAO;IAElB,2BAA2B;IAC3B,IAAI,gBAAgB,IAAI,CAAC,OAAO,OAAO;IAEvC,0EAA0E;IAC1E,IAAI,CAAC,iBAAiB,IAAI,CAAC,OAAO,OAAO;IACzC,IAAI,gCAAgC,IAAI,CAAC,OAAO,OAAO;IAEvD,MAAM,UAAU,6DAAwC;IACxD,MAAM,WAAW,QAAQ,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,OAAO,KAAK,yCAAyC;IAC/G,MAAM,aAAa,KAAK,UAAU,CAAC,OAAO,OAAO,CAAC,CAAC,EAAE,MAAM;IAC3D,OAAO,GAAG,WAAW,YAAY;AACnC;AAQO,SAAS,aACd,KAAqB,EACrB,OAAkC;IAElC,MAAM,cAAc,SAAS,eAAe;IAC5C,IAAI,CAAC,OAAO,OAAO;IAEnB,2BAA2B;IAC3B,IAAI,gBAAgB,IAAI,CAAC,QAAQ,OAAO;IAExC,iBAAiB;IACjB,IAAI,gCAAgC,IAAI,CAAC,QAAQ,OAAO;IAExD,+CAA+C;IAC/C,MAAM,WAAW,cAAc;IAC/B,OAAO,YAAY;AACrB;AAMO,SAAS,eAAe,KAAc;IAC3C,MAAM,IAAI,OAAO,UAAU,YAAY,OAAO,QAAQ,CAAC,SAAS,QAAQ;IACxE,OAAO,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI;AAC3B","debugId":null}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller-settings/TierProgressCard.tsx"],"sourcesContent":["// src/components/seller-settings/TierProgressCard.tsx\r\n'use client';\r\n\r\nimport { Award, TrendingUp, Crown, Star, Gift, Target } from 'lucide-react';\r\nimport TierBadge from '@/components/TierBadge';\r\nimport type { TierLevel } from '@/utils/sellerTiers';\r\nimport { z } from 'zod';\r\nimport { formatCurrency } from '@/utils/url';\r\n\r\n// Define TIER_LEVELS locally to match the structure with proper typing\r\nconst TIER_LEVELS: Record<TierLevel, { minSales: number; minAmount: number }> = {\r\n  None: { minSales: 0, minAmount: 0 },\r\n  Tease: { minSales: 0, minAmount: 0 },\r\n  Flirt: { minSales: 10, minAmount: 5000 },\r\n  Obsession: { minSales: 101, minAmount: 12500 },\r\n  Desire: { minSales: 251, minAmount: 75000 },\r\n  Goddess: { minSales: 1001, minAmount: 150000 },\r\n};\r\n\r\nconst VALID_TIERS: TierLevel[] = ['None', 'Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'];\r\nfunction isTierLevel(v: unknown): v is TierLevel {\r\n  return typeof v === 'string' && (VALID_TIERS as readonly string[]).includes(v);\r\n}\r\nfunction normalizeTier(v: unknown): TierLevel | null {\r\n  if (isTierLevel(v)) return v;\r\n  if (typeof v === 'string') {\r\n    const s = v.trim().toLowerCase();\r\n    switch (s) {\r\n      case 'none':\r\n        return 'None';\r\n      case 'tease':\r\n        return 'Tease';\r\n      case 'flirt':\r\n        return 'Flirt';\r\n      case 'obsession':\r\n        return 'Obsession';\r\n      case 'desire':\r\n        return 'Desire';\r\n      case 'goddess':\r\n        return 'Goddess';\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst PropsSchema = z.object({\r\n  sellerTierInfo: z.object({ tier: z.unknown() }),\r\n  userStats: z.object({\r\n    totalSales: z.number().int().nonnegative().catch(0),\r\n    totalRevenue: z.number().nonnegative().catch(0),\r\n  }),\r\n  tierProgress: z.object({\r\n    salesProgress: z.number().nonnegative().catch(0),\r\n    revenueProgress: z.number().nonnegative().catch(0),\r\n  }),\r\n  nextTier: z.unknown(), // normalize to TierLevel\r\n  onTierClick: z.function().args(z.unknown()).returns(z.void()),\r\n});\r\n\r\ninterface TierProgressCardProps extends z.infer<typeof PropsSchema> {}\r\n\r\nfunction clampPercent(n: number): number {\r\n  if (!Number.isFinite(n)) return 0;\r\n  return Math.max(0, Math.min(100, n));\r\n}\r\n\r\nfunction getTierIcon(tier: TierLevel | null) {\r\n  switch (tier) {\r\n    case 'Tease':\r\n      return <Star className=\"w-5 h-5\" />;\r\n    case 'Flirt':\r\n      return <Gift className=\"w-5 h-5\" />;\r\n    case 'Obsession':\r\n      return <Award className=\"w-5 h-5\" />;\r\n    case 'Desire':\r\n      return <Crown className=\"w-5 h-5\" />;\r\n    case 'Goddess':\r\n      return <Target className=\"w-5 h-5\" />;\r\n    default:\r\n      return <Award className=\"w-5 h-5\" />;\r\n  }\r\n}\r\n\r\nexport default function TierProgressCard(rawProps: TierProgressCardProps) {\r\n  const parsed = PropsSchema.safeParse(rawProps);\r\n  const { sellerTierInfo, userStats, tierProgress, nextTier: rawNextTier, onTierClick } = parsed.success\r\n    ? parsed.data\r\n    : {\r\n        sellerTierInfo: { tier: 'None' },\r\n        userStats: { totalSales: 0, totalRevenue: 0 },\r\n        tierProgress: { salesProgress: 0, revenueProgress: 0 },\r\n        nextTier: 'Tease',\r\n        onTierClick: () => {},\r\n      };\r\n\r\n  const currentTier = normalizeTier(sellerTierInfo.tier);\r\n  const nextTier = normalizeTier(rawNextTier) ?? 'Tease';\r\n\r\n  if (!currentTier) return null;\r\n\r\n  const currentRequirements = TIER_LEVELS[currentTier];\r\n  const nextRequirements = TIER_LEVELS[nextTier];\r\n\r\n  const salesPct = clampPercent(tierProgress.salesProgress);\r\n  const revenuePct = clampPercent(tierProgress.revenueProgress);\r\n\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] rounded-xl shadow-lg border border-gray-800 p-6 relative overflow-hidden\">\r\n      <div className=\"absolute top-0 right-0 opacity-10\">{getTierIcon(currentTier)}</div>\r\n\r\n      <h2 className=\"text-xl font-bold mb-6 text-white\">Seller Tier Progress</h2>\r\n\r\n      {/* Current Tier Display */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <p className=\"text-sm text-gray-400 mb-1\">Current Tier</p>\r\n          <div className=\"flex items-center gap-2\">\r\n            {currentTier !== 'None' ? <TierBadge tier={currentTier} size=\"md\" /> : null}\r\n            <span className=\"text-lg font-bold text-white\">{currentTier}</span>\r\n          </div>\r\n        </div>\r\n        <button onClick={() => onTierClick(currentTier)} className=\"text-[#ff950e] text-sm hover:underline\" type=\"button\">\r\n          View Details\r\n        </button>\r\n      </div>\r\n\r\n      {/* Stats Display */}\r\n      <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n        <div className=\"bg-black rounded-lg p-3\">\r\n          <p className=\"text-xs text-gray-400\">Total Sales</p>\r\n          <p className=\"text-xl font-bold text-[#ff950e]\">{userStats.totalSales}</p>\r\n        </div>\r\n        <div className=\"bg-black rounded-lg p-3\">\r\n          <p className=\"text-xs text-gray-400\">Total Revenue</p>\r\n          <p className=\"text-xl font-bold text-[#ff950e]\">{formatCurrency(userStats.totalRevenue)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress to Next Tier */}\r\n      {currentTier !== 'Goddess' && nextRequirements && (\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <p className=\"text-sm text-gray-400\">Progress to {nextTier}</p>\r\n            <TierBadge tier={nextTier} size=\"sm\" />\r\n          </div>\r\n\r\n          {/* Sales Progress */}\r\n          <div>\r\n            <div className=\"flex justify-between text-xs text-gray-400 mb-1\">\r\n              <span>\r\n                Sales: {userStats.totalSales}/{nextRequirements.minSales}\r\n              </span>\r\n              <span>{salesPct.toFixed(0)}%</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-800 rounded-full h-2\">\r\n              <div\r\n                className=\"bg-gradient-to-r from-[#ff950e] to-[#ff6b00] h-2 rounded-full transition-all duration-500\"\r\n                style={{ width: `${salesPct}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Revenue Progress */}\r\n          <div>\r\n            <div className=\"flex justify-between text-xs text-gray-400 mb-1\">\r\n              <span>\r\n                Revenue: {formatCurrency(userStats.totalRevenue)}/{formatCurrency(nextRequirements.minAmount)}\r\n              </span>\r\n              <span>{revenuePct.toFixed(0)}%</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-800 rounded-full h-2\">\r\n              <div\r\n                className=\"bg-gradient-to-r from-[#ff950e] to-[#ff6b00] h-2 rounded-full transition-all duration-500\"\r\n                style={{ width: `${revenuePct}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"text-xs text-gray-500 text-center mt-3\">Reach both milestones to unlock {nextTier} tier</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Max Tier Reached */}\r\n      {currentTier === 'Goddess' && (\r\n        <div className=\"text-center\">\r\n          <div className=\"bg-gradient-to-r from-[#ff950e] to-[#ff6b00] text-black p-3 rounded-lg\">\r\n            <p className=\"font-bold\">🎉 Maximum Tier Achieved!</p>\r\n            <p className=\"text-sm\">You've reached the highest seller tier</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1872, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller-settings/GalleryManager.tsx"],"sourcesContent":["// src/components/seller-settings/GalleryManager.tsx\r\n'use client';\r\n\r\nimport { RefObject } from 'react';\r\nimport { Trash2, Upload, X, Image as ImageIcon } from 'lucide-react';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\nimport { z } from 'zod';\r\n\r\nconst MAX_GALLERY_IMAGES = 20;\r\n\r\nconst PropsSchema = z.object({\r\n  galleryImages: z.array(z.string()).default([]),\r\n  selectedFiles: z.array(z.instanceof(File)).default([]),\r\n  isUploading: z.boolean().default(false),\r\n  uploadProgress: z.number().min(0).max(100).default(0),\r\n  multipleFileInputRef: z.custom<RefObject<HTMLInputElement | null>>(), // Fixed: Allow null\r\n  handleMultipleFileChange: z.function().args(z.any()).returns(z.void()),\r\n  uploadGalleryImages: z.function().args().returns(z.void()),\r\n  removeGalleryImage: z.function().args(z.number()).returns(z.void()),\r\n  removeSelectedFile: z.function().args(z.number()).returns(z.void()),\r\n  clearAllGalleryImages: z.function().args().returns(z.void()),\r\n});\r\n\r\ninterface GalleryManagerProps extends z.infer<typeof PropsSchema> {}\r\n\r\nexport default function GalleryManager(props: GalleryManagerProps) {\r\n  const parsed = PropsSchema.safeParse(props);\r\n  const {\r\n    galleryImages = [],\r\n    selectedFiles = [],\r\n    isUploading = false,\r\n    uploadProgress = 0,\r\n    multipleFileInputRef,\r\n    handleMultipleFileChange,\r\n    uploadGalleryImages,\r\n    removeGalleryImage,\r\n    removeSelectedFile,\r\n    clearAllGalleryImages,\r\n  } = parsed.success ? parsed.data : props;\r\n\r\n  // Wrap async functions to handle Promise return\r\n  const handleUploadClick = () => {\r\n    // Call the async function but don't await it (returns void)\r\n    uploadGalleryImages();\r\n  };\r\n\r\n  const handleRemoveGalleryImage = (index: number) => {\r\n    // Call the function without awaiting\r\n    removeGalleryImage(index);\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    // Call the function without awaiting\r\n    clearAllGalleryImages();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className=\"text-xl font-bold text-white flex items-center gap-2\">\r\n          <ImageIcon className=\"w-5 h-5 text-[#ff950e]\" />\r\n          Photo Gallery\r\n        </h2>\r\n        <span className=\"text-sm text-gray-400\">\r\n          {galleryImages.length} / {MAX_GALLERY_IMAGES} images\r\n        </span>\r\n      </div>\r\n\r\n      {/* Gallery Images Display */}\r\n      {galleryImages.length > 0 && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <h3 className=\"text-sm font-medium text-gray-300\">Current Gallery</h3>\r\n            {galleryImages.length > 0 && (\r\n              <button\r\n                onClick={handleClearAll}\r\n                className=\"text-xs text-red-500 hover:text-red-400 transition\"\r\n                disabled={isUploading}\r\n                type=\"button\"\r\n              >\r\n                Clear All\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3\">\r\n            {galleryImages.map((image, index) => (\r\n              <div key={index} className=\"relative group aspect-square\">\r\n                <img\r\n                  src={image}\r\n                  alt={`Gallery ${index + 1}`}\r\n                  className=\"w-full h-full object-cover rounded-lg border border-gray-700\"\r\n                  loading=\"lazy\"\r\n                />\r\n                <button\r\n                  onClick={() => handleRemoveGalleryImage(index)}\r\n                  className=\"absolute top-2 right-2 bg-red-600 text-white p-1.5 rounded-full opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-700\"\r\n                  title=\"Remove image\"\r\n                  disabled={isUploading}\r\n                  type=\"button\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* File Upload Section */}\r\n      <div className=\"space-y-4\">\r\n        <div className=\"border-2 border-dashed border-gray-700 rounded-lg p-6 text-center hover:border-gray-600 transition\">\r\n          <ImageIcon className=\"w-12 h-12 text-gray-500 mx-auto mb-3\" />\r\n          <p className=\"text-gray-400 mb-2\">\r\n            {galleryImages.length === 0 \r\n              ? \"Add photos to your gallery\" \r\n              : `Add more photos (${MAX_GALLERY_IMAGES - galleryImages.length} remaining)`}\r\n          </p>\r\n          <input\r\n            ref={multipleFileInputRef}\r\n            type=\"file\"\r\n            multiple\r\n            accept=\"image/*\"\r\n            onChange={handleMultipleFileChange}\r\n            className=\"hidden\"\r\n            disabled={isUploading || galleryImages.length >= MAX_GALLERY_IMAGES}\r\n          />\r\n          <button\r\n            onClick={() => multipleFileInputRef?.current?.click()}\r\n            disabled={isUploading || galleryImages.length >= MAX_GALLERY_IMAGES}\r\n            className=\"bg-gray-700 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            type=\"button\"\r\n          >\r\n            Select Images\r\n          </button>\r\n          <p className=\"text-xs text-gray-500 mt-2\">\r\n            JPEG, JPG, PNG, or WebP • Max 10MB per file\r\n          </p>\r\n        </div>\r\n\r\n        {/* Selected Files Preview */}\r\n        {selectedFiles.length > 0 && (\r\n          <div>\r\n            <h3 className=\"text-sm font-medium text-gray-300 mb-2\">\r\n              Selected Files ({selectedFiles.length})\r\n            </h3>\r\n            <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n              {selectedFiles.map((file, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"flex items-center justify-between p-2 bg-gray-800 rounded-lg\"\r\n                >\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <ImageIcon className=\"w-4 h-4 text-gray-400\" />\r\n                    <span className=\"text-sm text-gray-300 truncate max-w-[200px]\">\r\n                      {sanitizeStrict(file.name)}\r\n                    </span>\r\n                    <span className=\"text-xs text-gray-500\">\r\n                      ({(file.size / 1024 / 1024).toFixed(2)} MB)\r\n                    </span>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => removeSelectedFile(index)}\r\n                    className=\"text-red-500 hover:text-red-400 transition p-1\"\r\n                    disabled={isUploading}\r\n                    type=\"button\"\r\n                  >\r\n                    <Trash2 className=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Upload Button and Progress */}\r\n            <div className=\"mt-4\">\r\n              {isUploading ? (\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-gray-400\">Uploading...</span>\r\n                    <span className=\"text-[#ff950e]\">{uploadProgress}%</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-700 rounded-full h-2 overflow-hidden\">\r\n                    <div\r\n                      className=\"bg-[#ff950e] h-full transition-all duration-300\"\r\n                      style={{ width: `${uploadProgress}%` }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button\r\n                  onClick={handleUploadClick}\r\n                  disabled={selectedFiles.length === 0}\r\n                  className=\"w-full bg-[#ff950e] text-black font-bold py-2 rounded-lg hover:bg-[#e0850d] transition disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n                  type=\"button\"\r\n                >\r\n                  <Upload className=\"w-4 h-4\" />\r\n                  Upload {selectedFiles.length} {selectedFiles.length === 1 ? 'Image' : 'Images'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Info Text */}\r\n      <div className=\"mt-4 p-3 bg-gray-800 rounded-lg\">\r\n        <p className=\"text-xs text-gray-400\">\r\n          <strong className=\"text-gray-300\">Tips:</strong> High-quality photos help attract more buyers. \r\n          Consider adding variety with different angles and styles. All images are automatically optimized for web display.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller-settings/modals/TierDetailsModal.tsx"],"sourcesContent":["// src/components/seller-settings/modals/TierDetailsModal.tsx\r\n'use client';\r\n\r\nimport { X, Award, TrendingUp, Crown, Star, Gift, Target, CheckCircle } from 'lucide-react';\r\nimport TierBadge from '@/components/TierBadge';\r\nimport type { TierLevel } from '@/utils/sellerTiers';\r\nimport { z } from 'zod';\r\nimport { formatCurrency } from '@/utils/url';\r\n\r\n// ---- Runtime props validation + normalization ----\r\nconst PropsSchema = z.object({\r\n  selectedTier: z.unknown().nullable(),\r\n  onClose: z.function().args().returns(z.void()),\r\n});\r\n\r\nconst VALID_TIERS: TierLevel[] = ['None', 'Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'];\r\n\r\nfunction isTierLevel(v: unknown): v is TierLevel {\r\n  return typeof v === 'string' && (VALID_TIERS as readonly string[]).includes(v);\r\n}\r\n\r\nfunction normalizeTier(v: unknown): TierLevel | null {\r\n  if (isTierLevel(v)) return v;\r\n  if (typeof v === 'string') {\r\n    const s = v.trim().toLowerCase();\r\n    switch (s) {\r\n      case 'none':\r\n        return 'None';\r\n      case 'tease':\r\n        return 'Tease';\r\n      case 'flirt':\r\n        return 'Flirt';\r\n      case 'obsession':\r\n        return 'Obsession';\r\n      case 'desire':\r\n        return 'Desire';\r\n      case 'goddess':\r\n        return 'Goddess';\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ---- Tier data (kept local for this modal) ----\r\nconst TIER_LEVELS: Record<TierLevel, { minSales: number; minAmount: number }> = {\r\n  None: { minSales: 0, minAmount: 0 },\r\n  Tease: { minSales: 0, minAmount: 0 },\r\n  Flirt: { minSales: 10, minAmount: 5000 },\r\n  Obsession: { minSales: 101, minAmount: 12500 },\r\n  Desire: { minSales: 251, minAmount: 75000 },\r\n  Goddess: { minSales: 1001, minAmount: 150000 },\r\n};\r\n\r\ninterface TierDetailsModalProps extends z.infer<typeof PropsSchema> {}\r\n\r\nexport default function TierDetailsModal(rawProps: TierDetailsModalProps) {\r\n  // Validate props at runtime (safe defaults if parsing fails)\r\n  const parsed = PropsSchema.safeParse(rawProps);\r\n  const selectedTierRaw = parsed.success ? parsed.data.selectedTier : null;\r\n  const onClose = parsed.success ? parsed.data.onClose : () => {};\r\n\r\n  const selectedTier = normalizeTier(selectedTierRaw);\r\n\r\n  // If invalid or 'None', don't render\r\n  if (!selectedTier || selectedTier === 'None') return null;\r\n\r\n  const tierInfo = TIER_LEVELS[selectedTier] || TIER_LEVELS.Tease;\r\n  const tiers: TierLevel[] = ['Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'];\r\n\r\n  const getBenefitsForTier = (tier: TierLevel): string[] => {\r\n    switch (tier) {\r\n      case 'Tease':\r\n        return ['Basic seller badge', 'Access to marketplace', 'Standard support'];\r\n      case 'Flirt':\r\n        return ['1% bonus on all sales', 'Flirt badge upgrade', 'Priority in search results'];\r\n      case 'Obsession':\r\n        return ['2% bonus on all sales', 'Obsession badge upgrade', 'Featured seller status'];\r\n      case 'Desire':\r\n        return ['3% bonus on all sales', 'Desire badge upgrade', 'Premium seller tools'];\r\n      case 'Goddess':\r\n        return ['5% bonus on all sales', 'Goddess badge upgrade', 'VIP seller status', 'Exclusive features'];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const getTierIcon = (tier: TierLevel) => {\r\n    switch (tier) {\r\n      case 'Tease':\r\n        return <Star className=\"w-8 h-8\" />;\r\n      case 'Flirt':\r\n        return <Gift className=\"w-8 h-8\" />;\r\n      case 'Obsession':\r\n        return <Award className=\"w-8 h-8\" />;\r\n      case 'Desire':\r\n        return <Crown className=\"w-8 h-8\" />;\r\n      case 'Goddess':\r\n        return <Target className=\"w-8 h-8\" />;\r\n      default:\r\n        return <Award className=\"w-8 h-8\" />;\r\n    }\r\n  };\r\n\r\n  const getTierColor = (tier: TierLevel) => {\r\n    switch (tier) {\r\n      case 'Tease':\r\n        return 'from-gray-500 to-gray-700';\r\n      case 'Flirt':\r\n        return 'from-blue-500 to-blue-700';\r\n      case 'Obsession':\r\n        return 'from-purple-500 to-purple-700';\r\n      case 'Desire':\r\n        return 'from-pink-500 to-pink-700';\r\n      case 'Goddess':\r\n        return 'from-[#ff950e] to-[#ff6b00]';\r\n      default:\r\n        return 'from-gray-500 to-gray-700';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-label={`${selectedTier} Tier details`}\r\n    >\r\n      <div className=\"bg-[#1a1a1a] rounded-xl max-w-2xl w-full max-h-[80vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className={`bg-gradient-to-r ${getTierColor(selectedTier)} p-6 relative`}>\r\n          <button onClick={onClose} className=\"absolute top-4 right-4 text-white hover:text-gray-200\" type=\"button\">\r\n            <X className=\"w-6 h-6\" />\r\n          </button>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"text-white\">{getTierIcon(selectedTier)}</div>\r\n            <div>\r\n              <h2 className=\"text-3xl font-bold text-white\">{selectedTier} Tier</h2>\r\n              <p className=\"text-white/80\">Seller Achievement Level</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Requirements */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-white mb-3 flex items-center gap-2\">\r\n              <Target className=\"w-5 h-5 text-[#ff950e]\" />\r\n              Requirements\r\n            </h3>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"bg-black rounded-lg p-4\">\r\n                <p className=\"text-sm text-gray-400\">Minimum Sales</p>\r\n                <p className=\"text-2xl font-bold text-[#ff950e]\">{tierInfo.minSales.toLocaleString()}</p>\r\n              </div>\r\n              <div className=\"bg-black rounded-lg p-4\">\r\n                <p className=\"text-sm text-gray-400\">Minimum Revenue</p>\r\n                <p className=\"text-2xl font-bold text-[#ff950e]\">{formatCurrency(tierInfo.minAmount)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Benefits */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-white mb-3 flex items-center gap-2\">\r\n              <CheckCircle className=\"w-5 h-5 text-green-500\" />\r\n              Benefits\r\n            </h3>\r\n            <ul className=\"space-y-2\">\r\n              {getBenefitsForTier(selectedTier).map((benefit, index) => (\r\n                <li key={index} className=\"flex items-start gap-2\">\r\n                  <span className=\"text-green-500 mt-1\">✓</span>\r\n                  <span className=\"text-gray-300\">{benefit}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Tier Progression */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-white mb-3 flex items-center gap-2\">\r\n              <TrendingUp className=\"w-5 h-5 text-[#ff950e]\" />\r\n              Tier Progression\r\n            </h3>\r\n            <div className=\"flex items-center justify-between\">\r\n              {tiers.map((tier, index) => (\r\n                <div key={tier} className=\"flex items-center\">\r\n                  <div className={`flex flex-col items-center ${tier === selectedTier ? 'scale-110' : ''}`}>\r\n                    <TierBadge tier={tier} size=\"sm\" className={tier === selectedTier ? 'ring-2 ring-[#ff950e]' : 'opacity-60'} />\r\n                    <span className={`text-xs mt-1 ${tier === selectedTier ? 'text-[#ff950e] font-bold' : 'text-gray-500'}`}>\r\n                      {tier}\r\n                    </span>\r\n                  </div>\r\n                  {index < tiers.length - 1 && <div className=\"w-8 h-0.5 bg-gray-700 mx-1\" />}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Button */}\r\n          <div className=\"flex justify-center pt-4\">\r\n            <button onClick={onClose} className=\"px-6 py-3 bg-[#ff950e] text-black font-bold rounded-lg hover:bg-[#e88800] transition\" type=\"button\">\r\n              Got it!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2856, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller-settings/utils/SaveButton.tsx"],"sourcesContent":["// src/components/seller-settings/utils/SaveButton.tsx\r\n'use client';\r\n\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\n\r\ninterface SaveButtonProps {\r\n  onClick: () => void | Promise<void> | Promise<boolean> | Promise<any>; // Accept various async return types\r\n  showSuccess?: boolean;\r\n  showError?: string | boolean; // Accept both string and boolean\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport default function SaveButton({\r\n  onClick,\r\n  showSuccess = false,\r\n  showError,\r\n  isLoading = false\r\n}: SaveButtonProps) {\r\n  // Convert boolean error to string if needed\r\n  let errorMessage: string | undefined;\r\n  if (typeof showError === 'string') {\r\n    errorMessage = sanitizeStrict(showError);\r\n  } else if (showError === true) {\r\n    errorMessage = 'An error occurred';\r\n  }\r\n\r\n  // Handle click with proper async handling\r\n  const handleClick = () => {\r\n    // Call onClick and handle any potential promise\r\n    Promise.resolve(onClick()).catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      {/* Save Button (image inside an accessible button) or Loading State */}\r\n      {isLoading ? (\r\n        <div\r\n          className=\"w-24 h-auto flex flex-col items-center justify-center p-3 bg-gray-800 rounded-lg\"\r\n          role=\"status\"\r\n          aria-live=\"polite\"\r\n        >\r\n          <div className=\"w-6 h-6 border-2 border-[#ff950e] border-t-transparent rounded-full animate-spin mb-2\" />\r\n          <span className=\"text-xs text-[#ff950e]\">Saving...</span>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleClick}\r\n          className=\"cursor-pointer hover:scale-[1.02] transition-transform duration-200\"\r\n          aria-label=\"Save all profile changes\"\r\n        >\r\n          <img\r\n            src=\"/Save_All_Button.png\"\r\n            alt=\"Save All Profile Changes\"\r\n            className=\"w-24 h-auto object-contain\"\r\n            draggable={false}\r\n          />\r\n        </button>\r\n      )}\r\n\r\n      {/* Success Message */}\r\n      {showSuccess && !isLoading && (\r\n        <div\r\n          className=\"bg-green-900 text-green-100 p-3 rounded-lg mt-3 text-center\"\r\n          role=\"status\"\r\n          aria-live=\"polite\"\r\n        >\r\n          ✅ Profile updated successfully!\r\n        </div>\r\n      )}\r\n\r\n      {/* Error Message */}\r\n      {errorMessage && !isLoading && (\r\n        <div\r\n          className=\"bg-red-900 text-red-100 p-3 rounded-lg mt-3 text-center max-w-xs\"\r\n          role=\"alert\"\r\n          aria-live=\"assertive\"\r\n        >\r\n          ❌ {errorMessage}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;AAGtD;AAFA;;;AAWe,SAAS,WAAW,EACjC,OAAO,EACP,cAAc,KAAK,EACnB,SAAS,EACT,YAAY,KAAK,EACD;IAChB,4CAA4C;IAC5C,IAAI;IACJ,IAAI,OAAO,cAAc,UAAU;QACjC,eAAe,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IAChC,OAAO,IAAI,cAAc,MAAM;QAC7B,eAAe;IACjB;IAEA,0CAA0C;IAC1C,MAAM,cAAc;QAClB,gDAAgD;QAChD,QAAQ,OAAO,CAAC,WAAW,KAAK,CAAC,QAAQ,KAAK;IAChD;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAEZ,0BACC,8OAAC;gBACC,WAAU;gBACV,MAAK;gBACL,aAAU;;kCAEV,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;;;;;;qCAG3C,8OAAC;gBACC,MAAK;gBACL,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,8OAAC;oBACC,KAAI;oBACJ,KAAI;oBACJ,WAAU;oBACV,WAAW;;;;;;;;;;;YAMhB,eAAe,CAAC,2BACf,8OAAC;gBACC,WAAU;gBACV,MAAK;gBACL,aAAU;0BACX;;;;;;YAMF,gBAAgB,CAAC,2BAChB,8OAAC;gBACC,WAAU;gBACV,MAAK;gBACL,aAAU;;oBACX;oBACI;;;;;;;;;;;;;AAKb","debugId":null}},
    {"offset": {"line": 2960, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller-settings/TierDisplaySection.tsx"],"sourcesContent":["// src/components/seller-settings/TierDisplaySection.tsx\r\n'use client';\r\n\r\nimport { Award, TrendingUp, Star, Gift, Target, Crown } from 'lucide-react';\r\nimport TierBadge from '@/components/TierBadge';\r\nimport type { TierLevel } from '@/utils/sellerTiers';\r\nimport { z } from 'zod';\r\nimport { formatCurrency } from '@/utils/url';\r\n\r\n// Define TIER_LEVELS locally\r\nconst TIER_LEVELS: Record<TierLevel, { minSales: number; minAmount: number; credit: number }> = {\r\n  None: { minSales: 0, minAmount: 0, credit: 0 },\r\n  Tease: { minSales: 0, minAmount: 0, credit: 0 },\r\n  Flirt: { minSales: 10, minAmount: 5000, credit: 0.01 },\r\n  Obsession: { minSales: 101, minAmount: 12500, credit: 0.02 },\r\n  Desire: { minSales: 251, minAmount: 75000, credit: 0.03 },\r\n  Goddess: { minSales: 1001, minAmount: 150000, credit: 0.05 },\r\n};\r\n\r\nconst VALID_TIERS: TierLevel[] = ['None', 'Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'];\r\nfunction isTierLevel(v: unknown): v is TierLevel {\r\n  return typeof v === 'string' && (VALID_TIERS as readonly string[]).includes(v);\r\n}\r\nfunction normalizeTier(v: unknown): TierLevel | null {\r\n  if (isTierLevel(v)) return v;\r\n  if (typeof v === 'string') {\r\n    const s = v.trim().toLowerCase();\r\n    switch (s) {\r\n      case 'none':\r\n        return 'None';\r\n      case 'tease':\r\n        return 'Tease';\r\n      case 'flirt':\r\n        return 'Flirt';\r\n      case 'obsession':\r\n        return 'Obsession';\r\n      case 'desire':\r\n        return 'Desire';\r\n      case 'goddess':\r\n        return 'Goddess';\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst PropsSchema = z.object({\r\n  sellerTierInfo: z\r\n    .object({\r\n      tier: z.unknown(),\r\n      credit: z.number().optional(),\r\n    }),\r\n  userStats: z.object({\r\n    totalSales: z.number().int().nonnegative().catch(0),\r\n    totalRevenue: z.number().nonnegative().catch(0),\r\n  }),\r\n  nextTier: z.unknown(), // normalize to TierLevel\r\n  selectedTierDetails: z.unknown().nullable(), // normalize\r\n  onTierSelect: z.function().args(z.unknown()).returns(z.void()),\r\n});\r\n\r\ninterface TierDisplaySectionProps extends z.infer<typeof PropsSchema> {}\r\n\r\nexport default function TierDisplaySection(rawProps: TierDisplaySectionProps) {\r\n  const parsed = PropsSchema.safeParse(rawProps);\r\n  const {\r\n    sellerTierInfo,\r\n    userStats,\r\n    nextTier: rawNextTier,\r\n    selectedTierDetails: rawSelected,\r\n    onTierSelect,\r\n  } = parsed.success\r\n    ? parsed.data\r\n    : {\r\n        sellerTierInfo: { tier: 'None', credit: 0 },\r\n        userStats: { totalSales: 0, totalRevenue: 0 },\r\n        nextTier: 'Tease',\r\n        selectedTierDetails: null,\r\n        onTierSelect: () => {},\r\n      };\r\n\r\n  const currentTier = normalizeTier(sellerTierInfo.tier);\r\n  const nextTier = normalizeTier(rawNextTier) ?? 'Tease';\r\n  const selectedTierDetails = normalizeTier(rawSelected);\r\n\r\n  const credit = typeof sellerTierInfo.credit === 'number' && Number.isFinite(sellerTierInfo.credit) ? sellerTierInfo.credit : 0;\r\n\r\n  return (\r\n    <div className=\"mt-8 bg-gradient-to-r from-[#1a1a1a] to-[#272727] rounded-xl border border-gray-800 p-6 shadow-xl\">\r\n      <div className=\"flex items-center justify-between flex-wrap gap-4 mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"pr-6 flex-shrink-0\">\r\n            {currentTier && currentTier !== 'None' ? <TierBadge tier={currentTier} size=\"2xl\" showTooltip={true} /> : null}\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-xl font-bold text-white mb-1 flex items-center\">\r\n              <Award className=\"w-5 h-5 mr-2 text-[#ff950e]\" />\r\n              Your Seller Tier:{' '}\r\n              <span className=\"ml-2 text-[#ff950e]\">{currentTier && currentTier !== 'None' ? currentTier : '—'}</span>\r\n            </h2>\r\n            <p className=\"text-gray-300\">\r\n              {credit > 0 ? (\r\n                <>\r\n                  You earn an additional <span className=\"font-bold text-green-400\">{(credit * 100).toFixed(0)}%</span> on all\r\n                  your sales!\r\n                </>\r\n              ) : (\r\n                <>Make more sales to earn additional credits on your sales</>\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {currentTier !== 'Goddess' && nextTier && (\r\n          <div className=\"bg-[#111] border border-gray-800 rounded-lg p-3 shadow-inner\">\r\n            <div className=\"text-sm text-gray-400\">\r\n              Next tier: <span className=\"font-medium text-purple-400\">{nextTier}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <TrendingUp className=\"w-4 h-4 text-green-400\" />\r\n              <span className=\"text-green-300 text-sm\">\r\n                Need: {TIER_LEVELS[nextTier].minSales.toLocaleString()} sales or{' '}\r\n                {formatCurrency(TIER_LEVELS[nextTier].minAmount)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Simple Interactive Tier Table */}\r\n      <div className=\"bg-[#111] rounded-lg p-4 border border-gray-700\">\r\n        <h3 className=\"text-lg font-medium text-gray-300 mb-4 flex items-center gap-2\">\r\n          <Star className=\"w-5 h-5 text-[#ff950e]\" />\r\n          All Seller Tiers <span className=\"text-sm text-gray-500 font-normal\">(Click to view details)</span>\r\n        </h3>\r\n\r\n        {/* Tier Badges Row */}\r\n        <div className=\"grid grid-cols-5 gap-3 mb-4\">\r\n          {(['Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'] as TierLevel[]).map((tier) => {\r\n            const isCurrentTier = currentTier === tier;\r\n            const isSelected = selectedTierDetails === tier;\r\n\r\n            return (\r\n              <button\r\n                key={tier}\r\n                onClick={() => onTierSelect(isSelected ? null : tier)}\r\n                className={`relative p-3 rounded-lg border-2 transition-all duration-300 ${\r\n                  isCurrentTier\r\n                    ? 'border-[#ff950e] bg-[#ff950e]/10'\r\n                    : isSelected\r\n                    ? 'border-purple-400 bg-purple-400/10'\r\n                    : 'border-gray-600 bg-gray-800/50 hover:border-gray-500'\r\n                }`}\r\n                type=\"button\"\r\n                aria-pressed={isSelected}\r\n                aria-label={`View ${tier} details`}\r\n              >\r\n                <div className=\"flex flex-col items-center space-y-2\">\r\n                  <TierBadge tier={tier} size=\"xl\" showTooltip={false} />\r\n                  <div className=\"text-center\">\r\n                    <div className=\"font-medium text-white text-sm\">{tier}</div>\r\n                    <div className=\"text-xs text-gray-400\">+{(TIER_LEVELS[tier].credit * 100).toFixed(0)}%</div>\r\n                    {isCurrentTier && <div className=\"text-xs text-[#ff950e] font-medium mt-1\">Current</div>}\r\n                  </div>\r\n                </div>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Expanded Details */}\r\n        {selectedTierDetails && (\r\n          <div className=\"border-t border-gray-700 pt-4 animate-in slide-in-from-top duration-300\">\r\n            <div className=\"bg-[#0a0a0a] rounded-lg p-4 border border-gray-800\">\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <TierBadge tier={selectedTierDetails} size=\"lg\" showTooltip={false} />\r\n                <div>\r\n                  <h4 className=\"text-xl font-bold text-[#ff950e]\">{selectedTierDetails} Tier</h4>\r\n                  <p className=\"text-gray-400 text-sm\">\r\n                    Level {(['Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'] as TierLevel[]).indexOf(selectedTierDetails) + 1} of\r\n                    5\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {/* Requirements */}\r\n                <div>\r\n                  <h5 className=\"text-lg font-semibold text-white mb-3 flex items-center gap-2\">\r\n                    <Target className=\"w-4 h-4 text-green-400\" />\r\n                    Requirements\r\n                  </h5>\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                      <span className=\"text-gray-300\">Total Sales</span>\r\n                      <span className=\"text-[#ff950e] font-medium\">{TIER_LEVELS[selectedTierDetails].minSales}+</span>\r\n                    </div>\r\n                    <div className=\"text-center text-gray-500 text-xs\">OR</div>\r\n                    <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                      <span className=\"text-gray-300\">Total Revenue</span>\r\n                      <span className=\"text-[#ff950e] font-medium\">{formatCurrency(TIER_LEVELS[selectedTierDetails].minAmount)}+</span>\r\n                    </div>\r\n\r\n                    {/* User Progress */}\r\n                    <div className=\"mt-3 pt-3 border-t border-gray-800\">\r\n                      <p className=\"text-xs text-gray-400 mb-2\">Your Progress:</p>\r\n                      <div className=\"text-xs space-y-1\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-300\">Sales: {userStats.totalSales}</span>\r\n                          <span className=\"text-gray-300\">Revenue: {formatCurrency(userStats.totalRevenue)}</span>\r\n                        </div>\r\n                        {selectedTierDetails !== currentTier && (\r\n                          <p className=\"text-green-400 mt-2\">\r\n                            Need: {Math.max(0, TIER_LEVELS[selectedTierDetails].minSales - userStats.totalSales)} more sales OR{' '}\r\n                            {formatCurrency(Math.max(0, TIER_LEVELS[selectedTierDetails].minAmount - userStats.totalRevenue))} more\r\n                            revenue\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Benefits */}\r\n                <div>\r\n                  <h5 className=\"text-lg font-semibold text-white mb-3 flex items-center gap-2\">\r\n                    <Gift className=\"w-4 h-4 text-purple-400\" />\r\n                    Benefits\r\n                  </h5>\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                      <span className=\"text-gray-300\">Bonus Credits</span>\r\n                      <span className=\"text-green-400 font-bold\">\r\n                        {TIER_LEVELS[selectedTierDetails].credit > 0\r\n                          ? `+${(TIER_LEVELS[selectedTierDetails].credit * 100).toFixed(0)}%`\r\n                          : 'None'}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {selectedTierDetails !== 'Tease' && (\r\n                      <>\r\n                        <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                          <span className=\"text-gray-300\">Priority Support</span>\r\n                          <span className=\"text-green-400\">✓</span>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                          <span className=\"text-gray-300\">Featured Profile</span>\r\n                          <span className=\"text-green-400\">✓</span>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n\r\n                    {(selectedTierDetails === 'Desire' || selectedTierDetails === 'Goddess') && (\r\n                      <>\r\n                        <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                          <span className=\"text-gray-300\">Custom Badge</span>\r\n                          <span className=\"text-green-400\">✓</span>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between p-2 bg-[#111] rounded\">\r\n                          <span className=\"text-gray-300\">VIP Events</span>\r\n                          <span className=\"text-green-400\">✓</span>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n\r\n                    {selectedTierDetails === 'Goddess' && (\r\n                      <div className=\"flex items-center justify-between p-2 bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded border border-purple-500/30\">\r\n                        <span className=\"text-gray-300\">Elite Status</span>\r\n                        <span className=\"text-purple-400 flex items-center gap-1\">\r\n                          <Crown className=\"w-4 h-4\" />\r\n                          VIP\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3812, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/utils/cloudinary.ts"],"sourcesContent":["// src/utils/cloudinary.ts\r\n\r\n// Cloudinary configuration\r\nconst CLOUD_NAME = process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME || '';\r\nconst UPLOAD_PRESET = process.env.NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET || '';\r\n\r\n// Check if Cloudinary is properly configured\r\nconst isCloudinaryConfigured = () => {\r\n  return CLOUD_NAME && \r\n         UPLOAD_PRESET && \r\n         CLOUD_NAME !== 'your_cloud_name' && \r\n         UPLOAD_PRESET !== 'your_upload_preset';\r\n};\r\n\r\n// Mock image URLs for development\r\nconst MOCK_IMAGE_URLS = [\r\n  'https://picsum.photos/400/600?random=1',\r\n  'https://picsum.photos/400/600?random=2',\r\n  'https://picsum.photos/400/600?random=3',\r\n  'https://picsum.photos/400/600?random=4',\r\n  'https://picsum.photos/400/600?random=5',\r\n  'https://picsum.photos/400/600?random=6',\r\n  'https://picsum.photos/400/600?random=7',\r\n  'https://picsum.photos/400/600?random=8',\r\n  'https://picsum.photos/400/600?random=9',\r\n  'https://picsum.photos/400/600?random=10',\r\n];\r\n\r\n// Types\r\nexport interface CloudinaryUploadResult {\r\n  url: string;\r\n  publicId: string;\r\n  format: string;\r\n  width: number;\r\n  height: number;\r\n  bytes: number;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface CloudinaryDeleteResult {\r\n  result: 'ok' | 'not found' | 'error';\r\n  publicId: string;\r\n}\r\n\r\nexport interface BatchDeleteResult {\r\n  successful: string[];\r\n  failed: Array<{\r\n    publicId: string;\r\n    error: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Convert File to base64 data URL\r\n */\r\nconst fileToDataURL = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        resolve(e.target.result as string);\r\n      } else {\r\n        reject(new Error('Failed to read file'));\r\n      }\r\n    };\r\n    reader.onerror = () => reject(new Error('Failed to read file'));\r\n    reader.readAsDataURL(file);\r\n  });\r\n};\r\n\r\n/**\r\n * Generate a mock upload result for development using actual uploaded file\r\n */\r\nconst generateMockUploadResult = async (file: File, index: number): Promise<CloudinaryUploadResult> => {\r\n  const randomId = `mock_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  \r\n  // Convert the actual file to a data URL\r\n  const dataUrl = await fileToDataURL(file);\r\n  \r\n  return {\r\n    url: dataUrl,\r\n    publicId: randomId,\r\n    format: file.type.split('/')[1] || 'jpeg',\r\n    width: 400, // We could calculate actual dimensions if needed\r\n    height: 600,\r\n    bytes: file.size,\r\n    createdAt: new Date().toISOString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Upload a single file to Cloudinary\r\n * @param file - The file to upload\r\n * @returns Promise with upload result\r\n */\r\nexport const uploadToCloudinary = async (\r\n  file: File\r\n): Promise<CloudinaryUploadResult> => {\r\n  // Validate file before upload\r\n  if (!isValidImageFile(file)) {\r\n    throw new Error(`Invalid file: ${file.name}. Must be JPEG, PNG, WebP, or GIF under 10MB.`);\r\n  }\r\n  \r\n  // Check if we should use mock data\r\n  if (!isCloudinaryConfigured()) {\r\n    console.warn('Cloudinary not configured. Using local image data for development.');\r\n    // Simulate upload delay\r\n    await new Promise(resolve => setTimeout(resolve, 500 + Math.random() * 1000));\r\n    return await generateMockUploadResult(file, 0);\r\n  }\r\n  \r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('upload_preset', UPLOAD_PRESET);\r\n  \r\n  try {\r\n    const response = await fetch(\r\n      `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`,\r\n      {\r\n        method: 'POST',\r\n        body: formData,\r\n      }\r\n    );\r\n    \r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Upload failed: ${response.statusText || error}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    return {\r\n      url: data.secure_url,\r\n      publicId: data.public_id,\r\n      format: data.format,\r\n      width: data.width,\r\n      height: data.height,\r\n      bytes: data.bytes,\r\n      createdAt: data.created_at,\r\n    };\r\n  } catch (error) {\r\n    console.error('Cloudinary upload error:', error);\r\n    throw error instanceof Error ? error : new Error('Upload failed');\r\n  }\r\n};\r\n\r\n/**\r\n * Upload multiple files to Cloudinary with progress tracking\r\n * @param files - Array of files to upload\r\n * @param onProgress - Progress callback\r\n * @returns Promise with array of upload results\r\n */\r\nexport const uploadMultipleToCloudinary = async (\r\n  files: File[],\r\n  onProgress?: (progress: number) => void\r\n): Promise<CloudinaryUploadResult[]> => {\r\n  // Validate all files first\r\n  const invalidFiles = files.filter(file => !isValidImageFile(file));\r\n  if (invalidFiles.length > 0) {\r\n    const invalidFileNames = invalidFiles.map(f => f.name).join(', ');\r\n    throw new Error(\r\n      `Invalid files detected: ${invalidFileNames}. ` +\r\n      `All files must be JPEG, PNG, WebP, or GIF under 10MB each.`\r\n    );\r\n  }\r\n  \r\n  // Check if we should use mock data\r\n  if (!isCloudinaryConfigured()) {\r\n    console.warn('Cloudinary not configured. Using local image data for development.');\r\n    const results: CloudinaryUploadResult[] = [];\r\n    \r\n    for (let i = 0; i < files.length; i++) {\r\n      // Simulate upload delay\r\n      await new Promise(resolve => setTimeout(resolve, 300 + Math.random() * 700));\r\n      results.push(await generateMockUploadResult(files[i], i));\r\n      \r\n      if (onProgress) {\r\n        const progress = ((i + 1) / files.length) * 100;\r\n        onProgress(progress);\r\n      }\r\n    }\r\n    \r\n    return results;\r\n  }\r\n  \r\n  const results: CloudinaryUploadResult[] = [];\r\n  const totalFiles = files.length;\r\n  \r\n  for (let i = 0; i < files.length; i++) {\r\n    try {\r\n      const result = await uploadToCloudinary(files[i]);\r\n      results.push(result);\r\n      \r\n      if (onProgress) {\r\n        const progress = ((i + 1) / totalFiles) * 100;\r\n        onProgress(progress);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Failed to upload file ${i + 1}:`, error);\r\n      // Clean up any successful uploads if one fails\r\n      if (results.length > 0 && isCloudinaryConfigured()) {\r\n        console.log('Rolling back successful uploads:', results.map(r => r.publicId));\r\n        // Attempt to delete successfully uploaded images\r\n        await batchDeleteFromCloudinary(results.map(r => r.publicId));\r\n      }\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to upload file ${files[i].name}: ${errorMessage}`);\r\n    }\r\n  }\r\n  \r\n  return results;\r\n};\r\n\r\n/**\r\n * Delete an image from Cloudinary\r\n * @param publicId - The public ID of the image to delete\r\n * @returns Promise indicating success\r\n */\r\nexport const deleteFromCloudinary = async (publicId: string): Promise<CloudinaryDeleteResult> => {\r\n  // If using mock data, just return success\r\n  if (!isCloudinaryConfigured() || publicId.startsWith('mock_')) {\r\n    console.log('Mock mode: Simulating image deletion for', publicId);\r\n    return {\r\n      result: 'ok',\r\n      publicId: publicId,\r\n    };\r\n  }\r\n  \r\n  try {\r\n    // For now, make a request to the mock API endpoint\r\n    const response = await fetch('/api/cloudinary/delete', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ publicId }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json().catch(() => ({ message: 'Delete failed' }));\r\n      throw new Error(error.message || `Delete failed: ${response.statusText}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error('Delete from Cloudinary error:', error);\r\n    throw error instanceof Error ? error : new Error('Delete failed');\r\n  }\r\n};\r\n\r\n/**\r\n * Batch delete multiple images from Cloudinary\r\n * @param publicIds - Array of public IDs to delete\r\n * @returns Promise with batch delete results\r\n */\r\nexport const batchDeleteFromCloudinary = async (\r\n  publicIds: string[]\r\n): Promise<BatchDeleteResult> => {\r\n  const results: BatchDeleteResult = {\r\n    successful: [],\r\n    failed: [],\r\n  };\r\n\r\n  // Process deletions in parallel with error handling for each\r\n  const deletePromises = publicIds.map(async (publicId) => {\r\n    try {\r\n      const result = await deleteFromCloudinary(publicId);\r\n      if (result.result === 'ok') {\r\n        results.successful.push(publicId);\r\n      } else {\r\n        results.failed.push({\r\n          publicId,\r\n          error: result.result === 'not found' ? 'Image not found' : 'Delete failed',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      results.failed.push({\r\n        publicId,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n      });\r\n    }\r\n  });\r\n\r\n  await Promise.allSettled(deletePromises);\r\n  return results;\r\n};\r\n\r\n/**\r\n * Delete image by URL (extracts public ID and deletes)\r\n * @param url - Cloudinary URL\r\n * @returns Promise indicating success\r\n */\r\nexport const deleteImageByUrl = async (url: string): Promise<CloudinaryDeleteResult> => {\r\n  // Handle data URLs (local images)\r\n  if (url.includes('data:image')) {\r\n    return {\r\n      result: 'ok',\r\n      publicId: 'local_image',\r\n    };\r\n  }\r\n  \r\n  // Handle mock URLs\r\n  if (url.includes('picsum.photos')) {\r\n    const mockId = url.match(/id=(mock_[a-zA-Z0-9_]+)/)?.[1] || 'mock_unknown';\r\n    return deleteFromCloudinary(mockId);\r\n  }\r\n  \r\n  const publicId = extractPublicId(url);\r\n  if (!publicId) {\r\n    throw new Error('Invalid Cloudinary URL: Unable to extract public ID');\r\n  }\r\n  \r\n  return deleteFromCloudinary(publicId);\r\n};\r\n\r\n/**\r\n * Generate a thumbnail URL for a Cloudinary image\r\n * @param url - The original Cloudinary URL\r\n * @param width - Thumbnail width\r\n * @param height - Thumbnail height\r\n * @returns Thumbnail URL\r\n */\r\nexport const generateThumbnailUrl = (\r\n  url: string,\r\n  width: number = 300,\r\n  height: number = 300\r\n): string => {\r\n  // Handle mock URLs (data URLs)\r\n  if (url.includes('data:image')) {\r\n    return url; // Data URLs can't be resized via URL manipulation\r\n  }\r\n  \r\n  // Handle picsum photos\r\n  if (url.includes('picsum.photos')) {\r\n    return url.replace(/\\/\\d+\\/\\d+/, `/${width}/${height}`);\r\n  }\r\n  \r\n  return url.replace('/upload/', `/upload/w_${width},h_${height},c_fill,q_auto/`);\r\n};\r\n\r\n/**\r\n * Generate an optimized URL for a Cloudinary image\r\n * @param url - The original Cloudinary URL\r\n * @param options - Optimization options\r\n * @returns Optimized URL\r\n */\r\nexport const generateOptimizedUrl = (\r\n  url: string,\r\n  options: {\r\n    width?: number;\r\n    height?: number;\r\n    quality?: number | 'auto';\r\n    format?: string;\r\n    blur?: number;\r\n  } = {}\r\n): string => {\r\n  // Handle mock URLs (data URLs and picsum)\r\n  if (url.includes('data:image')) {\r\n    return url; // Data URLs can't be transformed via URL manipulation\r\n  }\r\n  \r\n  if (url.includes('picsum.photos')) {\r\n    const { width = 400, height = 600, blur } = options;\r\n    let mockUrl = url.replace(/\\/\\d+\\/\\d+/, `/${width}/${height}`);\r\n    if (blur) {\r\n      mockUrl += `${mockUrl.includes('?') ? '&' : '?'}blur=${Math.min(10, blur / 100)}`;\r\n    }\r\n    return mockUrl;\r\n  }\r\n  \r\n  const { width, height, quality = 'auto', format = 'auto', blur } = options;\r\n  \r\n  let transformations = [`q_${quality}`, `f_${format}`];\r\n  \r\n  if (width) transformations.push(`w_${width}`);\r\n  if (height) transformations.push(`h_${height}`);\r\n  if (blur) transformations.push(`e_blur:${blur}`);\r\n  \r\n  const transformString = transformations.join(',');\r\n  return url.replace('/upload/', `/upload/${transformString}/`);\r\n};\r\n\r\n/**\r\n * Generate a blurred preview URL (useful for premium content)\r\n * @param url - The original Cloudinary URL\r\n * @param blurLevel - Blur intensity (100-2000, higher = more blur)\r\n * @returns Blurred URL\r\n */\r\nexport const generateBlurredUrl = (url: string, blurLevel: number = 1000): string => {\r\n  return generateOptimizedUrl(url, { blur: blurLevel, quality: 70 });\r\n};\r\n\r\n/**\r\n * Validate if a file is an acceptable image type\r\n * @param file - The file to validate\r\n * @returns Boolean indicating if file is valid\r\n */\r\nexport const isValidImageFile = (file: File): boolean => {\r\n  const acceptedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];\r\n  const maxSize = 10 * 1024 * 1024; // 10MB\r\n  \r\n  if (!acceptedTypes.includes(file.type)) {\r\n    console.warn(`Invalid file type: ${file.type} for file: ${file.name}`);\r\n    return false;\r\n  }\r\n  \r\n  if (file.size > maxSize) {\r\n    console.warn(`File too large: ${file.size} bytes for file: ${file.name}`);\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\n/**\r\n * Get human-readable file size\r\n * @param bytes - File size in bytes\r\n * @returns Formatted string\r\n */\r\nexport const formatFileSize = (bytes: number): string => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n};\r\n\r\n/**\r\n * Convert a base64 string to a File object for Cloudinary upload\r\n * @param base64 - The base64 string\r\n * @param filename - The filename to use\r\n * @returns File object\r\n */\r\nexport const base64ToFile = (base64: string, filename: string): File => {\r\n  // Handle data URL format\r\n  const arr = base64.split(',');\r\n  const mime = arr[0].match(/:(.*?);/)?.[1] || 'image/jpeg';\r\n  const bstr = atob(arr[1]);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n  \r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  \r\n  return new File([u8arr], filename, { type: mime });\r\n};\r\n\r\n/**\r\n * Extract Cloudinary public ID from URL\r\n * @param url - Cloudinary URL\r\n * @returns Public ID or null if not a valid Cloudinary URL\r\n */\r\nexport const extractPublicId = (url: string): string | null => {\r\n  try {\r\n    const regex = /\\/v\\d+\\/(.+)\\.[a-zA-Z]+$/;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if a URL is a Cloudinary URL\r\n * @param url - URL to check\r\n * @returns Boolean\r\n */\r\nexport const isCloudinaryUrl = (url: string): boolean => {\r\n  return url.includes('cloudinary.com') && url.includes(CLOUD_NAME);\r\n};\r\n\r\n/**\r\n * Check if Cloudinary is configured and show appropriate message\r\n */\r\nexport const checkCloudinaryConfig = (): { configured: boolean; message?: string } => {\r\n  if (!isCloudinaryConfigured()) {\r\n    return {\r\n      configured: false,\r\n      message: 'Cloudinary is not configured. Using mock images for development. To enable real image uploads, please update your .env.local file with valid Cloudinary credentials.'\r\n    };\r\n  }\r\n  return { configured: true };\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4139, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/hooks/seller-settings/useProfileData.ts"],"sourcesContent":["// src/hooks/seller-settings/useProfileData.ts\r\n\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { usersService } from '@/services';\r\nimport { uploadToCloudinary } from '@/utils/cloudinary';\r\nimport { ProfileCompleteness, calculateProfileCompleteness } from '@/types/users';\r\nimport { profileSchemas } from '@/utils/validation/schemas';\r\nimport { sanitizeStrict, sanitizeUrl } from '@/utils/security/sanitization';\r\nimport { securityService } from '@/services/security.service';\r\nimport { getRateLimiter, RATE_LIMITS } from '@/utils/security/rate-limiter';\r\n\r\ninterface UseProfileDataReturn {\r\n  // Profile data\r\n  bio: string;\r\n  setBio: (bio: string) => void;\r\n  profilePic: string | null;\r\n  setProfilePic: (pic: string | null) => void;\r\n  preview: string | null;\r\n  setPreview: (preview: string | null) => void;\r\n  subscriptionPrice: string;\r\n  setSubscriptionPrice: (price: string) => void;\r\n  \r\n  // Gallery\r\n  galleryImages: string[];\r\n  setGalleryImages: (images: string[]) => void;\r\n  \r\n  // Profile completeness\r\n  completeness: ProfileCompleteness | null;\r\n  \r\n  // User preferences\r\n  preferences: any | null;\r\n  updatePreferences: (updates: any) => Promise<void>;\r\n  \r\n  // States\r\n  isUploading: boolean;\r\n  isLoadingProfile: boolean;\r\n  isSaving: boolean;\r\n  \r\n  // Actions\r\n  handleProfilePicChange: (e: React.ChangeEvent<HTMLInputElement>) => Promise<void>;\r\n  removeProfilePic: () => void;\r\n  saveProfile: () => Promise<boolean>;\r\n  refreshProfile: () => Promise<void>;\r\n  \r\n  // Validation\r\n  errors: {\r\n    bio?: string;\r\n    subscriptionPrice?: string;\r\n  };\r\n}\r\n\r\nexport function useProfileData(): UseProfileDataReturn {\r\n  const { user, updateUser } = useAuth();\r\n  const rateLimiter = getRateLimiter();\r\n  \r\n  // Profile state\r\n  const [bio, setBio] = useState('');\r\n  const [profilePic, setProfilePic] = useState<string | null>(null);\r\n  const [preview, setPreview] = useState<string | null>(null);\r\n  const [subscriptionPrice, setSubscriptionPrice] = useState<string>('');\r\n  const [galleryImages, setGalleryImages] = useState<string[]>([]);\r\n  \r\n  // Additional features\r\n  const [completeness, setCompleteness] = useState<ProfileCompleteness | null>(null);\r\n  const [preferences, setPreferences] = useState<any | null>(null);\r\n  \r\n  // Loading states\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  \r\n  // Validation errors\r\n  const [errors, setErrors] = useState<{ bio?: string; subscriptionPrice?: string }>({});\r\n  \r\n  // Track unsaved changes\r\n  const hasUnsavedChanges = useRef(false);\r\n  const originalData = useRef<any>({});\r\n\r\n  // Validate bio with security\r\n  const validateBio = useCallback((value: string) => {\r\n    try {\r\n      const sanitized = sanitizeStrict(value);\r\n      const result = profileSchemas.bio.safeParse(sanitized);\r\n      \r\n      if (!result.success) {\r\n        setErrors(prev => ({ ...prev, bio: result.error.errors[0].message }));\r\n        return false;\r\n      }\r\n      \r\n      setErrors(prev => ({ ...prev, bio: undefined }));\r\n      return true;\r\n    } catch {\r\n      setErrors(prev => ({ ...prev, bio: 'Invalid bio format' }));\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Validate subscription price with security\r\n  const validatePrice = useCallback((value: string) => {\r\n    const validation = securityService.validateAmount(value, {\r\n      min: 0,\r\n      max: 999.99,\r\n      allowDecimals: true\r\n    });\r\n    \r\n    if (!validation.valid) {\r\n      setErrors(prev => ({ \r\n        ...prev, \r\n        subscriptionPrice: validation.error || 'Invalid price' \r\n      }));\r\n      return false;\r\n    }\r\n    \r\n    setErrors(prev => ({ ...prev, subscriptionPrice: undefined }));\r\n    return true;\r\n  }, []);\r\n\r\n  // Load profile data\r\n  const loadProfileData = useCallback(async () => {\r\n    // Check if user exists and has username\r\n    if (!user?.username) {\r\n      console.warn('[useProfileData] No username available, skipping profile load');\r\n      setIsLoadingProfile(false);\r\n      return;\r\n    }\r\n\r\n    // Ensure username is defined and valid\r\n    const username = user.username.trim();\r\n    if (!username) {\r\n      console.error('[useProfileData] Username is empty after trim');\r\n      setIsLoadingProfile(false);\r\n      return;\r\n    }\r\n\r\n    console.log(`[useProfileData] Loading profile data for username: \"${username}\"`);\r\n    setIsLoadingProfile(true);\r\n    \r\n    try {\r\n      // Get profile data with proper username\r\n      console.log(`[useProfileData] Calling getUserProfile with username: \"${username}\"`);\r\n      const profileResult = await usersService.getUserProfile(username);\r\n      \r\n      if (!profileResult.success) {\r\n        console.error('[useProfileData] Failed to get user profile:', profileResult.error);\r\n      } else if (profileResult.data) {\r\n        const profile = profileResult.data;\r\n        console.log('[useProfileData] Profile data loaded successfully:', profile);\r\n        \r\n        // Sanitize loaded data\r\n        const sanitizedBio = sanitizeStrict(profile.bio || '');\r\n        const sanitizedProfilePic = profile.profilePic ? sanitizeUrl(profile.profilePic) : null;\r\n        \r\n        setBio(sanitizedBio);\r\n        setProfilePic(sanitizedProfilePic);\r\n        // Ensure subscriptionPrice is always a string\r\n        setSubscriptionPrice(String(profile.subscriptionPrice || '0'));\r\n        \r\n        // Sanitize gallery URLs\r\n        const sanitizedGallery = (profile.galleryImages || [])\r\n          .map(url => sanitizeUrl(url))\r\n          .filter((url): url is string => url !== '' && url !== null);\r\n        setGalleryImages(sanitizedGallery);\r\n        \r\n        // Store original data for change tracking\r\n        originalData.current = {\r\n          bio: sanitizedBio,\r\n          profilePic: sanitizedProfilePic,\r\n          subscriptionPrice: String(profile.subscriptionPrice || '0'),\r\n          galleryImages: sanitizedGallery,\r\n        };\r\n      } else {\r\n        console.warn('[useProfileData] No profile data returned');\r\n      }\r\n\r\n      // Calculate completeness - ensure username is passed\r\n      console.log(`[useProfileData] Calling getUser with username: \"${username}\"`);\r\n      const userResult = await usersService.getUser(username);\r\n      \r\n      if (!userResult.success) {\r\n        console.error('[useProfileData] Failed to get user:', userResult.error);\r\n      } else if (userResult.data && profileResult.data) {\r\n        // Ensure subscriptionPrice is a string for calculateProfileCompleteness\r\n        const comp = calculateProfileCompleteness(userResult.data, {\r\n          ...profileResult.data,\r\n          subscriptionPrice: String(profileResult.data.subscriptionPrice || '0')\r\n        });\r\n        setCompleteness(comp);\r\n        console.log('[useProfileData] Profile completeness calculated:', comp);\r\n      }\r\n\r\n      // Load preferences - ensure username is passed\r\n      console.log(`[useProfileData] Calling getUserPreferences with username: \"${username}\"`);\r\n      const prefsResult = await usersService.getUserPreferences(username);\r\n      \r\n      if (!prefsResult.success) {\r\n        console.error('[useProfileData] Failed to get user preferences:', prefsResult.error);\r\n      } else if (prefsResult.data) {\r\n        setPreferences(prefsResult.data);\r\n        console.log('[useProfileData] User preferences loaded:', prefsResult.data);\r\n      }\r\n\r\n      // Track profile view activity\r\n      await usersService.trackActivity({\r\n        userId: username,\r\n        type: 'profile_update',\r\n        details: { action: 'profile_settings_viewed' },\r\n      });\r\n    } catch (error) {\r\n      console.error('[useProfileData] Error loading profile data:', error);\r\n      // Don't throw - just log the error and continue\r\n    } finally {\r\n      setIsLoadingProfile(false);\r\n    }\r\n  }, [user?.username]);\r\n\r\n  // Load profile data on mount and when user changes\r\n  useEffect(() => {\r\n    loadProfileData();\r\n  }, [loadProfileData]);\r\n\r\n  // Track changes\r\n  useEffect(() => {\r\n    hasUnsavedChanges.current = \r\n      bio !== originalData.current.bio ||\r\n      profilePic !== originalData.current.profilePic ||\r\n      subscriptionPrice !== originalData.current.subscriptionPrice ||\r\n      JSON.stringify(galleryImages) !== JSON.stringify(originalData.current.galleryImages);\r\n  }, [bio, profilePic, subscriptionPrice, galleryImages]);\r\n\r\n  // Handle profile picture change with security\r\n  const handleProfilePicChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    // Check if user exists\r\n    if (!user?.username) {\r\n      alert('Please log in to upload images');\r\n      return;\r\n    }\r\n\r\n    // Check rate limit\r\n    const rateLimitResult = rateLimiter.check('IMAGE_UPLOAD', {\r\n      ...RATE_LIMITS.IMAGE_UPLOAD,\r\n      identifier: user.username\r\n    });\r\n\r\n    if (!rateLimitResult.allowed) {\r\n      alert(`Too many uploads. Please wait ${rateLimitResult.waitTime} seconds.`);\r\n      return;\r\n    }\r\n\r\n    // Validate file with security service\r\n    const validation = securityService.validateFileUpload(file, {\r\n      maxSize: 10 * 1024 * 1024, // 10MB\r\n      allowedTypes: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],\r\n      allowedExtensions: ['jpg', 'jpeg', 'png', 'webp']\r\n    });\r\n\r\n    if (!validation.valid) {\r\n      alert(validation.error);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      \r\n      // Upload to Cloudinary\r\n      const result = await uploadToCloudinary(file);\r\n      console.log('[useProfileData] Profile pic uploaded successfully:', result);\r\n      \r\n      // Validate uploaded URL\r\n      const sanitizedUrl = sanitizeUrl(result.url);\r\n      if (!sanitizedUrl) {\r\n        throw new Error('Invalid image URL returned');\r\n      }\r\n      \r\n      // Set the preview\r\n      setPreview(sanitizedUrl);\r\n      \r\n      // Track upload activity\r\n      await usersService.trackActivity({\r\n        userId: user.username,\r\n        type: 'profile_update',\r\n        details: { action: 'profile_picture_uploaded' },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"[useProfileData] Error uploading profile image:\", error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      alert(`Failed to upload image: ${errorMessage}`);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  // Remove profile picture\r\n  const removeProfilePic = () => {\r\n    setProfilePic(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  // Save profile with optimistic update and security\r\n  const saveProfile = async (): Promise<boolean> => {\r\n    if (!user?.username) {\r\n      console.error('[useProfileData] Cannot save profile: no username');\r\n      alert('Please log in to save your profile');\r\n      return false;\r\n    }\r\n\r\n    const username = user.username.trim();\r\n    if (!username) {\r\n      console.error('[useProfileData] Cannot save profile: username is empty');\r\n      return false;\r\n    }\r\n\r\n    // Validate all fields\r\n    const isBioValid = validateBio(bio);\r\n    const isPriceValid = validatePrice(subscriptionPrice);\r\n    \r\n    if (!isBioValid || !isPriceValid) {\r\n      return false;\r\n    }\r\n\r\n    // Check rate limit for profile saves\r\n    const rateLimitResult = rateLimiter.check('PROFILE_UPDATE', {\r\n      maxAttempts: 10,\r\n      windowMs: 60 * 60 * 1000, // 1 hour\r\n      identifier: username\r\n    });\r\n\r\n    if (!rateLimitResult.allowed) {\r\n      alert(`Too many profile updates. Please wait ${rateLimitResult.waitTime} seconds.`);\r\n      return false;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      // Sanitize all data before saving\r\n      const sanitizedBio = sanitizeStrict(bio);\r\n      const finalProfilePic = preview || profilePic;\r\n      const sanitizedProfilePic = finalProfilePic ? sanitizeUrl(finalProfilePic) : null;\r\n      \r\n      // Validate gallery images\r\n      const sanitizedGallery = galleryImages\r\n        .map(url => sanitizeUrl(url))\r\n        .filter((url): url is string => url !== '' && url !== null);\r\n\r\n      // Prepare updates\r\n      const updates = {\r\n        bio: sanitizedBio,\r\n        profilePic: sanitizedProfilePic,\r\n        subscriptionPrice,\r\n        galleryImages: sanitizedGallery,\r\n      };\r\n\r\n      console.log(`[useProfileData] Saving profile for username: \"${username}\"`, updates);\r\n\r\n      // Update profile\r\n      const result = await usersService.updateUserProfile(username, updates);\r\n      \r\n      if (result.success) {\r\n        console.log('[useProfileData] Profile saved successfully');\r\n        \r\n        // Update auth context if profile pic changed\r\n        if (sanitizedProfilePic && sanitizedProfilePic !== user.profilePicture) {\r\n          await updateUser({ profilePicture: sanitizedProfilePic });\r\n        }\r\n\r\n        // Update original data\r\n        originalData.current = { ...updates };\r\n        hasUnsavedChanges.current = false;\r\n        \r\n        // Clear preview\r\n        if (preview) {\r\n          setProfilePic(sanitizedProfilePic);\r\n          setPreview(null);\r\n        }\r\n\r\n        // Recalculate completeness\r\n        const userResult = await usersService.getUser(username);\r\n        if (userResult.success && userResult.data) {\r\n          // Ensure subscriptionPrice is a string for calculateProfileCompleteness\r\n          const comp = calculateProfileCompleteness(userResult.data, {\r\n            ...result.data!,\r\n            subscriptionPrice: String(result.data!.subscriptionPrice || '0')\r\n          });\r\n          setCompleteness(comp);\r\n        }\r\n\r\n        // Track save activity\r\n        await usersService.trackActivity({\r\n          userId: username,\r\n          type: 'profile_update',\r\n          details: { \r\n            action: 'profile_saved',\r\n            fieldsUpdated: Object.keys(updates),\r\n          },\r\n        });\r\n\r\n        return true;\r\n      } else {\r\n        console.error('[useProfileData] Failed to save profile:', result.error);\r\n        alert(result.error?.message || 'Failed to save profile');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('[useProfileData] Error saving profile:', error);\r\n      alert('Failed to save profile');\r\n      return false;\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Update preferences with sanitization\r\n  const updatePreferences = async (updates: any) => {\r\n    if (!user?.username) {\r\n      console.error('[useProfileData] Cannot update preferences: no username');\r\n      return;\r\n    }\r\n\r\n    const username = user.username.trim();\r\n    if (!username) {\r\n      console.error('[useProfileData] Cannot update preferences: username is empty');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Sanitize preference updates\r\n      const sanitizedUpdates = securityService.sanitizeForAPI(updates);\r\n      \r\n      console.log(`[useProfileData] Updating preferences for username: \"${username}\"`, sanitizedUpdates);\r\n      \r\n      const result = await usersService.updateUserPreferences(username, sanitizedUpdates);\r\n      if (result.success) {\r\n        setPreferences(result.data);\r\n        console.log('[useProfileData] Preferences updated successfully');\r\n      } else {\r\n        console.error('[useProfileData] Failed to update preferences:', result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('[useProfileData] Error updating preferences:', error);\r\n    }\r\n  };\r\n\r\n  // Refresh profile data\r\n  const refreshProfile = async () => {\r\n    console.log('[useProfileData] Refreshing profile data');\r\n    // Clear cache to force fresh data\r\n    usersService.clearCache();\r\n    await loadProfileData();\r\n  };\r\n\r\n  // Warn about unsaved changes\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\r\n      if (hasUnsavedChanges.current) {\r\n        e.preventDefault();\r\n        e.returnValue = '';\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\r\n  }, []);\r\n\r\n  // Secure bio setter\r\n  const secureBioSetter = (value: string) => {\r\n    // Limit length to prevent DoS\r\n    const truncated = value.slice(0, 600);\r\n    setBio(truncated);\r\n    validateBio(truncated);\r\n  };\r\n\r\n  // Secure price setter\r\n  const securePriceSetter = (value: string) => {\r\n    // Remove non-numeric characters except decimal\r\n    const cleaned = value.replace(/[^0-9.]/g, '');\r\n    \r\n    // Ensure only one decimal point\r\n    const parts = cleaned.split('.');\r\n    if (parts.length > 2) return;\r\n    \r\n    // Limit to 2 decimal places\r\n    if (parts[1] && parts[1].length > 2) return;\r\n    \r\n    setSubscriptionPrice(cleaned);\r\n    validatePrice(cleaned);\r\n  };\r\n\r\n  return {\r\n    // Profile data\r\n    bio,\r\n    setBio: secureBioSetter,\r\n    profilePic,\r\n    setProfilePic,\r\n    preview,\r\n    setPreview,\r\n    subscriptionPrice,\r\n    setSubscriptionPrice: securePriceSetter,\r\n    \r\n    // Gallery\r\n    galleryImages,\r\n    setGalleryImages,\r\n    \r\n    // Profile completeness\r\n    completeness,\r\n    \r\n    // User preferences\r\n    preferences,\r\n    updatePreferences,\r\n    \r\n    // States\r\n    isUploading,\r\n    isLoadingProfile,\r\n    isSaving,\r\n    \r\n    // Actions\r\n    handleProfilePicChange,\r\n    removeProfilePic,\r\n    saveProfile,\r\n    refreshProfile,\r\n    \r\n    // Validation\r\n    errors,\r\n  };\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4596, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/hooks/seller-settings/useTierCalculation.ts"],"sourcesContent":["// src/hooks/seller-settings/useTierCalculation.ts\r\n\r\nimport { useMemo } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useWallet } from '@/context/WalletContext';\r\nimport { getSellerTierMemoized, TierLevel } from '@/utils/sellerTiers';\r\nimport { sanitizeUsername } from '@/utils/security/sanitization';\r\n\r\n// Define TIER_LEVELS locally to match the structure in sellerTiers.ts\r\nconst TIER_LEVELS: Record<TierLevel, { minSales: number; minAmount: number }> = {\r\n  'None': { minSales: 0, minAmount: 0 },\r\n  'Tease': { minSales: 0, minAmount: 0 },\r\n  'Flirt': { minSales: 10, minAmount: 5000 },\r\n  'Obsession': { minSales: 101, minAmount: 12500 },\r\n  'Desire': { minSales: 251, minAmount: 75000 },\r\n  'Goddess': { minSales: 1001, minAmount: 150000 }\r\n};\r\n\r\nconst VALID_TIERS: readonly TierLevel[] = ['None', 'Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'] as const;\r\n\r\nexport function useTierCalculation() {\r\n  const { user } = useAuth();\r\n  const { orderHistory } = useWallet();\r\n\r\n  // Sanitize username to prevent injection\r\n  const sanitizedUsername = user?.username ? sanitizeUsername(user.username) : null;\r\n\r\n  // Calculate seller tier info\r\n  const sellerTierInfo = useMemo(() => {\r\n    return sanitizedUsername ? getSellerTierMemoized(sanitizedUsername, orderHistory) : null;\r\n  }, [sanitizedUsername, orderHistory]);\r\n\r\n  // Calculate user's current stats with validation\r\n  const userStats = useMemo(() => {\r\n    if (!sanitizedUsername) return { totalSales: 0, totalRevenue: 0 };\r\n    \r\n    const userOrders = orderHistory.filter(order => \r\n      order.seller === sanitizedUsername && \r\n      typeof order.price === 'number' && \r\n      order.price >= 0\r\n    );\r\n\r\n    const totalSales = userOrders.length;\r\n    const totalRevenue = userOrders.reduce((sum, order) => {\r\n      // Validate each price to prevent NaN or negative values\r\n      const price = typeof order.price === 'number' && order.price >= 0 ? order.price : 0;\r\n      return sum + price;\r\n    }, 0);\r\n\r\n    // Ensure values are within reasonable bounds\r\n    return {\r\n      totalSales: Math.min(totalSales, 999999), // Cap at reasonable max\r\n      totalRevenue: Math.min(totalRevenue, 99999999) // Cap at reasonable max\r\n    };\r\n  }, [sanitizedUsername, orderHistory]);\r\n\r\n  // Get next tier info with validation\r\n  const getNextTier = (currentTier: TierLevel): TierLevel => {\r\n    // Validate input tier\r\n    if (!VALID_TIERS.includes(currentTier)) {\r\n      return 'Tease'; // Default to lowest tier if invalid\r\n    }\r\n\r\n    const tiers: TierLevel[] = ['Tease', 'Flirt', 'Obsession', 'Desire', 'Goddess'];\r\n    const currentIndex = tiers.indexOf(currentTier);\r\n    \r\n    if (currentIndex === -1 || currentIndex === tiers.length - 1) {\r\n      return currentTier;\r\n    }\r\n    \r\n    return tiers[currentIndex + 1];\r\n  };\r\n\r\n  // Get tier progress percentages with bounds checking\r\n  const getTierProgress = () => {\r\n    if (!sellerTierInfo) return { salesProgress: 0, revenueProgress: 0 };\r\n\r\n    const currentTier = sellerTierInfo.tier;\r\n    \r\n    // Validate current tier\r\n    if (!VALID_TIERS.includes(currentTier)) {\r\n      return { salesProgress: 0, revenueProgress: 0 };\r\n    }\r\n\r\n    const currentRequirements = TIER_LEVELS[currentTier];\r\n    const nextTier = getNextTier(currentTier);\r\n    const nextRequirements = TIER_LEVELS[nextTier];\r\n\r\n    if (currentTier === 'Goddess' || !nextRequirements) {\r\n      return { salesProgress: 100, revenueProgress: 100 };\r\n    }\r\n\r\n    // Calculate progress with bounds checking\r\n    const salesDiff = nextRequirements.minSales - currentRequirements.minSales;\r\n    const revenueDiff = nextRequirements.minAmount - currentRequirements.minAmount;\r\n\r\n    let salesProgress = 0;\r\n    let revenueProgress = 0;\r\n\r\n    if (salesDiff > 0) {\r\n      salesProgress = Math.min(\r\n        ((userStats.totalSales - currentRequirements.minSales) / salesDiff) * 100,\r\n        100\r\n      );\r\n    }\r\n\r\n    if (revenueDiff > 0) {\r\n      revenueProgress = Math.min(\r\n        ((userStats.totalRevenue - currentRequirements.minAmount) / revenueDiff) * 100,\r\n        100\r\n      );\r\n    }\r\n\r\n    return { \r\n      salesProgress: Math.max(0, Math.floor(salesProgress)), \r\n      revenueProgress: Math.max(0, Math.floor(revenueProgress))\r\n    };\r\n  };\r\n\r\n  // Validate tier level\r\n  const isValidTier = (tier: string): tier is TierLevel => {\r\n    return VALID_TIERS.includes(tier as TierLevel);\r\n  };\r\n\r\n  return {\r\n    sellerTierInfo,\r\n    userStats,\r\n    getNextTier,\r\n    getTierProgress,\r\n    isValidTier,\r\n    validTiers: VALID_TIERS\r\n  };\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4754, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/hooks/seller-settings/useProfileSettings.ts"],"sourcesContent":["// src/hooks/seller-settings/useProfileSettings.ts\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useProfileData } from './useProfileData';\r\nimport { useProfileSave } from './useProfileSave';\r\nimport { useTierCalculation } from './useTierCalculation';\r\nimport { storageService } from '@/services';\r\nimport { API_BASE_URL } from '@/services/api.config';\r\nimport { sanitizeUrl } from '@/utils/security/sanitization';\r\nimport { securityService } from '@/services/security.service';\r\nimport { getRateLimiter, RATE_LIMITS } from '@/utils/security/rate-limiter';\r\n\r\nconst MAX_GALLERY_IMAGES = 20;\r\nconst MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\r\nconst ALLOWED_IMAGE_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n\r\nexport function useProfileSettings() {\r\n  const { user, token } = useAuth();\r\n  const rateLimiter = getRateLimiter();\r\n  \r\n  // Profile data management\r\n  const profileData = useProfileData();\r\n  \r\n  // Gallery state\r\n  const [galleryImages, setGalleryImages] = useState<string[]>([]);\r\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n  const [galleryUploading, setGalleryUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [validationError, setValidationError] = useState<string>('');\r\n  const multipleFileInputRef = useRef<HTMLInputElement>(null);\r\n  const profilePicInputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  // Profile save management - pass gallery images to the hook\r\n  const { saveSuccess, saveError, isSaving, handleSave: baseSaveProfile, handleSaveWithGallery } = useProfileSave();\r\n  \r\n  // Tier calculation\r\n  const tierData = useTierCalculation();\r\n  \r\n  // State for tier modal\r\n  const [selectedTierDetails, setSelectedTierDetails] = useState<any>(null);\r\n\r\n  // Load gallery images on mount from backend\r\n  useEffect(() => {\r\n    const loadGalleryImages = async () => {\r\n      if (user?.username && token) {\r\n        try {\r\n          // Fetch user profile from backend to get gallery images\r\n          const response = await fetch(`${API_BASE_URL}/api/users/${user.username}/profile/full`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n            }\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            if (data.success && data.data) {\r\n              // Handle both direct data and nested profile structure\r\n              const userData = data.data.profile || data.data;\r\n              \r\n              if (userData.galleryImages && Array.isArray(userData.galleryImages)) {\r\n                const validatedGallery = userData.galleryImages\r\n                  .map((url: string) => {\r\n                    // Handle both relative and absolute URLs\r\n                    if (url.startsWith('http://') || url.startsWith('https://')) {\r\n                      return url;\r\n                    } else if (url.startsWith('/uploads/')) {\r\n                      // Convert relative upload paths to full URLs\r\n                      return `${API_BASE_URL}${url}`;\r\n                    } else {\r\n                      return sanitizeUrl(url);\r\n                    }\r\n                  })\r\n                  .filter((url: string | null): url is string => url !== '' && url !== null)\r\n                  .slice(0, MAX_GALLERY_IMAGES);\r\n                \r\n                setGalleryImages(validatedGallery);\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to load gallery images from backend:', error);\r\n          // Fallback to localStorage\r\n          const storedGallery = await storageService.getItem<string[]>(\r\n            `profile_gallery_${user.username}`,\r\n            []\r\n          );\r\n          \r\n          const validatedGallery = storedGallery\r\n            .map(url => sanitizeUrl(url))\r\n            .filter((url): url is string => url !== '' && url !== null)\r\n            .slice(0, MAX_GALLERY_IMAGES);\r\n            \r\n          setGalleryImages(validatedGallery);\r\n        }\r\n      }\r\n    };\r\n    \r\n    loadGalleryImages();\r\n  }, [user?.username, token]);\r\n\r\n  // Clear validation error when files change\r\n  useEffect(() => {\r\n    setValidationError('');\r\n  }, [selectedFiles]);\r\n\r\n  // Validate files\r\n  const validateFiles = (files: File[]): { valid: boolean; error?: string } => {\r\n    // Check total number of images\r\n    if (galleryImages.length + files.length > MAX_GALLERY_IMAGES) {\r\n      return { \r\n        valid: false, \r\n        error: `Maximum ${MAX_GALLERY_IMAGES} gallery images allowed. You have ${galleryImages.length} images.` \r\n      };\r\n    }\r\n\r\n    // Validate each file\r\n    for (const file of files) {\r\n      const validation = securityService.validateFileUpload(file, {\r\n        maxSize: MAX_FILE_SIZE,\r\n        allowedTypes: ALLOWED_IMAGE_TYPES,\r\n        allowedExtensions: ['jpg', 'jpeg', 'png', 'webp']\r\n      });\r\n\r\n      if (!validation.valid) {\r\n        return { valid: false, error: validation.error };\r\n      }\r\n    }\r\n\r\n    return { valid: true };\r\n  };\r\n\r\n  // Handle multiple file selection\r\n  const handleMultipleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (!files || files.length === 0) return;\r\n\r\n    const newFiles = Array.from(files);\r\n    \r\n    // Validate new files\r\n    const validation = validateFiles(newFiles);\r\n    if (!validation.valid) {\r\n      setValidationError(validation.error || 'Invalid files selected');\r\n      if (multipleFileInputRef.current) {\r\n        multipleFileInputRef.current.value = '';\r\n      }\r\n      return;\r\n    }\r\n\r\n    setSelectedFiles(prev => [...prev, ...newFiles]);\r\n    if (multipleFileInputRef.current) {\r\n      multipleFileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Remove selected file before upload\r\n  const removeSelectedFile = (index: number) => {\r\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Internal async upload function\r\n  const uploadGalleryImagesAsync = async () => {\r\n    if (selectedFiles.length === 0) return;\r\n\r\n    // Check rate limit\r\n    if (user?.username) {\r\n      const rateLimitResult = rateLimiter.check('IMAGE_UPLOAD', {\r\n        ...RATE_LIMITS.IMAGE_UPLOAD,\r\n        identifier: user.username\r\n      });\r\n\r\n      if (!rateLimitResult.allowed) {\r\n        setValidationError(`Too many uploads. Please wait ${rateLimitResult.waitTime} seconds.`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Final validation before upload\r\n    const validation = validateFiles(selectedFiles);\r\n    if (!validation.valid) {\r\n      setValidationError(validation.error || 'Invalid files');\r\n      return;\r\n    }\r\n\r\n    setGalleryUploading(true);\r\n    setUploadProgress(0);\r\n    setValidationError('');\r\n    \r\n    try {\r\n      // Create FormData for file upload\r\n      const formData = new FormData();\r\n      selectedFiles.forEach(file => {\r\n        formData.append('gallery', file);\r\n      });\r\n\r\n      // Start progress simulation\r\n      const progressInterval = setInterval(() => {\r\n        setUploadProgress(prev => Math.min(prev + 10, 90));\r\n      }, 200);\r\n\r\n      // Upload to backend\r\n      const response = await fetch(`${API_BASE_URL}/api/upload/gallery`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': token ? `Bearer ${token}` : '',\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      clearInterval(progressInterval);\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Upload failed');\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.data) {\r\n        // Extract URLs from response and convert relative paths to full URLs\r\n        const newGallery = (result.data.gallery || []).map((url: string) => {\r\n          if (url.startsWith('http://') || url.startsWith('https://')) {\r\n            return url;\r\n          } else if (url.startsWith('/uploads/')) {\r\n            return `${API_BASE_URL}${url}`;\r\n          } else {\r\n            return url;\r\n          }\r\n        });\r\n        \r\n        setGalleryImages(newGallery);\r\n        setSelectedFiles([]);\r\n        setUploadProgress(100);\r\n        \r\n        // Also save to localStorage as backup\r\n        if (user?.username) {\r\n          await storageService.setItem(`profile_gallery_${user.username}`, newGallery);\r\n        }\r\n        \r\n        console.log('Gallery images uploaded successfully:', result.data);\r\n      } else {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      setValidationError(`Failed to upload images: ${errorMessage}`);\r\n    } finally {\r\n      setGalleryUploading(false);\r\n      setTimeout(() => setUploadProgress(0), 1000);\r\n    }\r\n  };\r\n\r\n  // Wrapped upload function that returns void\r\n  const uploadGalleryImages = () => {\r\n    // Call async function but don't return the promise\r\n    uploadGalleryImagesAsync();\r\n  };\r\n\r\n  // Internal async remove function\r\n  const removeGalleryImageAsync = async (index: number) => {\r\n    if (index < 0 || index >= galleryImages.length) return;\r\n    \r\n    try {\r\n      // Call backend to remove image\r\n      const response = await fetch(`${API_BASE_URL}/api/upload/gallery/${index}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': token ? `Bearer ${token}` : '',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Failed to remove image');\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.data) {\r\n        // Update with gallery returned from backend, converting URLs\r\n        const updatedGallery = (result.data.gallery || []).map((url: string) => {\r\n          if (url.startsWith('http://') || url.startsWith('https://')) {\r\n            return url;\r\n          } else if (url.startsWith('/uploads/')) {\r\n            return `${API_BASE_URL}${url}`;\r\n          } else {\r\n            return url;\r\n          }\r\n        });\r\n        \r\n        setGalleryImages(updatedGallery);\r\n        \r\n        // Update localStorage\r\n        if (user?.username) {\r\n          await storageService.setItem(`profile_gallery_${user.username}`, updatedGallery);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to remove image:', error);\r\n      // Fallback to local removal\r\n      const updatedGallery = galleryImages.filter((_, i) => i !== index);\r\n      setGalleryImages(updatedGallery);\r\n      \r\n      if (user?.username) {\r\n        await storageService.setItem(`profile_gallery_${user.username}`, updatedGallery);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Wrapped remove function that returns void\r\n  const removeGalleryImage = (index: number) => {\r\n    // Call async function but don't return the promise\r\n    removeGalleryImageAsync(index);\r\n  };\r\n\r\n  // Internal async clear function\r\n  const clearAllGalleryImagesAsync = async () => {\r\n    if (window.confirm(\"Are you sure you want to remove all gallery images?\")) {\r\n      try {\r\n        // Remove all images one by one from backend\r\n        for (let i = galleryImages.length - 1; i >= 0; i--) {\r\n          await fetch(`${API_BASE_URL}/api/upload/gallery/${i}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Authorization': token ? `Bearer ${token}` : '',\r\n            },\r\n          });\r\n        }\r\n        \r\n        setGalleryImages([]);\r\n        \r\n        // Clear localStorage\r\n        if (user?.username) {\r\n          await storageService.setItem(`profile_gallery_${user.username}`, []);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to clear gallery:', error);\r\n        setGalleryImages([]);\r\n        \r\n        if (user?.username) {\r\n          await storageService.setItem(`profile_gallery_${user.username}`, []);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Wrapped clear function that returns void\r\n  const clearAllGalleryImages = () => {\r\n    // Call async function but don't return the promise\r\n    clearAllGalleryImagesAsync();\r\n  };\r\n\r\n  // Enhanced save handler that includes gallery\r\n  const handleSave = async () => {\r\n    // Create profile data object with gallery\r\n    const profileDataToSave = {\r\n      bio: profileData.bio,\r\n      profilePic: profileData.preview || profileData.profilePic,\r\n      subscriptionPrice: profileData.subscriptionPrice,\r\n      galleryImages: galleryImages.map(url => {\r\n        // Convert full URLs back to relative paths for storage\r\n        if (url.startsWith(`${API_BASE_URL}/uploads/`)) {\r\n          return url.replace(API_BASE_URL, '');\r\n        }\r\n        return url;\r\n      }),\r\n    };\r\n    \r\n    // Save profile including gallery URLs\r\n    await baseSaveProfile(profileDataToSave);\r\n    \r\n    // Also save gallery separately if needed\r\n    if (galleryImages.length > 0) {\r\n      await handleSaveWithGallery(galleryImages);\r\n    }\r\n    \r\n    return saveSuccess;\r\n  };\r\n\r\n  return {\r\n    // User\r\n    user,\r\n    \r\n    // Profile data\r\n    bio: profileData.bio,\r\n    setBio: profileData.setBio,\r\n    profilePic: profileData.profilePic,\r\n    preview: profileData.preview,\r\n    subscriptionPrice: profileData.subscriptionPrice,\r\n    setSubscriptionPrice: profileData.setSubscriptionPrice,\r\n    profileUploading: profileData.isUploading,\r\n    handleProfilePicChange: profileData.handleProfilePicChange,\r\n    removeProfilePic: profileData.removeProfilePic,\r\n    profilePicInputRef,\r\n    \r\n    // Gallery - Now returning void functions\r\n    galleryImages,\r\n    selectedFiles,\r\n    galleryUploading,\r\n    uploadProgress,\r\n    multipleFileInputRef,\r\n    handleMultipleFileChange,\r\n    removeSelectedFile,\r\n    uploadGalleryImages,  // Returns void\r\n    removeGalleryImage,   // Returns void  \r\n    clearAllGalleryImages, // Returns void\r\n    validationError,\r\n    \r\n    // Tier info\r\n    sellerTierInfo: tierData.sellerTierInfo,\r\n    userStats: tierData.userStats,\r\n    getTierProgress: tierData.getTierProgress,\r\n    getNextTier: tierData.getNextTier,\r\n    selectedTierDetails,\r\n    setSelectedTierDetails,\r\n    \r\n    // Save functionality\r\n    saveSuccess,\r\n    saveError,\r\n    isSaving,\r\n    handleSave\r\n  };\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/app/sellers/profile/page.tsx"],"sourcesContent":["// src/app/sellers/profile/page.tsx\r\n'use client';\r\n\r\nimport { useRef } from 'react';\r\nimport BanCheck from '@/components/BanCheck';\r\nimport RequireAuth from '@/components/RequireAuth';\r\nimport ProfileInfoCard from '@/components/seller-settings/ProfileInfoCard';\r\nimport TierProgressCard from '@/components/seller-settings/TierProgressCard';\r\nimport GalleryManager from '@/components/seller-settings/GalleryManager';\r\nimport TierDetailsModal from '@/components/seller-settings/modals/TierDetailsModal';\r\nimport SaveButton from '@/components/seller-settings/utils/SaveButton';\r\nimport TierDisplaySection from '@/components/seller-settings/TierDisplaySection';\r\nimport { useProfileSettings } from '@/hooks/seller-settings/useProfileSettings';\r\n\r\nexport default function SellerProfileSettingsPage() {\r\n  const profilePicInputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  const {\r\n    // User\r\n    user,\r\n    \r\n    // Profile data\r\n    bio,\r\n    setBio,\r\n    profilePic,\r\n    preview,\r\n    subscriptionPrice,\r\n    setSubscriptionPrice,\r\n    profileUploading,\r\n    handleProfilePicChange,\r\n    removeProfilePic,\r\n    \r\n    // Gallery\r\n    galleryImages,\r\n    selectedFiles,\r\n    galleryUploading,\r\n    uploadProgress,\r\n    multipleFileInputRef,\r\n    handleMultipleFileChange,\r\n    removeSelectedFile,\r\n    uploadGalleryImages,\r\n    removeGalleryImage,\r\n    clearAllGalleryImages,\r\n    \r\n    // Tier info\r\n    sellerTierInfo,\r\n    userStats,\r\n    getTierProgress,\r\n    getNextTier,\r\n    selectedTierDetails,\r\n    setSelectedTierDetails,\r\n    \r\n    // Save functionality\r\n    saveSuccess,\r\n    saveError,\r\n    isSaving,\r\n    handleSave\r\n  } = useProfileSettings();\r\n\r\n  const tierProgress = getTierProgress();\r\n  const nextTier = sellerTierInfo ? getNextTier(sellerTierInfo.tier) : 'Tease';\r\n\r\n  return (\r\n    <BanCheck>\r\n      <RequireAuth role=\"seller\">\r\n        <main className=\"min-h-screen bg-black text-white py-10 px-4\">\r\n          <div className=\"max-w-6xl mx-auto\">\r\n            <h1 className=\"text-3xl font-bold mb-2 text-[#ff950e]\">My Profile</h1>\r\n            <p className=\"text-gray-400 mb-8\">Manage your seller profile and photo gallery</p>\r\n\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n              {/* Left column - Profile info and tier progress */}\r\n              <div className=\"lg:col-span-1 space-y-6\">\r\n                <ProfileInfoCard\r\n                  username={user?.username}\r\n                  bio={bio}\r\n                  setBio={setBio}\r\n                  preview={preview}\r\n                  profilePic={profilePic}\r\n                  subscriptionPrice={subscriptionPrice}\r\n                  setSubscriptionPrice={setSubscriptionPrice}\r\n                  handleProfilePicChange={handleProfilePicChange}\r\n                  removeProfilePic={removeProfilePic}\r\n                  profilePicInputRef={profilePicInputRef}\r\n                  isUploading={profileUploading}\r\n                />\r\n\r\n                {/* Save Button with loading and error states */}\r\n                <div className=\"flex justify-center\">\r\n                  <SaveButton \r\n                    onClick={handleSave} \r\n                    showSuccess={saveSuccess}\r\n                    showError={saveError} // Now correctly passing string | undefined\r\n                    isLoading={isSaving}\r\n                  />\r\n                </div>\r\n\r\n                {sellerTierInfo && (\r\n                  <TierProgressCard\r\n                    sellerTierInfo={sellerTierInfo}\r\n                    userStats={userStats}\r\n                    tierProgress={tierProgress}\r\n                    nextTier={nextTier}\r\n                    onTierClick={setSelectedTierDetails}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              {/* Right column - Gallery */}\r\n              <div className=\"lg:col-span-2\">\r\n                <GalleryManager\r\n                  galleryImages={galleryImages}\r\n                  selectedFiles={selectedFiles}\r\n                  isUploading={galleryUploading}\r\n                  uploadProgress={uploadProgress}\r\n                  multipleFileInputRef={multipleFileInputRef}\r\n                  handleMultipleFileChange={handleMultipleFileChange}\r\n                  uploadGalleryImages={uploadGalleryImages}\r\n                  removeGalleryImage={removeGalleryImage}\r\n                  removeSelectedFile={removeSelectedFile}\r\n                  clearAllGalleryImages={clearAllGalleryImages}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tier Display Section */}\r\n            {sellerTierInfo && (\r\n              <TierDisplaySection\r\n                sellerTierInfo={sellerTierInfo}\r\n                userStats={userStats}\r\n                nextTier={nextTier}\r\n                selectedTierDetails={selectedTierDetails}\r\n                onTierSelect={setSelectedTierDetails}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Tier Details Modal */}\r\n          {selectedTierDetails && (\r\n            <TierDetailsModal\r\n              selectedTier={selectedTierDetails}\r\n              onClose={() => setSelectedTierDetails(null)}\r\n            />\r\n          )}\r\n        </main>\r\n      </RequireAuth>\r\n    </BanCheck>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;AAae,SAAS;IACtB,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAEpD,MAAM,EACJ,OAAO;IACP,IAAI,EAEJ,eAAe;IACf,GAAG,EACH,MAAM,EACN,UAAU,EACV,OAAO,EACP,iBAAiB,EACjB,oBAAoB,EACpB,gBAAgB,EAChB,sBAAsB,EACtB,gBAAgB,EAEhB,UAAU;IACV,aAAa,EACb,aAAa,EACb,gBAAgB,EAChB,cAAc,EACd,oBAAoB,EACpB,wBAAwB,EACxB,kBAAkB,EAClB,mBAAmB,EACnB,kBAAkB,EAClB,qBAAqB,EAErB,YAAY;IACZ,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAW,EACX,mBAAmB,EACnB,sBAAsB,EAEtB,qBAAqB;IACrB,WAAW,EACX,SAAS,EACT,QAAQ,EACR,UAAU,EACX,GAAG,CAAA,GAAA,wJAAA,CAAA,qBAAkB,AAAD;IAErB,MAAM,eAAe;IACrB,MAAM,WAAW,iBAAiB,YAAY,eAAe,IAAI,IAAI;IAErE,qBACE,8OAAC,8HAAA,CAAA,UAAQ;kBACP,cAAA,8OAAC,iIAAA,CAAA,UAAW;YAAC,MAAK;sBAChB,cAAA,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAyC;;;;;;0CACvD,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;0CAElC,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,2JAAA,CAAA,UAAe;gDACd,UAAU,MAAM;gDAChB,KAAK;gDACL,QAAQ;gDACR,SAAS;gDACT,YAAY;gDACZ,mBAAmB;gDACnB,sBAAsB;gDACtB,wBAAwB;gDACxB,kBAAkB;gDAClB,oBAAoB;gDACpB,aAAa;;;;;;0DAIf,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,+JAAA,CAAA,UAAU;oDACT,SAAS;oDACT,aAAa;oDACb,WAAW;oDACX,WAAW;;;;;;;;;;;4CAId,gCACC,8OAAC,4JAAA,CAAA,UAAgB;gDACf,gBAAgB;gDAChB,WAAW;gDACX,cAAc;gDACd,UAAU;gDACV,aAAa;;;;;;;;;;;;kDAMnB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,0JAAA,CAAA,UAAc;4CACb,eAAe;4CACf,eAAe;4CACf,aAAa;4CACb,gBAAgB;4CAChB,sBAAsB;4CACtB,0BAA0B;4CAC1B,qBAAqB;4CACrB,oBAAoB;4CACpB,oBAAoB;4CACpB,uBAAuB;;;;;;;;;;;;;;;;;4BAM5B,gCACC,8OAAC,8JAAA,CAAA,UAAkB;gCACjB,gBAAgB;gCAChB,WAAW;gCACX,UAAU;gCACV,qBAAqB;gCACrB,cAAc;;;;;;;;;;;;oBAMnB,qCACC,8OAAC,sKAAA,CAAA,UAAgB;wBACf,cAAc;wBACd,SAAS,IAAM,uBAAuB;;;;;;;;;;;;;;;;;;;;;;AAOpD","debugId":null}}]
}