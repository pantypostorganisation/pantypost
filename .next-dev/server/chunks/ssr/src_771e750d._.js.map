{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/RequireAuth.tsx"],"sourcesContent":["// src/components/RequireAuth.tsx\r\n'use client';\r\n\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect, useState } from 'react';\r\nimport { z } from 'zod';\r\n\r\nconst VALID_ROLES = ['buyer', 'seller', 'admin'] as const;\r\ntype ValidRole = (typeof VALID_ROLES)[number];\r\n\r\nconst RoleSchema = z.enum(VALID_ROLES);\r\n\r\nexport default function RequireAuth({\r\n  role,\r\n  children,\r\n}: {\r\n  role: ValidRole;\r\n  children: React.ReactNode;\r\n}) {\r\n  const { user, isAuthReady } = useAuth();\r\n  const router = useRouter();\r\n  const [authorized, setAuthorized] = useState(false);\r\n  const [hasChecked, setHasChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || hasChecked) return;\r\n\r\n    // Runtime validation of `role` prop (dev-only noise)\r\n    const parsed = RoleSchema.safeParse(role);\r\n    if (!parsed.success) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('[RequireAuth] Invalid role prop supplied:', role);\r\n      }\r\n      router.push('/login');\r\n      setHasChecked(true);\r\n      return;\r\n    }\r\n\r\n    const userRole = user?.role as ValidRole | undefined;\r\n\r\n    // NEW: strict role matching — no admin override for buyer/seller routes\r\n    let hasAccess = false;\r\n    if (parsed.data === 'admin') {\r\n      hasAccess = userRole === 'admin';\r\n    } else {\r\n      hasAccess = userRole === parsed.data; // admin can’t view buyer/seller pages\r\n    }\r\n\r\n    if (!user || !hasAccess) {\r\n      router.push('/login');\r\n    } else {\r\n      setAuthorized(true);\r\n    }\r\n\r\n    setHasChecked(true);\r\n  }, [isAuthReady, user, role, router, hasChecked]);\r\n\r\n  if (!isAuthReady || !hasChecked) {\r\n    return (\r\n      <div className=\"min-h-screen bg-black flex items-center justify-center\" role=\"status\" aria-label=\"Checking access\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }} />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!authorized) return null;\r\n\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,cAAc;IAAC;IAAS;IAAU;CAAQ;AAGhD,MAAM,aAAa,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;AAEX,SAAS,YAAY,EAClC,IAAI,EACJ,QAAQ,EAIT;IACC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IACpC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,eAAe,YAAY;QAEhC,qDAAqD;QACrD,MAAM,SAAS,WAAW,SAAS,CAAC;QACpC,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,wCAA4C;gBAC1C,QAAQ,IAAI,CAAC,6CAA6C;YAC5D;YACA,OAAO,IAAI,CAAC;YACZ,cAAc;YACd;QACF;QAEA,MAAM,WAAW,MAAM;QAEvB,wEAAwE;QACxE,IAAI,YAAY;QAChB,IAAI,OAAO,IAAI,KAAK,SAAS;YAC3B,YAAY,aAAa;QAC3B,OAAO;YACL,YAAY,aAAa,OAAO,IAAI,EAAE,sCAAsC;QAC9E;QAEA,IAAI,CAAC,QAAQ,CAAC,WAAW;YACvB,OAAO,IAAI,CAAC;QACd,OAAO;YACL,cAAc;QAChB;QAEA,cAAc;IAChB,GAAG;QAAC;QAAa;QAAM;QAAM;QAAQ;KAAW;IAEhD,IAAI,CAAC,eAAe,CAAC,YAAY;QAC/B,qBACE,8OAAC;YAAI,WAAU;YAAyD,MAAK;YAAS,cAAW;sBAC/F,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;kCACjG,8OAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;;;;;;;;;;;;IAIzG;IAEA,IAAI,CAAC,YAAY,OAAO;IAExB,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/ui/SecureForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { FormEvent, useState, useEffect } from 'react';\r\nimport { AlertCircle, ShieldCheck, Loader2 } from 'lucide-react';\r\nimport { getRateLimiter, getRateLimitMessage } from '@/utils/security/rate-limiter';\r\n\r\ninterface SecureFormProps {\r\n  children: React.ReactNode;\r\n  onSubmit: (e: FormEvent) => Promise<void> | void;\r\n  className?: string;\r\n  rateLimitKey?: string;\r\n  rateLimitConfig?: { maxAttempts: number; windowMs: number };\r\n  showSecurityBadge?: boolean;\r\n  csrfProtection?: boolean;\r\n  isRateLimited?: boolean;\r\n  rateLimitWaitTime?: number;\r\n}\r\n\r\n/**\r\n * Secure form wrapper with CSRF protection and rate limiting\r\n */\r\nexport const SecureForm: React.FC<SecureFormProps> = ({\r\n  children,\r\n  onSubmit,\r\n  className = '',\r\n  rateLimitKey,\r\n  rateLimitConfig,\r\n  showSecurityBadge = false,\r\n  csrfProtection = true,\r\n  isRateLimited = false,\r\n  rateLimitWaitTime = 0,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [rateLimitError, setRateLimitError] = useState<string | null>(null);\r\n  const [csrfToken, setCsrfToken] = useState<string>('');\r\n\r\n  // Initialize CSRF token\r\n  useEffect(() => {\r\n    if (csrfProtection && typeof window !== 'undefined') {\r\n      const tokenManager = new CSRFTokenManager();\r\n      const token = tokenManager.generateToken();\r\n      setCsrfToken(token);\r\n    }\r\n  }, [csrfProtection]);\r\n\r\n  // Update rate limit error when props change\r\n  useEffect(() => {\r\n    if (isRateLimited && rateLimitWaitTime > 0) {\r\n      setRateLimitError(\r\n        `Too many attempts. Please wait ${rateLimitWaitTime} seconds before trying again.`\r\n      );\r\n    } else {\r\n      setRateLimitError(null);\r\n    }\r\n  }, [isRateLimited, rateLimitWaitTime]);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Don't submit if externally rate limited\r\n    if (isRateLimited) {\r\n      return;\r\n    }\r\n\r\n    // Clear previous errors\r\n    setRateLimitError(null);\r\n\r\n    // Check rate limit if configured and not already checked externally\r\n    if (rateLimitKey && rateLimitConfig && !isRateLimited) {\r\n      const limiter = getRateLimiter();\r\n      const result = limiter.check(rateLimitKey, rateLimitConfig);\r\n\r\n      if (!result.allowed) {\r\n        setRateLimitError(getRateLimitMessage(result));\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      await onSubmit(e);\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n\r\n      // If it's a rate limit error, reset the attempt\r\n      if (rateLimitKey && error instanceof Error && error.message.includes('Rate limit')) {\r\n        const limiter = getRateLimiter();\r\n        limiter.reset(rateLimitKey);\r\n      }\r\n\r\n      throw error;\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={className} noValidate>\r\n      {/* CSRF Token (hidden) */}\r\n      {csrfProtection && csrfToken && <input type=\"hidden\" name=\"_csrf\" value={csrfToken} />}\r\n\r\n      {/* Security Badge */}\r\n      {showSecurityBadge && (\r\n        <div className=\"mb-4 flex items-center gap-2 text-xs text-gray-500\">\r\n          <ShieldCheck className=\"w-4 h-4\" />\r\n          <span>Secure form with protection against attacks</span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Rate Limit Error - only show if not handled externally */}\r\n      {rateLimitError && !isRateLimited && (\r\n        <div className=\"mb-4 p-3 bg-red-500/10 border border-red-500/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 text-sm text-red-400\">\r\n            <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{rateLimitError}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Form Content */}\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\n/**\r\n * Field wrapper for consistent styling and error handling\r\n */\r\ninterface SecureFieldWrapperProps {\r\n  children: React.ReactNode;\r\n  error?: string;\r\n  touched?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport const SecureFieldWrapper: React.FC<SecureFieldWrapperProps> = ({\r\n  children,\r\n  error,\r\n  touched,\r\n  className = '',\r\n}) => (\r\n  <div className={className}>\r\n    {children}\r\n    {touched && error && (\r\n      <div className=\"mt-1 flex items-center gap-1 text-xs text-red-400\">\r\n        <AlertCircle className=\"w-3 h-3 flex-shrink-0\" />\r\n        <span>{error}</span>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\n/**\r\n * Secure submit button with loading state\r\n */\r\ninterface SecureSubmitButtonProps {\r\n  children: React.ReactNode;\r\n  isLoading?: boolean;\r\n  isDisabled?: boolean;\r\n  className?: string;\r\n  loadingText?: string;\r\n  type?: 'submit' | 'button';\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const SecureSubmitButton: React.FC<SecureSubmitButtonProps> = ({\r\n  children,\r\n  isLoading = false,\r\n  isDisabled = false,\r\n  disabled = false,\r\n  className = '',\r\n  loadingText = 'Processing...',\r\n  type = 'submit',\r\n}) => (\r\n  <button\r\n    type={type}\r\n    disabled={isLoading || isDisabled || disabled}\r\n    className={`relative ${className} ${\r\n      isLoading || isDisabled || disabled ? 'opacity-50 cursor-not-allowed' : ''\r\n    }`}\r\n  >\r\n    {isLoading ? (\r\n      <span className=\"flex items-center justify-center gap-2\">\r\n        <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n        {loadingText}\r\n      </span>\r\n    ) : (\r\n      children\r\n    )}\r\n  </button>\r\n);\r\n\r\n/**\r\n * CSRF Token Manager for form protection\r\n */\r\nclass CSRFTokenManager {\r\n  private tokenKey = 'csrf_token';\r\n  private tokenExpiry = 60 * 60 * 1000; // 1 hour\r\n\r\n  generateToken(): string {\r\n    const token = this.createSecureToken();\r\n    const expiry = Date.now() + this.tokenExpiry;\r\n\r\n    if (typeof window !== 'undefined') {\r\n      sessionStorage.setItem(this.tokenKey, JSON.stringify({ token, expiry }));\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n  validateToken(token: string): boolean {\r\n    if (typeof window === 'undefined') return false;\r\n\r\n    try {\r\n      const stored = sessionStorage.getItem(this.tokenKey);\r\n      if (!stored) return false;\r\n\r\n      const { token: storedToken, expiry } = JSON.parse(stored);\r\n\r\n      if (Date.now() > expiry) {\r\n        sessionStorage.removeItem(this.tokenKey);\r\n        return false;\r\n      }\r\n\r\n      return token === storedToken;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private createSecureToken(): string {\r\n    const array = new Uint8Array(32);\r\n    crypto.getRandomValues(array);\r\n    return Array.from(array, (byte) => byte.toString(16).padStart(2, '0')).join('');\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/AddressConfirmationModal.tsx"],"sourcesContent":["// src/components/AddressConfirmationModal.tsx\r\n'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { X, MapPin, CheckCircle } from 'lucide-react';\r\nimport { SecureInput, SecureTextarea } from '@/components/ui/SecureInput';\r\nimport { SecureForm } from '@/components/ui/SecureForm';\r\nimport type { DeliveryAddress } from '@/types/order';\r\n\r\n// Re-export for backward compatibility\r\nexport type { DeliveryAddress };\r\n\r\ntype AddressConfirmationModalProps = {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: (address: DeliveryAddress) => void;\r\n  existingAddress?: DeliveryAddress | null;\r\n  orderId: string;\r\n};\r\n\r\n// Validation function for postal codes\r\nconst isValidPostalCode = (postalCode: string, country: string): boolean => {\r\n  const patterns: { [key: string]: RegExp } = {\r\n    'United States': /^\\d{5}(-\\d{4})?$/,\r\n    Canada: /^[A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d$/,\r\n    'United Kingdom': /^[A-Za-z]{1,2}\\d{1,2}[A-Za-z]?\\s?\\d[A-Za-z]{2}$/,\r\n    Australia: /^\\d{4}$/,\r\n    Default: /^[\\w\\s-]{3,10}$/,\r\n  };\r\n\r\n  const pattern = patterns[country] || patterns.Default;\r\n  return pattern.test(postalCode);\r\n};\r\n\r\n// Validation function for names and city/country\r\nconst isValidName = (name: string): boolean => {\r\n  const validNamePattern = /^[a-zA-Z\\s\\-'.]{2,100}$/;\r\n  return validNamePattern.test(name);\r\n};\r\n\r\nexport default function AddressConfirmationModal({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  existingAddress,\r\n  orderId,\r\n}: AddressConfirmationModalProps): React.ReactElement | null {\r\n  const [address, setAddress] = useState<DeliveryAddress>({\r\n    fullName: '',\r\n    addressLine1: '',\r\n    addressLine2: '',\r\n    city: '',\r\n    state: '',\r\n    postalCode: '',\r\n    country: '',\r\n    specialInstructions: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [touched, setTouched] = useState<Record<string, boolean>>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitSuccess, setSubmitSuccess] = useState(false);\r\n\r\n  // Load existing address if available\r\n  useEffect(() => {\r\n    if (existingAddress) {\r\n      setAddress({\r\n        fullName: existingAddress.fullName || '',\r\n        addressLine1: existingAddress.addressLine1 || '',\r\n        addressLine2: existingAddress.addressLine2 || '',\r\n        city: existingAddress.city || '',\r\n        state: existingAddress.state || '',\r\n        postalCode: existingAddress.postalCode || '',\r\n        country: existingAddress.country || '',\r\n        specialInstructions: existingAddress.specialInstructions || '',\r\n      });\r\n    }\r\n  }, [existingAddress]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    // Validate full name\r\n    if (!address.fullName.trim()) {\r\n      newErrors.fullName = 'Full name is required';\r\n    } else if (!isValidName(address.fullName)) {\r\n      newErrors.fullName = 'Please enter a valid name (letters, spaces, hyphens, and apostrophes only)';\r\n    }\r\n\r\n    // Validate address line 1\r\n    if (!address.addressLine1.trim()) {\r\n      newErrors.addressLine1 = 'Address line 1 is required';\r\n    } else if (address.addressLine1.length < 5) {\r\n      newErrors.addressLine1 = 'Address must be at least 5 characters long';\r\n    }\r\n\r\n    // Validate city\r\n    if (!address.city.trim()) {\r\n      newErrors.city = 'City is required';\r\n    } else if (!isValidName(address.city)) {\r\n      newErrors.city = 'Please enter a valid city name';\r\n    }\r\n\r\n    // Validate state/province\r\n    if (!address.state.trim()) {\r\n      newErrors.state = 'State/Province is required';\r\n    }\r\n\r\n    // Validate postal code\r\n    if (!address.postalCode.trim()) {\r\n      newErrors.postalCode = 'Postal/ZIP code is required';\r\n    } else if (!isValidPostalCode(address.postalCode, address.country)) {\r\n      newErrors.postalCode = 'Please enter a valid postal/ZIP code for your country';\r\n    }\r\n\r\n    // Validate country\r\n    if (!address.country.trim()) {\r\n      newErrors.country = 'Country is required';\r\n    } else if (!isValidName(address.country)) {\r\n      newErrors.country = 'Please enter a valid country name';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    // Mark all fields as touched\r\n    setTouched({\r\n      fullName: true,\r\n      addressLine1: true,\r\n      city: true,\r\n      state: true,\r\n      postalCode: true,\r\n      country: true,\r\n    });\r\n\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      setIsSubmitting(true);\r\n\r\n      // Create address object for submission (SecureInput already sanitizes)\r\n      const submissionAddress: DeliveryAddress = {\r\n        fullName: address.fullName,\r\n        addressLine1: address.addressLine1,\r\n        addressLine2: address.addressLine2 || undefined,\r\n        city: address.city,\r\n        state: address.state,\r\n        postalCode: address.postalCode,\r\n        country: address.country,\r\n        specialInstructions: address.specialInstructions || undefined,\r\n      };\r\n\r\n      // Simulate a slight delay for better UX\r\n      setTimeout(() => {\r\n        onConfirm(submissionAddress);\r\n        setSubmitSuccess(true);\r\n\r\n        setTimeout(() => {\r\n          onClose();\r\n          setIsSubmitting(false);\r\n          setSubmitSuccess(false);\r\n          setTouched({});\r\n        }, 1000);\r\n      }, 800);\r\n    }\r\n  };\r\n\r\n  const handleChange =\r\n    (field: keyof DeliveryAddress) =>\r\n    (value: string): void => {\r\n      setAddress((prev) => ({\r\n        ...prev,\r\n        [field]: value,\r\n      }));\r\n\r\n      // Clear error for this field if it exists\r\n      if (errors[field as string]) {\r\n        setErrors((prev) => {\r\n          const newErrors = { ...prev };\r\n          delete newErrors[field as string];\r\n          return newErrors;\r\n        });\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50 p-4\">\r\n      <div className=\"bg-[#1a1a1a] rounded-xl w-full max-w-lg shadow-2xl p-6 border border-gray-800 max-h-[90vh] overflow-y-auto\">\r\n        {submitSuccess ? (\r\n          <div className=\"text-center py-10\">\r\n            <CheckCircle size={64} className=\"text-green-500 mx-auto mb-4\" />\r\n            <h2 className=\"text-2xl font-bold text-white mb-2\">Address Confirmed!</h2>\r\n            <p className=\"text-gray-400\">Your delivery information has been saved.</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl font-bold text-white flex items-center\">\r\n                <MapPin className=\"mr-2 text-[#ff950e]\" />\r\n                Confirm Delivery Address\r\n              </h2>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-white transition-colors\"\r\n                aria-label=\"Close modal\"\r\n              >\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n\r\n            <SecureForm\r\n              onSubmit={handleSubmit}\r\n              rateLimitKey=\"address_confirmation\"\r\n              rateLimitConfig={{ maxAttempts: 10, windowMs: 60 * 1000 }}\r\n            >\r\n              <div className=\"space-y-4\">\r\n                {/* Full Name */}\r\n                <SecureInput\r\n                  label=\"Full Name\"\r\n                  type=\"text\"\r\n                  value={address.fullName}\r\n                  onChange={handleChange('fullName')}\r\n                  onBlur={() => setTouched((prev) => ({ ...prev, fullName: true }))}\r\n                  error={errors.fullName}\r\n                  touched={touched.fullName}\r\n                  placeholder=\"John Doe\"\r\n                  maxLength={100}\r\n                  required\r\n                />\r\n\r\n                {/* Address Line 1 */}\r\n                <SecureInput\r\n                  label=\"Address Line 1\"\r\n                  type=\"text\"\r\n                  value={address.addressLine1}\r\n                  onChange={handleChange('addressLine1')}\r\n                  onBlur={() => setTouched((prev) => ({ ...prev, addressLine1: true }))}\r\n                  error={errors.addressLine1}\r\n                  touched={touched.addressLine1}\r\n                  placeholder=\"123 Main Street\"\r\n                  maxLength={200}\r\n                  required\r\n                />\r\n\r\n                {/* Address Line 2 */}\r\n                <SecureInput\r\n                  label=\"Address Line 2\"\r\n                  type=\"text\"\r\n                  value={address.addressLine2 || ''}\r\n                  onChange={handleChange('addressLine2')}\r\n                  placeholder=\"Apartment, suite, etc. (optional)\"\r\n                  maxLength={200}\r\n                />\r\n\r\n                {/* City and State */}\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                  <SecureInput\r\n                    label=\"City\"\r\n                    type=\"text\"\r\n                    value={address.city}\r\n                    onChange={handleChange('city')}\r\n                    onBlur={() => setTouched((prev) => ({ ...prev, city: true }))}\r\n                    error={errors.city}\r\n                    touched={touched.city}\r\n                    placeholder=\"New York\"\r\n                    maxLength={100}\r\n                    required\r\n                  />\r\n\r\n                  <SecureInput\r\n                    label=\"State/Province\"\r\n                    type=\"text\"\r\n                    value={address.state}\r\n                    onChange={handleChange('state')}\r\n                    onBlur={() => setTouched((prev) => ({ ...prev, state: true }))}\r\n                    error={errors.state}\r\n                    touched={touched.state}\r\n                    placeholder=\"NY\"\r\n                    maxLength={100}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Postal Code and Country */}\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                  <SecureInput\r\n                    label=\"Postal/ZIP Code\"\r\n                    type=\"text\"\r\n                    value={address.postalCode}\r\n                    onChange={handleChange('postalCode')}\r\n                    onBlur={() => setTouched((prev) => ({ ...prev, postalCode: true }))}\r\n                    error={errors.postalCode}\r\n                    touched={touched.postalCode}\r\n                    placeholder=\"10001\"\r\n                    maxLength={20}\r\n                    required\r\n                  />\r\n\r\n                  <SecureInput\r\n                    label=\"Country\"\r\n                    type=\"text\"\r\n                    value={address.country}\r\n                    onChange={handleChange('country')}\r\n                    onBlur={() => setTouched((prev) => ({ ...prev, country: true }))}\r\n                    error={errors.country}\r\n                    touched={touched.country}\r\n                    placeholder=\"United States\"\r\n                    maxLength={100}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Special Instructions */}\r\n                <SecureTextarea\r\n                  label=\"Special Instructions\"\r\n                  value={address.specialInstructions || ''}\r\n                  onChange={handleChange('specialInstructions')}\r\n                  className=\"w-full p-3 rounded-lg bg-[#222] border border-gray-700 text-white focus:outline-none focus:ring-1 focus:ring-[#ff950e] h-20 resize-none\"\r\n                  placeholder=\"Delivery instructions, gate codes, etc.\"\r\n                  maxLength={500}\r\n                  characterCount={true}\r\n                  helpText=\"Optional\"\r\n                />\r\n\r\n                <div className=\"mt-6 flex flex-col-reverse sm:flex-row sm:justify-end gap-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                    className=\"px-5 py-2.5 bg-[#333] text-white rounded-lg hover:bg-[#444] transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className=\"px-5 py-2.5 bg-[#ff950e] text-black font-bold rounded-lg hover:bg-[#e88800] transition-colors flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <>\r\n                        <div className=\"w-4 h-4 border-2 border-black border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                        Processing...\r\n                      </>\r\n                    ) : (\r\n                      'Confirm Address'\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </SecureForm>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller/orders/OrderStats.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { Gavel, Settings, ShoppingBag } from 'lucide-react';\r\n\r\ninterface OrderStatsProps {\r\n  auctionCount: number;\r\n  customRequestCount: number;\r\n  standardCount: number;\r\n}\r\n\r\nexport default function OrderStats({ auctionCount, customRequestCount, standardCount }: OrderStatsProps) {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n      {/* Auction Orders */}\r\n      <div className=\"bg-gradient-to-br from-purple-900/20 to-purple-800/10 border border-purple-500/30 rounded-xl p-6\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <div className=\"bg-purple-600/20 p-3 rounded-lg\">\r\n            <Gavel className=\"w-6 h-6 text-purple-400\" />\r\n          </div>\r\n          <span className=\"text-3xl font-bold text-purple-300\">{auctionCount}</span>\r\n        </div>\r\n        <h3 className=\"text-purple-200 font-semibold\">Auction Orders</h3>\r\n        <p className=\"text-purple-300/70 text-sm mt-1\">Won through bidding</p>\r\n      </div>\r\n\r\n      {/* Custom Requests */}\r\n      <div className=\"bg-gradient-to-br from-blue-900/20 to-cyan-800/10 border border-blue-500/30 rounded-xl p-6\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <div className=\"bg-blue-600/20 p-3 rounded-lg\">\r\n            <Settings className=\"w-6 h-6 text-blue-400\" />\r\n          </div>\r\n          <span className=\"text-3xl font-bold text-blue-300\">{customRequestCount}</span>\r\n        </div>\r\n        <h3 className=\"text-blue-200 font-semibold\">Custom Requests</h3>\r\n        <p className=\"text-blue-300/70 text-sm mt-1\">Special orders</p>\r\n      </div>\r\n\r\n      {/* Direct Sales */}\r\n      <div className=\"bg-gradient-to-br from-[#ff950e]/20 to-[#e0850d]/10 border border-[#ff950e]/30 rounded-xl p-6\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <div className=\"bg-[#ff950e]/20 p-3 rounded-lg\">\r\n            <ShoppingBag className=\"w-6 h-6 text-[#ff950e]\" />\r\n          </div>\r\n          <span className=\"text-3xl font-bold text-[#ff950e]\">{standardCount}</span>\r\n        </div>\r\n        <h3 className=\"text-orange-200 font-semibold\">Direct Sales</h3>\r\n        <p className=\"text-orange-300/70 text-sm mt-1\">Standard purchases</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AAHA;;;AAWe,SAAS,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,aAAa,EAAmB;IACrG,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;;;;;;0CAEnB,8OAAC;gCAAK,WAAU;0CAAsC;;;;;;;;;;;;kCAExD,8OAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,8OAAC;wBAAE,WAAU;kCAAkC;;;;;;;;;;;;0BAIjD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;;;;;0CAEtB,8OAAC;gCAAK,WAAU;0CAAoC;;;;;;;;;;;;kCAEtD,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAI/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,oNAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;;;;;;0CAEzB,8OAAC;gCAAK,WAAU;0CAAqC;;;;;;;;;;;;kCAEvD,8OAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,8OAAC;wBAAE,WAAU;kCAAkC;;;;;;;;;;;;;;;;;;AAIvD","debugId":null}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller/orders/OrderCard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\nimport { Order } from '@/context/WalletContext';\r\nimport {\r\n  User,\r\n  Gavel,\r\n  MapPin,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  Clock,\r\n  Package,\r\n  Truck,\r\n  AlertTriangle,\r\n  Star,\r\n  Settings,\r\n  MessageCircle,\r\n  ShoppingBag,\r\n} from 'lucide-react';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\nimport { SecureMessageDisplay } from '@/components/ui/SecureMessageDisplay';\r\n\r\ninterface OrderCardProps {\r\n  order: Order;\r\n  type: 'auction' | 'direct' | 'custom';\r\n  isExpanded: boolean;\r\n  onToggleExpand: () => void;\r\n  renderAddressBlock: (order: Order) => React.ReactNode;\r\n  renderShippingControls: (order: Order) => React.ReactNode;\r\n  getShippingStatusBadge: (status?: string) => React.ReactNode;\r\n}\r\n\r\nexport default function OrderCard({\r\n  order,\r\n  type,\r\n  isExpanded,\r\n  onToggleExpand,\r\n  renderAddressBlock,\r\n  renderShippingControls,\r\n  getShippingStatusBadge,\r\n}: OrderCardProps) {\r\n  const isAuction = type === 'auction';\r\n  const isCustom = type === 'custom';\r\n\r\n  let borderStyle = 'border-gray-700 hover:border-[#ff950e]/50';\r\n  let gradientStyle = 'from-gray-900/50 via-black/30 to-gray-800/50';\r\n  let badgeContent: React.ReactNode = null;\r\n\r\n  if (isAuction) {\r\n    borderStyle = 'border-purple-500/30 hover:border-purple-400/50';\r\n    gradientStyle = 'from-purple-900/10 via-gray-900/50 to-blue-900/10';\r\n    badgeContent = (\r\n      <span className=\"absolute -top-2 -right-2 bg-gradient-to-r from-purple-500 to-purple-400 text-white text-xs px-2 py-1 rounded-full font-bold shadow-lg flex items-center\">\r\n        <Gavel className=\"w-3 h-3 mr-1\" />\r\n        Auction\r\n      </span>\r\n    );\r\n  } else if (isCustom) {\r\n    borderStyle = 'border-blue-500/30 hover:border-blue-400/50';\r\n    gradientStyle = 'from-blue-900/10 via-gray-900/50 to-cyan-900/10';\r\n    badgeContent = (\r\n      <span className=\"absolute -top-2 -right-2 bg-gradient-to-r from-blue-500 to-cyan-400 text-white text-xs px-2 py-1 rounded-full font-bold shadow-lg flex items-center\">\r\n        <Settings className=\"w-3 h-3 mr-1\" />\r\n        Custom\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const sanitizedTitle = sanitizeStrict(order.title);\r\n  const sanitizedBuyer = sanitizeStrict(order.buyer);\r\n  const buyerParam = encodeURIComponent(order.buyer);\r\n\r\n  return (\r\n    <li\r\n      key={order.id + order.date}\r\n      className={`relative border rounded-2xl bg-gradient-to-br overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-300 ${gradientStyle} ${borderStyle}`}\r\n    >\r\n      {/* Order Header */}\r\n      <div className=\"p-6\">\r\n        <div className=\"flex flex-col lg:flex-row gap-6 items-start\">\r\n          {/* Product Image - Hide for custom requests */}\r\n          {!isCustom && (\r\n            <div className=\"relative\">\r\n              <img\r\n                src={order.imageUrl || '/default-image.jpg'}\r\n                alt={sanitizedTitle}\r\n                className=\"w-24 h-24 object-cover rounded-xl border-2 border-gray-600 shadow-lg\"\r\n                onError={(e) => {\r\n                  (e.target as HTMLImageElement).src = '/default-image.jpg';\r\n                }}\r\n              />\r\n              {badgeContent}\r\n            </div>\r\n          )}\r\n\r\n          {/* For custom requests, show badge without image */}\r\n          {isCustom && badgeContent && (\r\n            <div className=\"relative w-24 h-24 bg-gradient-to-br from-blue-900/30 to-cyan-900/30 rounded-xl border-2 border-blue-500/30 flex items-center justify-center\">\r\n              <Settings className=\"w-8 h-8 text-blue-400\" />\r\n              {badgeContent}\r\n            </div>\r\n          )}\r\n\r\n          {/* Order Details */}\r\n          <div className=\"flex-1 min-w-0\">\r\n            <div className=\"flex items-center gap-3 mb-3\">\r\n              <h3 className=\"font-bold text-xl text-white truncate\">{sanitizedTitle}</h3>\r\n              {isAuction && <Star className=\"w-5 h-5 text-purple-400 flex-shrink-0\" />}\r\n              {isCustom && <Settings className=\"w-5 h-5 text-blue-400 flex-shrink-0\" />}\r\n            </div>\r\n\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 mb-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <User className=\"w-4 h-4 text-gray-400\" />\r\n                <span className=\"text-gray-300\">Buyer:</span>\r\n                <span className=\"font-semibold text-white\">{sanitizedBuyer}</span>\r\n                <Link\r\n                  href={`/sellers/messages?thread=${buyerParam}`}\r\n                  className=\"inline-flex items-center gap-1 bg-blue-600 hover:bg-blue-500 text-white font-bold px-3 py-1.5 rounded-lg text-xs transition-all shadow-lg hover:shadow-blue-500/25\"\r\n                >\r\n                  <MessageCircle className=\"w-3 h-3\" />\r\n                  Message\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-sm text-gray-400 mb-4\">\r\n              {isAuction && 'Won on: '}\r\n              {isCustom && 'Requested on: '}\r\n              {!isAuction && !isCustom && 'Sold on: '}\r\n              <span className=\"text-gray-300 font-medium\">{new Date(order.date).toLocaleDateString()}</span>\r\n            </div>\r\n\r\n            <div className=\"flex flex-wrap items-center gap-4\">\r\n              {isAuction && (\r\n                <div className=\"bg-purple-900/30 px-4 py-2 rounded-lg border border-purple-700/50\">\r\n                  <span className=\"text-purple-300 text-sm\">Winning bid:</span>\r\n                  <span className=\"text-purple-200 font-bold text-lg ml-2\">\r\n                    ${order.finalBid?.toFixed(2) || order.price.toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {isCustom && (\r\n                <div className=\"bg-blue-900/30 px-4 py-2 rounded-lg border border-blue-700/50\">\r\n                  <span className=\"text-blue-300 text-sm\">Agreed price:</span>\r\n                  <span className=\"text-blue-200 font-bold text-lg ml-2\">\r\n                    ${order.price.toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {!isAuction && !isCustom && (\r\n                <div className=\"bg-[#ff950e]/10 px-4 py-2 rounded-lg border border-[#ff950e]/30\">\r\n                  <span className=\"text-[#ff950e] text-sm\">Listed price:</span>\r\n                  <span className=\"text-[#ff950e] font-bold text-lg ml-2\">\r\n                    ${order.price.toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Show custom request details */}\r\n            {isCustom && order.originalRequestId && (\r\n              <div className=\"mt-4 p-3 bg-blue-900/20 rounded-lg border border-blue-700/50\">\r\n                <div className=\"text-blue-300 text-sm font-medium mb-1\">Custom Request Details:</div>\r\n                <div className=\"text-blue-200 text-sm\">\r\n                  <SecureMessageDisplay content={order.description || ''} allowBasicFormatting={false} />\r\n                </div>\r\n                {order.tags && order.tags.length > 0 && (\r\n                  <div className=\"flex flex-wrap gap-1 mt-2\">\r\n                    {order.tags.map((tag: string, idx: number) => (\r\n                      <span\r\n                        key={idx}\r\n                        className=\"bg-blue-800/30 text-blue-200 text-xs px-2 py-0.5 rounded border border-blue-600/50\"\r\n                      >\r\n                        {sanitizeStrict(tag)}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Status & Actions */}\r\n          <div className=\"flex flex-col items-end gap-4\">\r\n            {getShippingStatusBadge(order.shippingStatus)}\r\n\r\n            {order.deliveryAddress ? (\r\n              <div className=\"flex items-center gap-2 bg-green-900/30 px-3 py-2 rounded-lg border border-green-700/50\">\r\n                <MapPin className=\"w-4 h-4 text-green-400\" />\r\n                <span className=\"text-green-300 text-sm font-medium\">Address provided</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center gap-2 bg-yellow-900/30 px-3 py-2 rounded-lg border border-yellow-700/50\">\r\n                <AlertTriangle className=\"w-4 h-4 text-yellow-400\" />\r\n                <span className=\"text-yellow-300 text-sm font-medium\">No address yet</span>\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              className={`flex items-center gap-2 font-semibold px-4 py-2 rounded-lg transition-all text-sm ${\r\n                isAuction\r\n                  ? 'text-purple-300 bg-purple-900/30 hover:bg-purple-800/50 border border-purple-700/50 hover:border-purple-600'\r\n                  : isCustom\r\n                  ? 'text-blue-300 bg-blue-900/30 hover:bg-blue-800/50 border border-blue-700/50 hover:border-blue-600'\r\n                  : 'text-[#ff950e] bg-[#ff950e]/10 hover:bg-[#ff950e]/20 border border-[#ff950e]/30 hover:border-[#ff950e]/50'\r\n              }`}\r\n              onClick={onToggleExpand}\r\n            >\r\n              {isExpanded ? (\r\n                <>\r\n                  <ChevronUp className=\"w-4 h-4\" />\r\n                  Hide Details\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ChevronDown className=\"w-4 h-4\" />\r\n                  Show Details\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Expanded Content */}\r\n      {isExpanded && (\r\n        <div className=\"border-t border-gray-700 bg-black/20 p-6\">\r\n          {renderAddressBlock(order)}\r\n          {renderShippingControls(order)}\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1516, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller/orders/OrdersSection.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { Order } from '@/context/WalletContext';\r\nimport OrderCard from './OrderCard';\r\nimport { ShoppingBag } from 'lucide-react';\r\n\r\ninterface OrdersSectionProps {\r\n  title: string;\r\n  icon: React.ElementType;\r\n  iconColor: string;\r\n  orders: Order[];\r\n  type: 'auction' | 'direct' | 'custom';\r\n  expandedOrder: string | null;\r\n  onToggleExpand: (orderId: string) => void;\r\n  renderAddressBlock: (order: Order) => React.ReactNode;\r\n  renderShippingControls: (order: Order) => React.ReactNode;\r\n  getShippingStatusBadge: (status?: string) => React.ReactNode;\r\n  showEmptyState?: boolean;\r\n}\r\n\r\nexport default function OrdersSection({\r\n  title,\r\n  icon: Icon,\r\n  iconColor,\r\n  orders,\r\n  type,\r\n  expandedOrder,\r\n  onToggleExpand,\r\n  renderAddressBlock,\r\n  renderShippingControls,\r\n  getShippingStatusBadge,\r\n  showEmptyState = false,\r\n}: OrdersSectionProps) {\r\n  if (orders.length === 0 && !showEmptyState) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"mb-12\">\r\n      <h2 className=\"text-2xl font-bold mb-6 flex items-center text-white\">\r\n        <div className={`bg-gradient-to-r ${iconColor} p-2 rounded-lg mr-3 shadow-lg`}>\r\n          <Icon className=\"w-6 h-6 text-white\" />\r\n        </div>\r\n        {title} ({orders.length})\r\n      </h2>\r\n\r\n      {orders.length === 0 && showEmptyState ? (\r\n        <div className=\"text-center py-16 bg-gray-900/30 rounded-2xl border border-gray-700\">\r\n          <ShoppingBag className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\r\n          <p className=\"text-gray-400 text-xl mb-2\">No direct sales to fulfill yet</p>\r\n          <p className=\"text-gray-500\">Orders will appear here when buyers purchase your items</p>\r\n        </div>\r\n      ) : (\r\n        <ul className=\"space-y-6\">\r\n          {orders.map((order, index) => (\r\n            <OrderCard\r\n              key={order.id || `${type}-order-${index}`}\r\n              order={order}\r\n              type={type}\r\n              isExpanded={expandedOrder === order.id}\r\n              onToggleExpand={() => onToggleExpand(order.id)}\r\n              renderAddressBlock={renderAddressBlock}\r\n              renderShippingControls={renderShippingControls}\r\n              getShippingStatusBadge={getShippingStatusBadge}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AACA;AALA;;;;AAqBe,SAAS,cAAc,EACpC,KAAK,EACL,MAAM,IAAI,EACV,SAAS,EACT,MAAM,EACN,IAAI,EACJ,aAAa,EACb,cAAc,EACd,kBAAkB,EAClB,sBAAsB,EACtB,sBAAsB,EACtB,iBAAiB,KAAK,EACH;IACnB,IAAI,OAAO,MAAM,KAAK,KAAK,CAAC,gBAAgB;QAC1C,OAAO;IACT;IAEA,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;;kCACZ,8OAAC;wBAAI,WAAW,CAAC,iBAAiB,EAAE,UAAU,8BAA8B,CAAC;kCAC3E,cAAA,8OAAC;4BAAK,WAAU;;;;;;;;;;;oBAEjB;oBAAM;oBAAG,OAAO,MAAM;oBAAC;;;;;;;YAGzB,OAAO,MAAM,KAAK,KAAK,+BACtB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;kCAC1C,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;qCAG/B,8OAAC;gBAAG,WAAU;0BACX,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC,mJAAA,CAAA,UAAS;wBAER,OAAO;wBACP,MAAM;wBACN,YAAY,kBAAkB,MAAM,EAAE;wBACtC,gBAAgB,IAAM,eAAe,MAAM,EAAE;wBAC7C,oBAAoB;wBACpB,wBAAwB;wBACxB,wBAAwB;uBAPnB,MAAM,EAAE,IAAI,GAAG,KAAK,OAAO,EAAE,OAAO;;;;;;;;;;;;;;;;AAcvD","debugId":null}},
    {"offset": {"line": 1622, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller/orders/AddressDisplay.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\nimport type { Order } from '@/context/WalletContext';\r\nimport {\r\n  AlertTriangle,\r\n  Copy,\r\n  Check,\r\n  FileText,\r\n  ShieldAlert,\r\n  MapPin,\r\n  MessageCircle,\r\n} from 'lucide-react';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\n\r\ninterface AddressDisplayProps {\r\n  order: Order;\r\n  onCopyAddress: (address: NonNullable<Order['deliveryAddress']>) => void;\r\n  copiedText: string | null;\r\n  getShippingLabel: (order: Order) => string;\r\n}\r\n\r\nexport default function AddressDisplay({\r\n  order,\r\n  onCopyAddress,\r\n  copiedText,\r\n  getShippingLabel,\r\n}: AddressDisplayProps) {\r\n  const buyerParam = encodeURIComponent(order.buyer);\r\n\r\n  if (!order.deliveryAddress) {\r\n    return (\r\n      <div className=\"mt-4 py-4 px-6 bg-gradient-to-r from-yellow-900/20 to-orange-900/20 border border-yellow-500/30 rounded-xl flex items-start\">\r\n        <AlertTriangle className=\"w-6 h-6 text-yellow-400 mr-3 flex-shrink-0 mt-1\" />\r\n        <div className=\"flex-1\">\r\n          <p className=\"text-yellow-200 font-semibold text-base mb-2\">Waiting for delivery address</p>\r\n          <p className=\"text-yellow-300/80 text-sm mb-3\">\r\n            The buyer hasn&apos;t provided their shipping address yet. You can message them to request it.\r\n          </p>\r\n          <Link\r\n            href={`/sellers/messages?thread=${buyerParam}`}\r\n            className=\"inline-flex items-center gap-2 bg-gradient-to-r from-[#ff950e] to-[#e0850d] hover:from-[#e0850d] hover:to-[#ff950e] text-black font-bold px-4 py-2 rounded-lg transition-all text-sm shadow-lg hover:shadow-[#ff950e]/25\"\r\n          >\r\n            <MessageCircle className=\"w-4 h-4\" />\r\n            Message {sanitizeStrict(order.buyer)}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const address = order.deliveryAddress;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-4 border border-gray-700 rounded-xl overflow-hidden bg-gradient-to-r from-gray-800/50 to-gray-900/50\">\r\n        <div className=\"bg-gradient-to-r from-[#ff950e]/20 to-[#e0850d]/20 px-6 py-4 flex justify-between items-center border-b border-gray-700\">\r\n          <div className=\"flex items-center\">\r\n            <MapPin className=\"w-5 h-5 text-[#ff950e] mr-2\" />\r\n            <h4 className=\"font-semibold text-white text-base\">📦 Shipping Address</h4>\r\n          </div>\r\n          <button\r\n            onClick={() => onCopyAddress(address)}\r\n            className=\"bg-gradient-to-r from-[#ff950e] to-[#e0850d] hover:from-[#e0850d] hover:to-[#ff950e] text-black text-sm font-bold flex items-center px-4 py-2 rounded-lg transition-all shadow-lg hover:shadow-[#ff950e]/25\"\r\n          >\r\n            {copiedText === 'address' ? (\r\n              <>\r\n                <Check className=\"w-4 h-4 mr-2\" />\r\n                Copied!\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Copy className=\"w-4 h-4 mr-2\" />\r\n                Copy Address\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"p-6 bg-gradient-to-br from-gray-800/30 to-gray-900/30\">\r\n          <div className=\"font-bold text-lg text-white mb-1\">{sanitizeStrict(address.fullName)}</div>\r\n          <div className=\"text-gray-300 text-base leading-relaxed\">\r\n            <div>{sanitizeStrict(address.addressLine1)}</div>\r\n            {address.addressLine2 && <div>{sanitizeStrict(address.addressLine2)}</div>}\r\n            <div>\r\n              {sanitizeStrict(address.city)}, {sanitizeStrict(address.state)} {sanitizeStrict(address.postalCode)}\r\n            </div>\r\n            <div className=\"font-medium\">{sanitizeStrict(address.country)}</div>\r\n          </div>\r\n          {address.specialInstructions && (\r\n            <div className=\"mt-4 pt-4 border-t border-gray-600\">\r\n              <div className=\"text-sm text-[#ff950e] font-semibold mb-2\">Special Instructions:</div>\r\n              <p className=\"text-gray-300 bg-black/20 p-3 rounded-lg border border-gray-600 whitespace-pre-line\">\r\n                {sanitizeStrict(address.specialInstructions)}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Shipping Label Section */}\r\n      <div className=\"mt-6 pt-6 border-t border-gray-700\">\r\n        <h4 className=\"font-semibold text-white text-lg flex items-center mb-4\">\r\n          <FileText className=\"w-5 h-5 mr-2 text-[#ff950e]\" />\r\n          Shipping Label\r\n        </h4>\r\n\r\n        {/* Enhanced Warning */}\r\n        <div className=\"bg-gradient-to-r from-red-900/50 to-red-800/50 border-2 border-red-500 rounded-xl p-4 mb-4 flex items-start\">\r\n          <ShieldAlert className=\"w-6 h-6 text-red-400 mr-3 flex-shrink-0 mt-1\" />\r\n          <div>\r\n            <p className=\"text-red-200 font-bold text-sm uppercase tracking-wide mb-2\">\r\n              PRIVACY WARNING - NO RETURN ADDRESS\r\n            </p>\r\n            <p className=\"text-red-300 text-sm\">\r\n              For your safety and privacy, <strong>never include your personal address</strong> on any package.\r\n              Use a PO Box or shipping service if a return address is required.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-800/50 p-6 rounded-xl border border-gray-600 font-mono text-base text-gray-100 whitespace-pre-line shadow-inner\">\r\n          {getShippingLabel(order)}\r\n        </div>\r\n        <p className=\"text-sm text-gray-400 mt-3 flex items-center\">\r\n          <Copy className=\"w-4 h-4 mr-2\" />\r\n          Copy the text above to write on your shipping label\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1974, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/components/seller/orders/ShippingControls.tsx"],"sourcesContent":["// src/components/seller/orders/ShippingControls.tsx\r\n'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Order } from '@/context/WalletContext';\r\nimport { Truck, Package, Clock, CheckCircle } from 'lucide-react';\r\n\r\ninterface ShippingControlsProps {\r\n  order: Order;\r\n  onStatusChange: (orderId: string, status: 'pending' | 'processing' | 'shipped') => void;\r\n}\r\n\r\nexport default function ShippingControls({ order, onStatusChange }: ShippingControlsProps) {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [selectedStatus, setSelectedStatus] = useState<string | null>(null);\r\n\r\n  if (!order.deliveryAddress) return null;\r\n\r\n  const handleStatusChange = async (status: 'pending' | 'processing' | 'shipped') => {\r\n    setIsUpdating(true);\r\n    setSelectedStatus(status);\r\n    \r\n    try {\r\n      await onStatusChange(order.id, status);\r\n      \r\n      // Show success feedback\r\n      setTimeout(() => {\r\n        setSelectedStatus(null);\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('[ShippingControls] Error updating status:', error);\r\n      setSelectedStatus(null);\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  const getStatusButton = (\r\n    status: 'pending' | 'processing' | 'shipped',\r\n    icon: React.ReactNode,\r\n    label: string,\r\n    activeClass: string,\r\n    inactiveClass: string\r\n  ) => {\r\n    const isActive = order.shippingStatus === status;\r\n    const isSelected = selectedStatus === status;\r\n    \r\n    return (\r\n      <button\r\n        onClick={() => handleStatusChange(status)}\r\n        disabled={isUpdating || isActive}\r\n        className={`\r\n          px-4 py-2 rounded-lg text-sm font-bold transition-all\r\n          ${isActive || isSelected\r\n            ? activeClass\r\n            : inactiveClass\r\n          }\r\n          ${isUpdating && !isSelected ? 'opacity-50 cursor-not-allowed' : ''}\r\n          ${isActive ? 'cursor-default' : ''}\r\n        `}\r\n      >\r\n        <span className=\"flex items-center gap-2\">\r\n          {icon}\r\n          {label}\r\n          {isSelected && isUpdating && (\r\n            <span className=\"inline-block animate-spin rounded-full h-3 w-3 border-b-2 border-current\"></span>\r\n          )}\r\n        </span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6 border-t border-gray-700 pt-6\">\r\n      <div className=\"flex flex-col lg:flex-row lg:justify-between lg:items-center gap-4\">\r\n        <h4 className=\"font-semibold text-white text-lg flex items-center\">\r\n          <Truck className=\"w-5 h-5 mr-2 text-[#ff950e]\" />\r\n          Update Shipping Status\r\n        </h4>\r\n        <div className=\"flex flex-wrap gap-3\">\r\n          {getStatusButton(\r\n            'pending',\r\n            <Clock className=\"w-4 h-4\" />,\r\n            'Pending',\r\n            'bg-gradient-to-r from-yellow-500 to-yellow-400 text-black shadow-lg',\r\n            'bg-gray-700 text-gray-300 hover:bg-gray-600 border border-gray-600'\r\n          )}\r\n          \r\n          {getStatusButton(\r\n            'processing',\r\n            <Package className=\"w-4 h-4\" />,\r\n            'Processing',\r\n            'bg-gradient-to-r from-blue-500 to-blue-400 text-white shadow-lg',\r\n            'bg-gray-700 text-gray-300 hover:bg-gray-600 border border-gray-600'\r\n          )}\r\n          \r\n          {getStatusButton(\r\n            'shipped',\r\n            <CheckCircle className=\"w-4 h-4\" />,\r\n            'Shipped',\r\n            'bg-gradient-to-r from-green-500 to-green-400 text-white shadow-lg',\r\n            'bg-gray-700 text-gray-300 hover:bg-gray-600 border border-gray-600'\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Status change feedback */}\r\n      {selectedStatus && !isUpdating && (\r\n        <div className=\"mt-4 p-3 bg-green-900/30 border border-green-500/50 rounded-lg text-green-300 text-sm\">\r\n          ✅ Shipping status updated successfully\r\n        </div>\r\n      )}\r\n      \r\n      {/* Helpful tips based on current status */}\r\n      {order.shippingStatus === 'pending' && (\r\n        <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-500/30 rounded-lg text-yellow-300 text-sm\">\r\n          💡 Update to \"Processing\" when you start preparing the order\r\n        </div>\r\n      )}\r\n      \r\n      {order.shippingStatus === 'processing' && (\r\n        <div className=\"mt-4 p-3 bg-blue-900/20 border border-blue-500/30 rounded-lg text-blue-300 text-sm\">\r\n          📦 Update to \"Shipped\" once you've sent the package\r\n        </div>\r\n      )}\r\n      \r\n      {order.shippingStatus === 'shipped' && (\r\n        <div className=\"mt-4 p-3 bg-green-900/20 border border-green-500/30 rounded-lg text-green-300 text-sm\">\r\n          ✅ Order has been shipped. The buyer has been notified.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,oDAAoD;;;;;AAGpD;AAEA;AAAA;AAAA;AAAA;AAJA;;;;AAWe,SAAS,iBAAiB,EAAE,KAAK,EAAE,cAAc,EAAyB;IACvF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpE,IAAI,CAAC,MAAM,eAAe,EAAE,OAAO;IAEnC,MAAM,qBAAqB,OAAO;QAChC,cAAc;QACd,kBAAkB;QAElB,IAAI;YACF,MAAM,eAAe,MAAM,EAAE,EAAE;YAE/B,wBAAwB;YACxB,WAAW;gBACT,kBAAkB;YACpB,GAAG;QACL,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6CAA6C;YAC3D,kBAAkB;QACpB,SAAU;YACR,cAAc;QAChB;IACF;IAEA,MAAM,kBAAkB,CACtB,QACA,MACA,OACA,aACA;QAEA,MAAM,WAAW,MAAM,cAAc,KAAK;QAC1C,MAAM,aAAa,mBAAmB;QAEtC,qBACE,8OAAC;YACC,SAAS,IAAM,mBAAmB;YAClC,UAAU,cAAc;YACxB,WAAW,CAAC;;UAEV,EAAE,YAAY,aACV,cACA,cACH;UACD,EAAE,cAAc,CAAC,aAAa,kCAAkC,GAAG;UACnE,EAAE,WAAW,mBAAmB,GAAG;QACrC,CAAC;sBAED,cAAA,8OAAC;gBAAK,WAAU;;oBACb;oBACA;oBACA,cAAc,4BACb,8OAAC;wBAAK,WAAU;;;;;;;;;;;;;;;;;IAK1B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAgC;;;;;;;kCAGnD,8OAAC;wBAAI,WAAU;;4BACZ,gBACC,yBACA,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;sCACjB,WACA,uEACA;4BAGD,gBACC,4BACA,8OAAC,wMAAA,CAAA,UAAO;gCAAC,WAAU;;;;;sCACnB,cACA,mEACA;4BAGD,gBACC,yBACA,8OAAC,2NAAA,CAAA,cAAW;gCAAC,WAAU;;;;;sCACvB,WACA,qEACA;;;;;;;;;;;;;YAML,kBAAkB,CAAC,4BAClB,8OAAC;gBAAI,WAAU;0BAAwF;;;;;;YAMxG,MAAM,cAAc,KAAK,2BACxB,8OAAC;gBAAI,WAAU;0BAA2F;;;;;;YAK3G,MAAM,cAAc,KAAK,8BACxB,8OAAC;gBAAI,WAAU;0BAAqF;;;;;;YAKrG,MAAM,cAAc,KAAK,2BACxB,8OAAC;gBAAI,WAAU;0BAAwF;;;;;;;;;;;;AAM/G","debugId":null}},
    {"offset": {"line": 2146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/osr99/OneDrive/Documents/GitHub/pantypost/src/app/sellers/orders-to-fulfil/page.tsx"],"sourcesContent":["// src/app/sellers/orders-to-fulfil/page.tsx\r\n'use client';\r\n\r\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport RequireAuth from '@/components/RequireAuth';\r\nimport BanCheck from '@/components/BanCheck';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useWallet } from '@/context/WalletContext';\r\nimport { useToast } from '@/context/ToastContext';\r\nimport AddressConfirmationModal from '@/components/AddressConfirmationModal';\r\n\r\n// Seller orders UI\r\nimport OrderStats from '@/components/seller/orders/OrderStats';\r\nimport OrdersSection from '@/components/seller/orders/OrdersSection';\r\nimport AddressDisplay from '@/components/seller/orders/AddressDisplay';\r\nimport ShippingControls from '@/components/seller/orders/ShippingControls';\r\n\r\nimport type { DeliveryAddress, Order } from '@/types/order';\r\nimport { Clock, Package, Truck, Gavel, Settings, ShoppingBag, AlertCircle } from 'lucide-react';\r\n\r\nexport default function OrdersToFulfilPage() {\r\n  const { user, apiClient } = useAuth();\r\n  const { updateOrderAddress, updateShippingStatus } = useWallet();\r\n  const { showToast } = useToast();\r\n\r\n  const [addressModalOpen, setAddressModalOpen] = useState(false);\r\n  const [sellerOrderHistory, setSellerOrderHistory] = useState<Order[]>([]);\r\n  const [selectedOrder, setSelectedOrder] = useState<string | null>(null);\r\n  const [expandedOrder, setExpandedOrder] = useState<string | null>(null);\r\n  const [copiedText, setCopiedText] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch seller orders directly from backend to ensure this page shows orders to fulfil\r\n  useEffect(() => {\r\n    const fetchSellerOrders = async () => {\r\n      if (!user?.username) {\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const response = await apiClient.get<any>(`/orders?seller=${encodeURIComponent(user.username)}`);\r\n        \r\n        if (response?.success && Array.isArray(response.data)) {\r\n          setSellerOrderHistory(response.data);\r\n          console.log('[OrdersToFulfilPage] Loaded orders:', response.data.length);\r\n        } else {\r\n          console.error('[OrdersToFulfilPage] Invalid response format:', response);\r\n          setError('Failed to load orders. Please refresh the page.');\r\n        }\r\n      } catch (err) {\r\n        console.error('[OrdersToFulfilPage] Failed to fetch seller orders:', err);\r\n        setError('Failed to load orders. Please check your connection and try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchSellerOrders();\r\n    \r\n    // Set up auto-refresh every 30 seconds\r\n    const interval = setInterval(fetchSellerOrders, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [user?.username, apiClient]);\r\n\r\n  // Listen for order updates via WebSocket\r\n  useEffect(() => {\r\n    const handleOrderUpdate = (event: CustomEvent) => {\r\n      const { orderId, shippingStatus, hasAddress } = event.detail;\r\n      \r\n      setSellerOrderHistory(prev => prev.map(order => {\r\n        if (order.id === orderId) {\r\n          return {\r\n            ...order,\r\n            shippingStatus: shippingStatus || order.shippingStatus,\r\n            deliveryAddress: hasAddress ? order.deliveryAddress : undefined\r\n          };\r\n        }\r\n        return order;\r\n      }));\r\n    };\r\n\r\n    window.addEventListener('order:updated' as any, handleOrderUpdate);\r\n    return () => window.removeEventListener('order:updated' as any, handleOrderUpdate);\r\n  }, []);\r\n\r\n  // Filter & group for UI\r\n  const { userOrders, auctionOrders, customRequestOrders, directOrders } = useMemo(() => {\r\n    if (!user?.username) {\r\n      return { userOrders: [], auctionOrders: [], customRequestOrders: [], directOrders: [] };\r\n    }\r\n    const history = Array.isArray(sellerOrderHistory) ? sellerOrderHistory : [];\r\n    const userOrders = history.filter((order) => order.seller === user.username);\r\n    const auctionOrders = userOrders.filter((order) => !!order.wasAuction);\r\n    const customRequestOrders = userOrders.filter((order) => !!order.isCustomRequest);\r\n    const directOrders = userOrders.filter((order) => !order.wasAuction && !order.isCustomRequest);\r\n    return { userOrders, auctionOrders, customRequestOrders, directOrders };\r\n  }, [user?.username, sellerOrderHistory]);\r\n\r\n  // OrderStats in your repo expects these three counts\r\n  const auctionCount = auctionOrders.length;\r\n  const customRequestCount = customRequestOrders.length;\r\n  const standardCount = directOrders.length;\r\n\r\n  // Status badge renderer (OrdersSection requires this signature)\r\n  const getShippingStatusBadge = useCallback((status?: string) => {\r\n    if (!status || status === 'pending') {\r\n      return (\r\n        <span className=\"inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-yellow-500/20 text-yellow-300 border border-yellow-500/30\">\r\n          <Clock className=\"w-3 h-3 mr-1\" />\r\n          Pending\r\n        </span>\r\n      );\r\n    } else if (status === 'processing') {\r\n      return (\r\n        <span className=\"inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-blue-500/20 text-blue-300 border border-blue-500/30\">\r\n          <Package className=\"w-3 h-3 mr-1\" />\r\n          Processing\r\n        </span>\r\n      );\r\n    } else if (status === 'shipped') {\r\n      return (\r\n        <span className=\"inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-green-500/20 text-green-300 border border-green-500/30\">\r\n          <Truck className=\"w-3 h-3 mr-1\" />\r\n          Shipped\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  const toggleExpand = useCallback((orderId: string) => {\r\n    setExpandedOrder((prev) => (prev === orderId ? null : orderId));\r\n  }, []);\r\n\r\n  // Address modal\r\n  const handleOpenAddressModal = useCallback((orderId: string) => {\r\n    setSelectedOrder(orderId);\r\n    setAddressModalOpen(true);\r\n  }, []);\r\n\r\n  const handleConfirmAddress = useCallback(\r\n    async (address: DeliveryAddress) => {\r\n      if (selectedOrder) {\r\n        try {\r\n          // Persist via context\r\n          await updateOrderAddress(selectedOrder, address);\r\n          showToast({ \r\n            type: 'success',\r\n            title: 'Success',\r\n            message: 'Address updated successfully' \r\n          });\r\n        } catch (error) {\r\n          console.error('[OrdersToFulfilPage] Failed to update address:', error);\r\n          showToast({ \r\n            type: 'error',\r\n            title: 'Error',\r\n            message: 'Failed to update address. Please try again.' \r\n          });\r\n        }\r\n      }\r\n      setAddressModalOpen(false);\r\n      setSelectedOrder(null);\r\n    },\r\n    [selectedOrder, updateOrderAddress, showToast]\r\n  );\r\n\r\n  const getSelectedOrderAddress = useCallback((): DeliveryAddress | null => {\r\n    if (!selectedOrder) return null;\r\n    const history = Array.isArray(sellerOrderHistory) ? sellerOrderHistory : [];\r\n    const order = history.find((o) => o.id === selectedOrder);\r\n    return order?.deliveryAddress || null;\r\n  }, [selectedOrder, sellerOrderHistory]);\r\n\r\n  // AddressDisplay helpers\r\n  const getShippingLabel = useCallback((order: Order) => {\r\n    const a = order.deliveryAddress!;\r\n    // Simple, readable block — matches the AddressDisplay expectation (string)\r\n    return [\r\n      a.fullName,\r\n      a.addressLine1,\r\n      a.addressLine2 ? a.addressLine2 : null,\r\n      `${a.city}, ${a.state} ${a.postalCode}`,\r\n      a.country,\r\n    ]\r\n      .filter(Boolean)\r\n      .join('\\n');\r\n  }, []);\r\n\r\n  const handleCopyAddress = useCallback((address: NonNullable<Order['deliveryAddress']>) => {\r\n    const text = [\r\n      address.fullName,\r\n      address.addressLine1,\r\n      address.addressLine2 ? address.addressLine2 : null,\r\n      `${address.city}, ${address.state} ${address.postalCode}`,\r\n      address.country,\r\n    ]\r\n      .filter(Boolean)\r\n      .join('\\n');\r\n\r\n    try {\r\n      navigator.clipboard.writeText(text);\r\n      setCopiedText('address');\r\n      setTimeout(() => setCopiedText(null), 1500);\r\n      showToast({ \r\n        type: 'success',\r\n        title: 'Copied',\r\n        message: 'Address copied to clipboard' \r\n      });\r\n    } catch (e) {\r\n      console.error('Clipboard copy failed:', e);\r\n      showToast({ \r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to copy address' \r\n      });\r\n    }\r\n  }, [showToast]);\r\n\r\n  // Enhanced shipping status change handler\r\n  const handleShippingStatusChange = useCallback(\r\n    async (orderId: string, status: 'pending' | 'processing' | 'shipped') => {\r\n      try {\r\n        await updateShippingStatus(orderId, status);\r\n        \r\n        // Update local state immediately for better UX\r\n        setSellerOrderHistory(prev => prev.map(order => \r\n          order.id === orderId \r\n            ? { ...order, shippingStatus: status }\r\n            : order\r\n        ));\r\n        \r\n        // Show success message\r\n        const statusMessages = {\r\n          pending: 'Order marked as pending',\r\n          processing: 'Order marked as processing',\r\n          shipped: 'Order marked as shipped! Buyer has been notified.'\r\n        };\r\n        \r\n        showToast({ \r\n          type: 'success',\r\n          title: 'Status Updated',\r\n          message: statusMessages[status] \r\n        });\r\n      } catch (error) {\r\n        console.error('[OrdersToFulfilPage] Failed to update shipping status:', error);\r\n        showToast({ \r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to update shipping status. Please try again.' \r\n        });\r\n      }\r\n    },\r\n    [updateShippingStatus, showToast]\r\n  );\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <RequireAuth role=\"seller\">\r\n        <BanCheck>\r\n          <div className=\"max-w-6xl mx-auto px-4 py-10\">\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n              <ShoppingBag className=\"w-7 h-7 text-orange-400 animate-pulse\" />\r\n              <h1 className=\"text-3xl font-bold text-white\">Orders to fulfil</h1>\r\n            </div>\r\n            <div className=\"text-center py-16\">\r\n              <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-[#ff950e]\"></div>\r\n              <p className=\"text-gray-400 mt-4\">Loading your orders...</p>\r\n            </div>\r\n          </div>\r\n        </BanCheck>\r\n      </RequireAuth>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <RequireAuth role=\"seller\">\r\n        <BanCheck>\r\n          <div className=\"max-w-6xl mx-auto px-4 py-10\">\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n              <ShoppingBag className=\"w-7 h-7 text-orange-400\" />\r\n              <h1 className=\"text-3xl font-bold text-white\">Orders to fulfil</h1>\r\n            </div>\r\n            <div className=\"text-center py-16 bg-red-900/20 rounded-2xl border border-red-500/30\">\r\n              <AlertCircle className=\"w-16 h-16 text-red-400 mx-auto mb-4\" />\r\n              <h3 className=\"text-red-300 text-xl mb-2\">{error}</h3>\r\n              <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"mt-4 px-6 py-2 bg-red-600 hover:bg-red-500 text-white rounded-lg transition-colors\"\r\n              >\r\n                Retry\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </BanCheck>\r\n      </RequireAuth>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RequireAuth role=\"seller\">\r\n      <BanCheck>\r\n        <div className=\"max-w-6xl mx-auto px-4 py-10\">\r\n          <div className=\"flex items-center gap-3 mb-6\">\r\n            <ShoppingBag className=\"w-7 h-7 text-orange-400\" />\r\n            <h1 className=\"text-3xl font-bold text-white\">Orders to fulfil</h1>\r\n          </div>\r\n\r\n          <OrderStats auctionCount={auctionCount} customRequestCount={customRequestCount} standardCount={standardCount} />\r\n\r\n          {userOrders.length === 0 ? (\r\n            // Show the embedded empty state in the \"Direct purchases\" section when no orders\r\n            <OrdersSection\r\n              title=\"Direct purchases\"\r\n              icon={Package}\r\n              iconColor=\"from-[#ff950e] to-[#e0850d]\"\r\n              orders={[]}\r\n              type=\"direct\"\r\n              expandedOrder={expandedOrder}\r\n              onToggleExpand={toggleExpand}\r\n              renderAddressBlock={() => null}\r\n              renderShippingControls={() => null}\r\n              getShippingStatusBadge={getShippingStatusBadge}\r\n              showEmptyState\r\n            />\r\n          ) : (\r\n            <>\r\n              {/* Direct purchases */}\r\n              <OrdersSection\r\n                title=\"Direct purchases\"\r\n                icon={Package}\r\n                iconColor=\"from-[#ff950e] to-[#e0850d]\"\r\n                orders={directOrders}\r\n                type=\"direct\"\r\n                expandedOrder={expandedOrder}\r\n                onToggleExpand={toggleExpand}\r\n                renderAddressBlock={(order) => (\r\n                  <AddressDisplay\r\n                    order={order}\r\n                    copiedText={copiedText}\r\n                    onCopyAddress={handleCopyAddress}\r\n                    getShippingLabel={getShippingLabel}\r\n                  />\r\n                )}\r\n                renderShippingControls={(order) => (\r\n                  <ShippingControls\r\n                    order={order}\r\n                    onStatusChange={handleShippingStatusChange}\r\n                  />\r\n                )}\r\n                getShippingStatusBadge={getShippingStatusBadge}\r\n              />\r\n\r\n              {/* Auctions */}\r\n              <OrdersSection\r\n                title=\"Auctions\"\r\n                icon={Gavel}\r\n                iconColor=\"from-purple-600 to-purple-400\"\r\n                orders={auctionOrders}\r\n                type=\"auction\"\r\n                expandedOrder={expandedOrder}\r\n                onToggleExpand={toggleExpand}\r\n                renderAddressBlock={(order) => (\r\n                  <AddressDisplay\r\n                    order={order}\r\n                    copiedText={copiedText}\r\n                    onCopyAddress={handleCopyAddress}\r\n                    getShippingLabel={getShippingLabel}\r\n                  />\r\n                )}\r\n                renderShippingControls={(order) => (\r\n                  <ShippingControls\r\n                    order={order}\r\n                    onStatusChange={handleShippingStatusChange}\r\n                  />\r\n                )}\r\n                getShippingStatusBadge={getShippingStatusBadge}\r\n              />\r\n\r\n              {/* Custom requests */}\r\n              <OrdersSection\r\n                title=\"Custom requests\"\r\n                icon={Settings}\r\n                iconColor=\"from-blue-600 to-cyan-500\"\r\n                orders={customRequestOrders}\r\n                type=\"custom\"\r\n                expandedOrder={expandedOrder}\r\n                onToggleExpand={toggleExpand}\r\n                renderAddressBlock={(order) => (\r\n                  <AddressDisplay\r\n                    order={order}\r\n                    copiedText={copiedText}\r\n                    onCopyAddress={handleCopyAddress}\r\n                    getShippingLabel={getShippingLabel}\r\n                  />\r\n                )}\r\n                renderShippingControls={(order) => (\r\n                  <ShippingControls\r\n                    order={order}\r\n                    onStatusChange={handleShippingStatusChange}\r\n                  />\r\n                )}\r\n                getShippingStatusBadge={getShippingStatusBadge}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <AddressConfirmationModal\r\n            isOpen={addressModalOpen}\r\n            onClose={() => setAddressModalOpen(false)}\r\n            onConfirm={handleConfirmAddress}\r\n            existingAddress={getSelectedOrderAddress() ?? undefined}\r\n            orderId={selectedOrder ?? ''}\r\n          />\r\n        </div>\r\n      </BanCheck>\r\n    </RequireAuth>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}