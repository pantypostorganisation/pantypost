{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/RequireAuth.tsx"],"sourcesContent":["// src/components/RequireAuth.tsx\r\n'use client';\r\n\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect, useState } from 'react';\r\nimport { z } from 'zod';\r\n\r\nconst VALID_ROLES = ['buyer', 'seller', 'admin'] as const;\r\ntype ValidRole = (typeof VALID_ROLES)[number];\r\n\r\nconst RoleSchema = z.enum(VALID_ROLES);\r\n\r\nexport default function RequireAuth({\r\n  role,\r\n  children,\r\n}: {\r\n  role: ValidRole;\r\n  children: React.ReactNode;\r\n}) {\r\n  const { user, isAuthReady } = useAuth();\r\n  const router = useRouter();\r\n  const [authorized, setAuthorized] = useState(false);\r\n  const [hasChecked, setHasChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || hasChecked) return;\r\n\r\n    // Runtime validation of `role` prop (dev-only noise)\r\n    const parsed = RoleSchema.safeParse(role);\r\n    if (!parsed.success) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('[RequireAuth] Invalid role prop supplied:', role);\r\n      }\r\n      router.push('/login');\r\n      setHasChecked(true);\r\n      return;\r\n    }\r\n\r\n    const userRole = user?.role as ValidRole | undefined;\r\n\r\n    // NEW: strict role matching — no admin override for buyer/seller routes\r\n    let hasAccess = false;\r\n    if (parsed.data === 'admin') {\r\n      hasAccess = userRole === 'admin';\r\n    } else {\r\n      hasAccess = userRole === parsed.data; // admin can’t view buyer/seller pages\r\n    }\r\n\r\n    if (!user || !hasAccess) {\r\n      router.push('/login');\r\n    } else {\r\n      setAuthorized(true);\r\n    }\r\n\r\n    setHasChecked(true);\r\n  }, [isAuthReady, user, role, router, hasChecked]);\r\n\r\n  if (!isAuthReady || !hasChecked) {\r\n    return (\r\n      <div className=\"min-h-screen bg-black flex items-center justify-center\" role=\"status\" aria-label=\"Checking access\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }} />\r\n          <div className=\"w-4 h-4 bg-[#ff950e] rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!authorized) return null;\r\n\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,cAAc;IAAC;IAAS;IAAU;CAAQ;AAGhD,MAAM,aAAa,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;AAEX,SAAS,YAAY,EAClC,IAAI,EACJ,QAAQ,EAIT;IACC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IACpC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,eAAe,YAAY;QAEhC,qDAAqD;QACrD,MAAM,SAAS,WAAW,SAAS,CAAC;QACpC,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,wCAA4C;gBAC1C,QAAQ,IAAI,CAAC,6CAA6C;YAC5D;YACA,OAAO,IAAI,CAAC;YACZ,cAAc;YACd;QACF;QAEA,MAAM,WAAW,MAAM;QAEvB,wEAAwE;QACxE,IAAI,YAAY;QAChB,IAAI,OAAO,IAAI,KAAK,SAAS;YAC3B,YAAY,aAAa;QAC3B,OAAO;YACL,YAAY,aAAa,OAAO,IAAI,EAAE,sCAAsC;QAC9E;QAEA,IAAI,CAAC,QAAQ,CAAC,WAAW;YACvB,OAAO,IAAI,CAAC;QACd,OAAO;YACL,cAAc;QAChB;QAEA,cAAc;IAChB,GAAG;QAAC;QAAa;QAAM;QAAM;QAAQ;KAAW;IAEhD,IAAI,CAAC,eAAe,CAAC,YAAY;QAC/B,qBACE,8OAAC;YAAI,WAAU;YAAyD,MAAK;YAAS,cAAW;sBAC/F,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;kCACjG,8OAAC;wBAAI,WAAU;wBAAkD,OAAO;4BAAE,gBAAgB;wBAAO;;;;;;;;;;;;;;;;;IAIzG;IAEA,IAAI,CAAC,YAAY,OAAO;IAExB,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/components/analytics/SellerRevenueChart.tsx"],"sourcesContent":["// src/components/analytics/SellerRevenueChart.tsx\r\n'use client';\r\n\r\nimport React, { useMemo } from 'react';\r\nimport {\r\n  TrendingUp,\r\n  Calendar,\r\n  DollarSign,\r\n  ShoppingBag,\r\n  Activity,\r\n  ArrowUpRight,\r\n  ArrowDownRight\r\n} from 'lucide-react';\r\n\r\ninterface RevenueDataPoint {\r\n  _id: string | number;\r\n  totalRevenue: number;\r\n  orderCount: number;\r\n  avgOrderValue: number;\r\n}\r\n\r\ninterface SellerRevenueChartProps {\r\n  data: RevenueDataPoint[];\r\n  period: 'daily' | 'weekly' | 'monthly' | 'yearly';\r\n  isLoading?: boolean;\r\n}\r\n\r\ntype ChartRow = {\r\n  label: string;\r\n  revenue: number;\r\n  orders: number;\r\n  avgOrder: number;\r\n};\r\n\r\nexport default function SellerRevenueChart({\r\n  data = [],\r\n  period,\r\n  isLoading = false\r\n}: SellerRevenueChartProps) {\r\n  // Normalize/format rows (cap at most recent 20 like before)\r\n  const chartData: ChartRow[] = useMemo(() => {\r\n    if (!Array.isArray(data) || data.length === 0) return [];\r\n\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n    return data.slice(-20).map((point) => {\r\n      let label = '';\r\n\r\n      if (typeof point._id === 'string') {\r\n        if (period === 'daily' && point._id.includes('-')) {\r\n          const d = new Date(point._id);\r\n          if (!Number.isNaN(d.getTime())) {\r\n            label = d.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n          } else {\r\n            label = point._id;\r\n          }\r\n        } else {\r\n          label = point._id;\r\n        }\r\n      } else if (typeof point._id === 'number') {\r\n        if (period === 'weekly') {\r\n          label = `Week ${point._id}`;\r\n        } else if (period === 'monthly') {\r\n          label = monthNames[Math.max(0, Math.min(11, Number(point._id) - 1))] ?? `Month ${point._id}`;\r\n        } else if (period === 'yearly') {\r\n          label = String(point._id);\r\n        } else {\r\n          label = String(point._id);\r\n        }\r\n      }\r\n\r\n      const revenue = Number.isFinite(point.totalRevenue) ? Math.round(point.totalRevenue * 100) / 100 : 0;\r\n      const orders = Number.isFinite(point.orderCount) ? point.orderCount : 0;\r\n      const avgOrder = Number.isFinite(point.avgOrderValue) ? Math.round(point.avgOrderValue * 100) / 100 : 0;\r\n\r\n      return { label, revenue, orders, avgOrder };\r\n    });\r\n  }, [data, period]);\r\n\r\n  // Aggregate stats\r\n  const stats = useMemo(() => {\r\n    if (chartData.length === 0) return null;\r\n\r\n    const revenues = chartData.map((d) => d.revenue);\r\n    const totalRevenue = revenues.reduce((s, v) => s + v, 0);\r\n    const avgRevenue = chartData.length > 0 ? totalRevenue / chartData.length : 0;\r\n    const maxRevenue = Math.max(...revenues);\r\n\r\n    const orders = chartData.map((d) => d.orders);\r\n    const totalOrders = orders.reduce((s, v) => s + v, 0);\r\n\r\n    // Simple trend: avg of second half vs first half\r\n    const mid = Math.floor(chartData.length / 2);\r\n    const firstAvg =\r\n      chartData.slice(0, mid).reduce((s, v) => s + v.revenue, 0) / Math.max(1, mid);\r\n    const secondAvg =\r\n      chartData.slice(mid).reduce((s, v) => s + v.revenue, 0) /\r\n      Math.max(1, chartData.length - mid);\r\n    const trend = firstAvg > 0 ? ((secondAvg - firstAvg) / firstAvg) * 100 : 0;\r\n\r\n    const bestPeriod = chartData.reduce((best, cur) => (cur.revenue > best.revenue ? cur : best), chartData[0]);\r\n\r\n    return { totalRevenue, avgRevenue, maxRevenue, totalOrders, trend, bestPeriod };\r\n  }, [chartData]);\r\n\r\n  const maxOrders = useMemo(\r\n    () => (chartData.length ? Math.max(...chartData.map((d) => d.orders), 1) : 1),\r\n    [chartData]\r\n  );\r\n  const maxAOV = useMemo(\r\n    () => (chartData.length ? Math.max(...chartData.map((d) => d.avgOrder), 1) : 1),\r\n    [chartData]\r\n  );\r\n\r\n  const formatCurrency = (amount: number) =>\r\n    new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(Number.isFinite(amount) ? amount : 0);\r\n\r\n  const formatCompactCurrency = (amount: number) => {\r\n    if (!Number.isFinite(amount)) return '$0';\r\n    if (Math.abs(amount) >= 1000) {\r\n      return `$${(amount / 1000).toFixed(1)}k`;\r\n    }\r\n    return `$${Math.round(amount)}`;\r\n  };\r\n\r\n  const chartPeriodDescription = (() => {\r\n    switch (period) {\r\n      case 'daily':\r\n        return 'Daily revenue (last 30 days)';\r\n      case 'weekly':\r\n        return 'Weekly revenue (last 12 weeks)';\r\n      case 'monthly':\r\n        return 'Monthly revenue (last 12 months)';\r\n      case 'yearly':\r\n        return 'Yearly revenue (last 5 years)';\r\n      default:\r\n        return 'Revenue over time';\r\n    }\r\n  })();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n        <div className=\"h-96 flex items-center justify-center\">\r\n          <div className=\"text-gray-500\">\r\n            <div className=\"w-8 h-8 border-2 border-[#ff950e] border-t-transparent rounded-full animate-spin mx-auto mb-2\" />\r\n            Loading revenue data...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!stats || chartData.length === 0) {\r\n    return (\r\n      <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n        <h3 className=\"text-lg font-bold text-white mb-4 flex items-center gap-2\">\r\n          <TrendingUp className=\"h-5 w-5 text-[#ff950e]\" />\r\n          Revenue Trend\r\n        </h3>\r\n        <div className=\"h-96 flex items-center justify-center\">\r\n          <div className=\"text-center text-gray-500\">\r\n            <Calendar className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n            <p>No revenue data available for this period</p>\r\n            <p className=\"text-sm mt-2\">Start making sales to see your revenue chart!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Reusable Bar Row (admin-style) ----------\r\n  const BarRow = ({\r\n    rows,\r\n    max,\r\n    valueSelector,\r\n    barAriaPrefix,\r\n    tooltipFormatter,\r\n    barGradient = 'from-[#ff950e] to-[#ff6b00]'\r\n  }: {\r\n    rows: ChartRow[];\r\n    max: number;\r\n    valueSelector: (r: ChartRow) => number;\r\n    barAriaPrefix: string;\r\n    tooltipFormatter: (n: number, row: ChartRow) => string;\r\n    barGradient?: string;\r\n  }) => {\r\n    const safeMax = Math.max(1, max);\r\n    return (\r\n      <div className=\"overflow-x-auto\">\r\n        <div className=\"min-w-[600px] h-64 flex items-end justify-between gap-1 mb-4\">\r\n          {rows.map((row, idx) => {\r\n            const v = Math.max(0, valueSelector(row));\r\n            const heightPx = Math.max((v / safeMax) * 200, 4); // min bar height for visibility\r\n            return (\r\n              <div key={idx} className=\"flex-1 flex flex-col items-center group\">\r\n                <div className=\"relative w-full flex justify-center mb-2\">\r\n                  <div\r\n                    className={`w-8 bg-gradient-to-t ${barGradient} rounded-t-lg transition-all duration-300 group-hover:from-[#ff6b00] group-hover:to-[#ff950e] min-h-[4px]`}\r\n                    style={{ height: `${heightPx}px` }}\r\n                    aria-label={`${barAriaPrefix} ${row.label}: ${v}`}\r\n                    role=\"img\"\r\n                  />\r\n                  <div className=\"absolute -top-8 bg-black/80 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap z-10\">\r\n                    {tooltipFormatter(v, row)}\r\n                  </div>\r\n                </div>\r\n                <span className=\"text-xs text-gray-500 transform -rotate-45 origin-center whitespace-nowrap block mt-1\">\r\n                  {row.label}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <div className=\"bg-[#1a1a1a] rounded-xl p-4 border border-gray-800\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <DollarSign className=\"h-5 w-5 text-[#ff950e]\" />\r\n            {stats.trend !== 0 && (\r\n              <span\r\n                className={`text-xs flex items-center gap-1 ${\r\n                  stats.trend > 0 ? 'text-green-400' : 'text-red-400'\r\n                }`}\r\n              >\r\n                {stats.trend > 0 ? (\r\n                  <ArrowUpRight className=\"w-3 h-3\" />\r\n                ) : (\r\n                  <ArrowDownRight className=\"w-3 h-3\" />\r\n                )}\r\n                {Math.abs(stats.trend).toFixed(1)}%\r\n              </span>\r\n            )}\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 mb-1\">Total Revenue</p>\r\n          <p className=\"text-xl font-bold text-white\">\r\n            {formatCompactCurrency(stats.totalRevenue)}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-[#1a1a1a] rounded-xl p-4 border border-gray-800\">\r\n          <ShoppingBag className=\"h-5 w-5 text-green-400 mb-2\" />\r\n          <p className=\"text-xs text-gray-500 mb-1\">Total Orders</p>\r\n          <p className=\"text-xl font-bold text-white\">{stats.totalOrders}</p>\r\n        </div>\r\n\r\n        <div className=\"bg-[#1a1a1a] rounded-xl p-4 border border-gray-800\">\r\n          <Activity className=\"h-5 w-5 text-blue-400 mb-2\" />\r\n          <p className=\"text-xs text-gray-500 mb-1\">Avg Order Value</p>\r\n          <p className=\"text-xl font-bold text-white\">\r\n            {formatCurrency(stats.totalRevenue / Math.max(stats.totalOrders, 1))}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-[#1a1a1a] rounded-xl p-4 border border-gray-800\">\r\n          <TrendingUp className=\"h-5 w-5 text-purple-400 mb-2\" />\r\n          <p className=\"text-xs text-gray-500 mb-1\">\r\n            Best {period === 'yearly' ? 'Year' : period === 'monthly' ? 'Month' : period === 'weekly' ? 'Week' : 'Day'}\r\n          </p>\r\n          <p className=\"text-xl font-bold text-white\">\r\n            {formatCompactCurrency(stats.maxRevenue)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Revenue Chart (admin-style bars) */}\r\n      <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6 gap-2\">\r\n          <h3 className=\"text-lg font-bold text-white flex items-center gap-2\">\r\n            <TrendingUp className=\"h-5 w-5 text-[#ff950e]\" />\r\n            Revenue Trend\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"text-sm text-gray-400 mb-2\">{chartPeriodDescription}</div>\r\n\r\n        <BarRow\r\n          rows={chartData}\r\n          max={stats.maxRevenue}\r\n          valueSelector={(r) => r.revenue}\r\n          barAriaPrefix=\"Revenue\"\r\n          tooltipFormatter={(v, r) => `${formatCurrency(v)} • ${r.orders} orders`}\r\n          barGradient=\"from-[#ff950e] to-[#ff6b00]\"\r\n        />\r\n\r\n        <div className=\"grid grid-cols-3 gap-4 pt-4 border-t border-gray-800\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-xs text-gray-500\">\r\n              Highest {period === 'yearly' ? 'Year' : period === 'monthly' ? 'Month' : period === 'weekly' ? 'Week' : 'Day'}\r\n            </p>\r\n            <p className=\"font-bold text-green-400\">{formatCurrency(stats.maxRevenue)}</p>\r\n            <p className=\"text-xs text-gray-500 mt-1\">{stats.bestPeriod.label}</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-xs text-gray-500\">\r\n              Average {period === 'yearly' ? 'Year' : period === 'monthly' ? 'Month' : period === 'weekly' ? 'Week' : 'Day'}\r\n            </p>\r\n            <p className=\"font-bold text-white\">{formatCurrency(stats.avgRevenue)}</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-xs text-gray-500\">Total Period</p>\r\n            <p className=\"font-bold text-[#ff950e]\">{formatCurrency(stats.totalRevenue)}</p>\r\n            <p className=\"text-xs text-gray-500 mt-1\">{chartData.length} periods</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Secondary Charts (admin-style bars) */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Orders */}\r\n        <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n          <h3 className=\"text-lg font-bold text-white mb-6 flex items-center gap-2\">\r\n            <ShoppingBag className=\"h-5 w-5 text-green-400\" />\r\n            Order Volume Distribution\r\n          </h3>\r\n\r\n          <BarRow\r\n            rows={chartData}\r\n            max={maxOrders}\r\n            valueSelector={(r) => r.orders}\r\n            barAriaPrefix=\"Orders\"\r\n            tooltipFormatter={(v, r) => `${v} orders • ${r.label}`}\r\n            barGradient=\"from-green-500 to-emerald-400\"\r\n          />\r\n\r\n          <div className=\"grid grid-cols-2 gap-4 pt-4 border-t border-gray-800\">\r\n            <div className=\"text-center\">\r\n              <p className=\"text-xs text-gray-500\">Total Orders</p>\r\n              <p className=\"font-bold text-green-400 text-xl\">{stats.totalOrders}</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <p className=\"text-xs text-gray-500\">\r\n                Avg per {period === 'yearly' ? 'Year' : period === 'monthly' ? 'Month' : period === 'weekly' ? 'Week' : 'Day'}\r\n              </p>\r\n              <p className=\"font-bold text-white text-xl\">\r\n                {Math.round(stats.totalOrders / Math.max(1, chartData.length))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Average Order Value */}\r\n        <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n          <h3 className=\"text-lg font-bold text-white mb-6 flex items-center gap-2\">\r\n            <Activity className=\"h-5 w-5 text-blue-400\" />\r\n            Average Order Value Trend\r\n          </h3>\r\n\r\n          <BarRow\r\n            rows={chartData}\r\n            max={maxAOV}\r\n            valueSelector={(r) => r.avgOrder}\r\n            barAriaPrefix=\"Average order value\"\r\n            tooltipFormatter={(v, r) => `${formatCurrency(v)} AOV • ${r.label}`}\r\n            barGradient=\"from-blue-500 to-sky-400\"\r\n          />\r\n\r\n          <div className=\"grid grid-cols-2 gap-4 pt-4 border-t border-gray-800\">\r\n            <div className=\"text-center\">\r\n              <p className=\"text-xs text-gray-500\">Overall Average</p>\r\n              <p className=\"font-bold text-blue-400 text-xl\">\r\n                {formatCurrency(stats.totalRevenue / Math.max(stats.totalOrders, 1))}\r\n              </p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <p className=\"text-xs text-gray-500\">Highest AOV</p>\r\n              <p className=\"font-bold text-white text-xl\">\r\n                {formatCurrency(maxAOV)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 977, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/services/analytics.service.ts"],"sourcesContent":["// src/services/analytics.service.ts\r\n\r\nimport { API_ENDPOINTS, apiCall, ApiResponse } from './api.config';\r\nimport { sanitizeStrict } from '@/utils/security/sanitization';\r\n\r\n// Analytics data types\r\nexport interface RevenueMetrics {\r\n  total: number;\r\n  thisMonth: number;\r\n  lastMonth: number;\r\n  thisWeek: number;\r\n  lastWeek: number;\r\n  monthlyGrowth: number;\r\n  weeklyGrowth: number;\r\n  averageOrderValue: number;\r\n  subscriptionRevenue: number;\r\n}\r\n\r\nexport interface OrderMetrics {\r\n  total: number;\r\n  thisMonth: number;\r\n  pending: number;\r\n  processing: number;\r\n  shipped: number;\r\n  delivered: number;\r\n  recent: Array<{\r\n    _id: string;\r\n    title: string;\r\n    buyer: string;\r\n    price: number;\r\n    markedUpPrice: number;\r\n    date: string;\r\n    shippingStatus: string;\r\n    wasAuction: boolean;\r\n    tierCreditAmount?: number;\r\n  }>;\r\n}\r\n\r\nexport interface ListingMetrics {\r\n  total: number;\r\n  active: number;\r\n  sold: number;\r\n  activeAuctions: number;\r\n  totalViews: number;\r\n  conversionRate: number;\r\n  topPerforming: Array<{\r\n    _id: string;\r\n    title: string;\r\n    price: number;\r\n    views: number;\r\n    status: string;\r\n  }>;\r\n}\r\n\r\nexport interface SubscriberMetrics {\r\n  count: number;\r\n  monthlyRevenue: number;\r\n  monthlyRevenueEarnings?: number;\r\n  subscriptionPrice?: number;\r\n}\r\n\r\nexport interface RatingMetrics {\r\n  average: number;\r\n  totalReviews: number;\r\n}\r\n\r\nexport interface SellerOverview {\r\n  revenue: RevenueMetrics;\r\n  orders: OrderMetrics;\r\n  listings: ListingMetrics;\r\n  subscribers: SubscriberMetrics;\r\n  ratings: RatingMetrics;\r\n}\r\n\r\nexport interface RevenueDataPoint {\r\n  _id: string | number;\r\n  totalRevenue: number;\r\n  orderCount: number;\r\n  avgOrderValue: number;\r\n}\r\n\r\nexport interface RevenueData {\r\n  period: string;\r\n  startDate: string;\r\n  revenueData: RevenueDataPoint[];\r\n}\r\n\r\nexport interface SubscriberDetail {\r\n  username: string;\r\n  subscribedAt: string;\r\n  totalOrders: number;\r\n  totalSpent: number;\r\n  lastOrderDate: string | null;\r\n  subscriptionPrice: number;\r\n}\r\n\r\nexport interface SubscriberAnalytics {\r\n  totalSubscribers: number;\r\n  monthlyRecurringRevenue: number;\r\n  monthlyRecurringRevenueEarnings?: number;\r\n  subscribers: SubscriberDetail[];\r\n  churnRate: number;\r\n  averageSubscriberValue: number;\r\n  subscriptionPrice?: number;\r\n}\r\n\r\nexport interface ProductMetric {\r\n  id: string;\r\n  title: string;\r\n  status: string;\r\n  type: 'auction' | 'regular';\r\n  price: number;\r\n  views: number;\r\n  orderCount: number;\r\n  revenue: number;\r\n  conversionRate: number;\r\n  createdAt: string;\r\n  lastSold: string | null;\r\n}\r\n\r\nexport interface ProductAnalytics {\r\n  summary: {\r\n    totalProducts: number;\r\n    activeProducts: number;\r\n    totalRevenue: number;\r\n    totalViews: number;\r\n    totalOrders: number;\r\n    averageConversionRate: number;\r\n  };\r\n  products: ProductMetric[];\r\n}\r\n\r\nexport interface PerformanceComparison {\r\n  period: number;\r\n  current: {\r\n    orders: number;\r\n    revenue: number;\r\n    avgOrderValue: number;\r\n  };\r\n  previous: {\r\n    orders: number;\r\n    revenue: number;\r\n    avgOrderValue: number;\r\n  };\r\n  changes: {\r\n    orders: number;\r\n    revenue: number;\r\n    avgOrderValue: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Analytics Service\r\n * Handles all analytics-related API operations for sellers\r\n */\r\nexport class AnalyticsService {\r\n  private static instance: AnalyticsService;\r\n  private cache: Map<string, { data: any; timestamp: number }> = new Map();\r\n  private CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): AnalyticsService {\r\n    if (!AnalyticsService.instance) {\r\n      AnalyticsService.instance = new AnalyticsService();\r\n    }\r\n    return AnalyticsService.instance;\r\n  }\r\n\r\n  /**\r\n   * Get seller overview analytics\r\n   */\r\n  async getSellerOverview(): Promise<ApiResponse<SellerOverview>> {\r\n    try {\r\n      const cacheKey = 'seller_overview';\r\n      const cached = this.getCached<SellerOverview>(cacheKey);\r\n      if (cached) {\r\n        return { success: true, data: cached };\r\n      }\r\n\r\n      const response = await apiCall<SellerOverview>('/analytics/seller/overview', {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        this.setCache(cacheKey, response.data);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('[AnalyticsService] Error fetching seller overview:', error);\r\n      return {\r\n        success: false,\r\n        error: {\r\n          code: 'FETCH_ERROR',\r\n          message: 'Failed to fetch analytics data',\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get revenue data for specific period\r\n   */\r\n  async getRevenueData(\r\n    period: 'daily' | 'weekly' | 'monthly' | 'yearly' = 'daily'\r\n  ): Promise<ApiResponse<RevenueData>> {\r\n    try {\r\n      const cacheKey = `revenue_${period}`;\r\n      const cached = this.getCached<RevenueData>(cacheKey);\r\n      if (cached) {\r\n        return { success: true, data: cached };\r\n      }\r\n\r\n      const response = await apiCall<RevenueData>(`/analytics/seller/revenue/${period}`, {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        this.setCache(cacheKey, response.data);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('[AnalyticsService] Error fetching revenue data:', error);\r\n      return {\r\n        success: false,\r\n        error: {\r\n          code: 'FETCH_ERROR',\r\n          message: 'Failed to fetch revenue data',\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get detailed subscriber analytics\r\n   */\r\n  async getSubscriberAnalytics(): Promise<ApiResponse<SubscriberAnalytics>> {\r\n    try {\r\n      const cacheKey = 'subscriber_analytics';\r\n      const cached = this.getCached<SubscriberAnalytics>(cacheKey);\r\n      if (cached) {\r\n        return { success: true, data: cached };\r\n      }\r\n\r\n      const response = await apiCall<SubscriberAnalytics>('/analytics/seller/subscribers', {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        // Sanitize subscriber usernames\r\n        if (response.data.subscribers) {\r\n          response.data.subscribers = response.data.subscribers.map(sub => ({\r\n            ...sub,\r\n            username: sanitizeStrict(sub.username),\r\n          }));\r\n        }\r\n        this.setCache(cacheKey, response.data);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('[AnalyticsService] Error fetching subscriber analytics:', error);\r\n      return {\r\n        success: false,\r\n        error: {\r\n          code: 'FETCH_ERROR',\r\n          message: 'Failed to fetch subscriber analytics',\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get product performance analytics\r\n   */\r\n  async getProductAnalytics(): Promise<ApiResponse<ProductAnalytics>> {\r\n    try {\r\n      const cacheKey = 'product_analytics';\r\n      const cached = this.getCached<ProductAnalytics>(cacheKey);\r\n      if (cached) {\r\n        return { success: true, data: cached };\r\n      }\r\n\r\n      const response = await apiCall<ProductAnalytics>('/analytics/seller/products', {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        // Sanitize product titles\r\n        if (response.data.products) {\r\n          response.data.products = response.data.products.map(product => ({\r\n            ...product,\r\n            title: sanitizeStrict(product.title),\r\n          }));\r\n        }\r\n        this.setCache(cacheKey, response.data);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('[AnalyticsService] Error fetching product analytics:', error);\r\n      return {\r\n        success: false,\r\n        error: {\r\n          code: 'FETCH_ERROR',\r\n          message: 'Failed to fetch product analytics',\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get performance comparison between periods\r\n   */\r\n  async getPerformanceComparison(days: number = 30): Promise<ApiResponse<PerformanceComparison>> {\r\n    try {\r\n      const cacheKey = `comparison_${days}`;\r\n      const cached = this.getCached<PerformanceComparison>(cacheKey);\r\n      if (cached) {\r\n        return { success: true, data: cached };\r\n      }\r\n\r\n      const response = await apiCall<PerformanceComparison>(\r\n        `/analytics/seller/comparison?period=${days}`,\r\n        {\r\n          method: 'GET',\r\n        }\r\n      );\r\n\r\n      if (response.success && response.data) {\r\n        this.setCache(cacheKey, response.data);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('[AnalyticsService] Error fetching comparison data:', error);\r\n      return {\r\n        success: false,\r\n        error: {\r\n          code: 'FETCH_ERROR',\r\n          message: 'Failed to fetch comparison data',\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear analytics cache\r\n   */\r\n  clearCache(): void {\r\n    this.cache.clear();\r\n  }\r\n\r\n  /**\r\n   * Get cached data if available and not expired\r\n   */\r\n  private getCached<T>(key: string): T | null {\r\n    const cached = this.cache.get(key);\r\n    if (!cached) return null;\r\n\r\n    const now = Date.now();\r\n    if (now - cached.timestamp > this.CACHE_DURATION) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n\r\n    return cached.data as T;\r\n  }\r\n\r\n  /**\r\n   * Set cache data\r\n   */\r\n  private setCache(key: string, data: any): void {\r\n    this.cache.set(key, {\r\n      data,\r\n      timestamp: Date.now(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculate tier bonus from revenue\r\n   */\r\n  calculateTierBonus(baseRevenue: number, tier?: string): number {\r\n    const tierBonuses: Record<string, number> = {\r\n      Tease: 0,\r\n      Flirt: 0.02, // 2% bonus\r\n      Obsession: 0.05, // 5% bonus\r\n      Desire: 0.08, // 8% bonus\r\n      Goddess: 0.10, // 10% bonus\r\n    };\r\n\r\n    const bonusRate = tierBonuses[tier || 'Tease'] || 0;\r\n    return Math.round(baseRevenue * bonusRate * 100) / 100;\r\n  }\r\n\r\n  /**\r\n   * Format currency for display\r\n   */\r\n  formatCurrency(amount: number): string {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n  }\r\n\r\n  /**\r\n   * Calculate growth percentage\r\n   */\r\n  calculateGrowth(current: number, previous: number): number {\r\n    if (previous === 0) return current > 0 ? 100 : 0;\r\n    return Math.round(((current - previous) / previous) * 100 * 100) / 100;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const analyticsService = AnalyticsService.getInstance();"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1222, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/gerom/OneDrive/Documents/pantypost/src/app/sellers/subscribers/page.tsx"],"sourcesContent":["// src/app/sellers/subscribers/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState, useMemo } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport RequireAuth from '@/components/RequireAuth';\r\nimport BanCheck from '@/components/BanCheck';\r\nimport SellerRevenueChart from '@/components/analytics/SellerRevenueChart';\r\nimport { analyticsService } from '@/services/analytics.service';\r\nimport type {\r\n  SellerOverview,\r\n  RevenueData,\r\n  SubscriberAnalytics,\r\n  ProductAnalytics,\r\n  PerformanceComparison\r\n} from '@/services/analytics.service';\r\nimport { SecureMessageDisplay } from '@/components/ui/SecureMessageDisplay';\r\nimport { \r\n  BarChart3, \r\n  DollarSign, \r\n  ShoppingBag, \r\n  Users, \r\n  TrendingUp, \r\n  Package,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Activity,\r\n  Download,\r\n  Clock,\r\n  Star,\r\n  Loader2,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\n// Metric Card Component - matching admin wallet style\r\nfunction MetricCard({ \r\n  title, \r\n  subtitle,\r\n  value, \r\n  change, \r\n  prefix = '', \r\n  suffix = '',\r\n  icon: Icon,\r\n  iconColor,\r\n  bgGradient,\r\n  breakdown\r\n}: { \r\n  title: string; \r\n  subtitle?: string;\r\n  value: number | string; \r\n  change?: number; \r\n  prefix?: string; \r\n  suffix?: string;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  iconColor: string;\r\n  bgGradient: string;\r\n  breakdown?: { label: string; value: number }[];\r\n}) {\r\n  const formatCurrency = (amount: number) =>\r\n    new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(Number.isFinite(amount) ? amount : 0);\r\n\r\n  const formatValue = (val: number | string) => {\r\n    if (typeof val === 'number') {\r\n      return prefix + val.toLocaleString() + suffix;\r\n    }\r\n    return prefix + val + suffix;\r\n  };\r\n  \r\n  return (\r\n    <div className={`bg-gradient-to-br ${bgGradient} rounded-xl p-6 border relative overflow-hidden`}>\r\n      <div className=\"absolute top-0 right-0 w-32 h-32 bg-black/10 rounded-full -translate-y-16 translate-x-16\" />\r\n      <div className=\"relative\">\r\n        <div className=\"flex items-center gap-3 mb-4\">\r\n          <div className={`p-3 ${iconColor} rounded-lg`}>\r\n            <Icon className=\"w-6 h-6\" />\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-sm font-medium text-gray-300\">{title}</h3>\r\n            {subtitle && <p className=\"text-xs text-gray-500\">{subtitle}</p>}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-baseline gap-2 mb-2\">\r\n          <span className=\"text-3xl font-bold text-white\">{formatValue(value)}</span>\r\n          {change !== undefined && change !== 0 && (\r\n            <span className={`text-sm flex items-center gap-1 ml-2 ${change > 0 ? 'text-green-400' : 'text-red-400'}`}>\r\n              {change > 0 ? <ArrowUpRight className=\"w-3 h-3\" /> : <ArrowDownRight className=\"w-3 h-3\" />}\r\n              {Math.abs(change).toFixed(1)}%\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {breakdown && breakdown.length > 0 && (\r\n          <div className=\"text-sm text-gray-400 space-y-1\">\r\n            {breakdown.map((item, idx) => (\r\n              <div key={idx} className=\"flex justify-between\">\r\n                <span>{item.label}:</span>\r\n                <span className=\"font-medium\">{formatCurrency(item.value)}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Status Badge Component\r\nfunction StatusBadge({ status }: { status: string }) {\r\n  const colors: Record<string, string> = {\r\n    pending: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',\r\n    processing: 'bg-blue-500/20 text-blue-400 border-blue-500/30',\r\n    shipped: 'bg-purple-500/20 text-purple-400 border-purple-500/30',\r\n    delivered: 'bg-green-500/20 text-green-400 border-green-500/30'\r\n  };\r\n\r\n  return (\r\n    <span className={`px-2 py-1 rounded-full text-xs font-medium border ${colors[status] || 'bg-gray-500/20 text-gray-400 border-gray-500/30'}`}>\r\n      {status}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default function SellerAnalyticsPage() {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [isReloading, setIsReloading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [overview, setOverview] = useState<SellerOverview | null>(null);\r\n  const [revenueData, setRevenueData] = useState<RevenueData | null>(null);\r\n  const [subscriberData, setSubscriberData] = useState<SubscriberAnalytics | null>(null);\r\n  const [productData, setProductData] = useState<ProductAnalytics | null>(null);\r\n  const [comparison, setComparison] = useState<PerformanceComparison | null>(null);\r\n  const [selectedPeriod, setSelectedPeriod] = useState<'daily' | 'weekly' | 'monthly' | 'yearly'>('monthly');\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'revenue' | 'products' | 'subscribers'>('overview');\r\n\r\n  // Fetch all analytics data\r\n  const fetchAnalytics = async (showLoading = true, clearCache = false, skipReloadingReset = false) => {\r\n    if (showLoading) setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Clear cache if refresh is requested\r\n      if (clearCache) {\r\n        analyticsService.clearCache();\r\n      }\r\n\r\n      const [overviewRes, revenueRes, subscriberRes, productRes, comparisonRes] = await Promise.all([\r\n        analyticsService.getSellerOverview(),\r\n        analyticsService.getRevenueData(selectedPeriod),\r\n        analyticsService.getSubscriberAnalytics(),\r\n        analyticsService.getProductAnalytics(),\r\n        analyticsService.getPerformanceComparison(30)\r\n      ]);\r\n\r\n      if (overviewRes.success && overviewRes.data) {\r\n        setOverview(overviewRes.data);\r\n      }\r\n      if (revenueRes.success && revenueRes.data) {\r\n        setRevenueData(revenueRes.data);\r\n      }\r\n      if (subscriberRes.success && subscriberRes.data) {\r\n        setSubscriberData(subscriberRes.data);\r\n      }\r\n      if (productRes.success && productRes.data) {\r\n        setProductData(productRes.data);\r\n      }\r\n      if (comparisonRes.success && comparisonRes.data) {\r\n        setComparison(comparisonRes.data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching analytics:', err);\r\n      setError('Failed to load analytics data');\r\n    } finally {\r\n      setLoading(false);\r\n      // Only reset isReloading if not skipped (for manual refresh handling)\r\n      if (!skipReloadingReset) {\r\n        setIsReloading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user || user.role !== 'seller') return;\r\n    fetchAnalytics();\r\n  }, [user, selectedPeriod]);\r\n\r\n  const handleRefresh = async () => {\r\n    setIsReloading(true);\r\n    \r\n    // Ensure minimum visible loading time for user feedback (1 second for better visibility)\r\n    const startTime = Date.now();\r\n    \r\n    await fetchAnalytics(false, true, true); // Pass true to skip automatic isReloading reset\r\n    \r\n    // Calculate remaining time to reach minimum duration\r\n    const elapsed = Date.now() - startTime;\r\n    const minimumDuration = 1000; // 1 second for clear visibility\r\n    const remainingTime = Math.max(0, minimumDuration - elapsed);\r\n    \r\n    // Wait for remaining time if needed\r\n    if (remainingTime > 0) {\r\n      await new Promise(resolve => setTimeout(resolve, remainingTime));\r\n    }\r\n    \r\n    setIsReloading(false);\r\n  };\r\n\r\n  // Calculate tier bonus display\r\n  const tierBonus = useMemo(() => {\r\n    if (!overview || !user) return 0;\r\n    return analyticsService.calculateTierBonus(overview.revenue.total, user.tier);\r\n  }, [overview, user]);\r\n\r\n  if (!user || user.role !== 'seller') {\r\n    return (\r\n      <BanCheck>\r\n        <RequireAuth role=\"seller\">\r\n          <main className=\"min-h-screen bg-black flex items-center justify-center\">\r\n            <div className=\"text-white\">Loading...</div>\r\n          </main>\r\n        </RequireAuth>\r\n      </BanCheck>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <BanCheck>\r\n        <RequireAuth role=\"seller\">\r\n          <main className=\"min-h-screen bg-black text-white p-8\">\r\n            <div className=\"max-w-md mx-auto bg-[#1a1a1a] rounded-xl shadow-lg p-8 border border-gray-800\">\r\n              <Loader2 className=\"w-16 h-16 text-[#ff950e] animate-spin mx-auto mb-4\" />\r\n              <h1 className=\"text-2xl font-bold text-center mb-4\">Loading Analytics</h1>\r\n              <p className=\"text-gray-400 text-center\">Calculating your performance metrics...</p>\r\n            </div>\r\n          </main>\r\n        </RequireAuth>\r\n      </BanCheck>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <BanCheck>\r\n        <RequireAuth role=\"seller\">\r\n          <main className=\"min-h-screen bg-black p-6\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n              <div className=\"bg-red-500/20 border border-red-500/30 rounded-lg p-4\">\r\n                <p className=\"text-red-400\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </RequireAuth>\r\n      </BanCheck>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BanCheck>\r\n      <RequireAuth role=\"seller\">\r\n        <main className=\"min-h-screen bg-black text-white py-6 px-4 sm:px-6 overflow-x-hidden\">\r\n          {/* Loading overlay for refresh */}\r\n          {isReloading && (\r\n            <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center\">\r\n              <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800 shadow-xl\">\r\n                <Loader2 className=\"w-8 h-8 text-[#ff950e] animate-spin mx-auto mb-3\" />\r\n                <p className=\"text-white font-medium\">Refreshing analytics...</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"max-w-7xl mx-auto\">\r\n            {/* Header */}\r\n            <div className=\"flex flex-col lg:flex-row lg:items-center justify-between mb-8 gap-4\">\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold text-[#ff950e] flex items-center gap-3\">\r\n                  <BarChart3 className=\"h-8 w-8\" />\r\n                  Analytics Dashboard\r\n                </h1>\r\n                <p className=\"text-gray-400 mt-1\">Track your sales performance and growth 📈</p>\r\n              </div>\r\n              \r\n              <button\r\n                onClick={handleRefresh}\r\n                disabled={isReloading}\r\n                className=\"px-4 py-2 bg-[#1a1a1a] border border-gray-800 hover:bg-[#252525] text-white rounded-lg text-sm font-medium transition-colors flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed w-fit\"\r\n              >\r\n                <RefreshCw className={`w-4 h-4 ${isReloading ? 'animate-spin' : ''}`} />\r\n                {isReloading ? 'Refreshing...' : 'Refresh Data'}\r\n              </button>\r\n            </div>\r\n\r\n            {/* Tab Navigation */}\r\n            <div className=\"border-b border-gray-800 mb-8\">\r\n              <nav className=\"flex space-x-8 overflow-x-auto\">\r\n                {['overview', 'revenue', 'products', 'subscribers'].map((tab) => (\r\n                  <button\r\n                    key={tab}\r\n                    onClick={() => setActiveTab(tab as any)}\r\n                    className={`py-2 px-1 border-b-2 font-medium text-sm capitalize transition-colors whitespace-nowrap ${\r\n                      activeTab === tab\r\n                        ? 'border-[#ff950e] text-[#ff950e]'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-300 hover:border-gray-700'\r\n                    }`}\r\n                  >\r\n                    {tab}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n\r\n            {/* Overview Tab */}\r\n            {activeTab === 'overview' && overview && (\r\n              <div className=\"space-y-8\">\r\n                {/* Key Metrics */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                  <MetricCard\r\n                    title=\"Total Revenue\"\r\n                    subtitle=\"All-time earnings\"\r\n                    value={overview.revenue.total}\r\n                    change={overview.revenue.monthlyGrowth}\r\n                    prefix=\"$\"\r\n                    icon={DollarSign}\r\n                    iconColor=\"bg-[#ff950e]\"\r\n                    bgGradient=\"from-[#ff950e]/20 to-[#ff6b00]/10 border-[#ff950e]/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Total Orders\"\r\n                    subtitle=\"Lifetime sales\"\r\n                    value={overview.orders.total}\r\n                    change={comparison ? comparison.changes.orders : undefined}\r\n                    icon={ShoppingBag}\r\n                    iconColor=\"bg-blue-500\"\r\n                    bgGradient=\"from-blue-500/20 to-blue-600/10 border-blue-500/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Active Listings\"\r\n                    subtitle=\"Currently available\"\r\n                    value={overview.listings.active}\r\n                    suffix={` of ${overview.listings.total}`}\r\n                    icon={Package}\r\n                    iconColor=\"bg-purple-500\"\r\n                    bgGradient=\"from-purple-500/20 to-purple-600/10 border-purple-500/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Subscribers\"\r\n                    subtitle=\"Monthly recurring\"\r\n                    value={overview.subscribers.count}\r\n                    suffix={overview.subscribers.count > 0 ? ` ($${overview.subscribers.subscriptionPrice || 25}/mo)` : ''}\r\n                    icon={Users}\r\n                    iconColor=\"bg-green-500\"\r\n                    bgGradient=\"from-green-500/20 to-green-600/10 border-green-500/30\"\r\n                    breakdown={overview.subscribers.count > 0 ? [\r\n                      { label: 'Total monthly', value: overview.subscribers.monthlyRevenue },\r\n                      { label: 'You keep (75%)', value: overview.subscribers.monthlyRevenue * 0.75 }\r\n                    ] : undefined}\r\n                  />\r\n                </div>\r\n\r\n                {/* Revenue & Order Status */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {/* Revenue Breakdown */}\r\n                  <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n                    <h3 className=\"text-lg font-bold text-white mb-4 flex items-center gap-2\">\r\n                      <TrendingUp className=\"h-5 w-5 text-[#ff950e]\" />\r\n                      Revenue Breakdown\r\n                    </h3>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"p-4 bg-[#252525] rounded-lg\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-400\">This Month</span>\r\n                          <span className=\"text-xl font-bold text-white\">${overview.revenue.thisMonth.toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"p-4 bg-[#252525] rounded-lg\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-400\">Last Month</span>\r\n                          <span className=\"text-xl font-bold text-white\">${overview.revenue.lastMonth.toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"p-4 bg-[#252525] rounded-lg\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-400\">This Week</span>\r\n                          <span className=\"text-xl font-bold text-white\">${overview.revenue.thisWeek.toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"p-4 bg-[#252525] rounded-lg\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-400\">Average Order Value</span>\r\n                          <span className=\"text-xl font-bold text-white\">${overview.revenue.averageOrderValue.toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                      {tierBonus > 0 && (\r\n                        <div className=\"p-4 bg-gradient-to-r from-yellow-500/20 to-orange-500/10 border border-yellow-500/30 rounded-lg\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Star className=\"h-4 w-4 text-yellow-400\" />\r\n                              <span className=\"text-gray-300\">Tier Bonus ({user.tier})</span>\r\n                            </div>\r\n                            <span className=\"text-xl font-bold text-yellow-400\">+${tierBonus.toLocaleString()}</span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Order Status */}\r\n                  <div className=\"bg-[#1a1a1a] rounded-xl p-6 border border-gray-800\">\r\n                    <h3 className=\"text-lg font-bold text-white mb-4 flex items-center gap-2\">\r\n                      <Activity className=\"h-5 w-5 text-[#ff950e]\" />\r\n                      Order Status\r\n                    </h3>\r\n                    <div className=\"space-y-4\">\r\n                      {[\r\n                        { status: 'pending', count: overview.orders.pending, color: 'yellow' },\r\n                        { status: 'processing', count: overview.orders.processing, color: 'blue' },\r\n                        { status: 'shipped', count: overview.orders.shipped, color: 'purple' },\r\n                        { status: 'delivered', count: overview.orders.delivered, color: 'green' }\r\n                      ].map(({ status, count, color }) => (\r\n                        <div key={status} className=\"p-4 bg-[#252525] rounded-lg\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <div className={`w-2 h-2 rounded-full bg-${color}-400`} />\r\n                              <span className=\"text-gray-300 capitalize\">{status}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <StatusBadge status={status} />\r\n                              <span className=\"text-xl font-bold text-white\">{count}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Recent Orders */}\r\n                <div className=\"bg-[#1a1a1a] rounded-xl border border-gray-800\">\r\n                  <div className=\"p-6 border-b border-gray-800\">\r\n                    <h3 className=\"text-lg font-bold text-white flex items-center gap-2\">\r\n                      <Clock className=\"h-5 w-5 text-[#ff950e]\" />\r\n                      Recent Orders\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                      <thead className=\"bg-[#252525]\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Product\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Buyer\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Price\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Status\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Type\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"divide-y divide-gray-800\">\r\n                        {overview.orders.recent.slice(0, 5).map((order, idx) => (\r\n                          <tr key={idx} className=\"hover:bg-[#252525] transition-colors\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">\r\n                              <SecureMessageDisplay content={order.title} allowBasicFormatting={false} />\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                              <SecureMessageDisplay content={order.buyer} allowBasicFormatting={false} />\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-400\">\r\n                              ${order.markedUpPrice.toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                              <StatusBadge status={order.shippingStatus} />\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                              {order.wasAuction ? (\r\n                                <span className=\"text-purple-400\">🔨 Auction</span>\r\n                              ) : (\r\n                                <span className=\"text-blue-400\">🛍️ Regular</span>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Revenue Tab */}\r\n            {activeTab === 'revenue' && revenueData && (\r\n              <div className=\"space-y-8\">\r\n                {/* Period Selector */}\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-lg font-bold text-white\">Revenue Analysis</h3>\r\n                  <div className=\"flex bg-[#1a1a1a] border border-gray-800 rounded-lg overflow-hidden\">\r\n                    {[\r\n                      { value: 'daily', label: 'Daily' },\r\n                      { value: 'weekly', label: 'Weekly' },\r\n                      { value: 'monthly', label: 'Monthly' },\r\n                      { value: 'yearly', label: 'Yearly' }\r\n                    ].map((option) => (\r\n                      <button\r\n                        key={option.value}\r\n                        onClick={() => setSelectedPeriod(option.value as any)}\r\n                        className={`px-3 py-2 text-sm font-medium transition-all whitespace-nowrap ${\r\n                          selectedPeriod === option.value\r\n                            ? 'bg-[#ff950e] text-black'\r\n                            : 'text-gray-300 hover:text-white hover:bg-[#252525]'\r\n                        }`}\r\n                      >\r\n                        {option.label}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Revenue Chart Component */}\r\n                <SellerRevenueChart \r\n                  data={revenueData.revenueData} \r\n                  period={selectedPeriod}\r\n                  isLoading={false}\r\n                />\r\n\r\n                {/* Revenue Data Table */}\r\n                <div className=\"bg-[#1a1a1a] rounded-xl border border-gray-800\">\r\n                  <div className=\"p-6 border-b border-gray-800\">\r\n                    <h3 className=\"text-lg font-bold text-white\">Revenue Details</h3>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                      <thead className=\"bg-[#252525]\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Period\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Revenue\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Orders\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Avg Order Value\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"divide-y divide-gray-800\">\r\n                        {revenueData.revenueData.slice(-10).reverse().map((data, idx) => (\r\n                          <tr key={idx} className=\"hover:bg-[#252525] transition-colors\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">\r\n                              {data._id}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-400\">\r\n                              ${data.totalRevenue.toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                              {data.orderCount}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                              ${data.avgOrderValue.toFixed(2)}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Products Tab */}\r\n            {activeTab === 'products' && productData && (\r\n              <div className=\"space-y-8\">\r\n                {/* Product Summary */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                  <MetricCard\r\n                    title=\"Total Products\"\r\n                    subtitle=\"In your catalog\"\r\n                    value={productData.summary.totalProducts}\r\n                    suffix={` (${productData.summary.activeProducts} active)`}\r\n                    icon={Package}\r\n                    iconColor=\"bg-purple-500\"\r\n                    bgGradient=\"from-purple-500/20 to-purple-600/10 border-purple-500/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Product Revenue\"\r\n                    subtitle=\"Total earned from products\"\r\n                    value={productData.summary.totalRevenue}\r\n                    prefix=\"$\"\r\n                    icon={DollarSign}\r\n                    iconColor=\"bg-[#ff950e]\"\r\n                    bgGradient=\"from-[#ff950e]/20 to-[#ff6b00]/10 border-[#ff950e]/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Conversion Rate\"\r\n                    subtitle=\"Views to purchases\"\r\n                    value={productData.summary.averageConversionRate}\r\n                    suffix=\"%\"\r\n                    icon={TrendingUp}\r\n                    iconColor=\"bg-green-500\"\r\n                    bgGradient=\"from-green-500/20 to-green-600/10 border-green-500/30\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Product Performance Table */}\r\n                <div className=\"bg-[#1a1a1a] rounded-xl border border-gray-800\">\r\n                  <div className=\"p-6 border-b border-gray-800\">\r\n                    <h3 className=\"text-lg font-bold text-white\">Product Performance</h3>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                      <thead className=\"bg-[#252525]\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Product\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Type\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Views\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Orders\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Revenue\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                            Conversion\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"divide-y divide-gray-800\">\r\n                        {productData.products.slice(0, 10).map((product) => (\r\n                          <tr key={product.id} className=\"hover:bg-[#252525] transition-colors\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                              <div>\r\n                                <div className=\"text-white\">\r\n                                  <SecureMessageDisplay content={product.title} allowBasicFormatting={false} />\r\n                                </div>\r\n                                <div className={`text-xs ${\r\n                                  product.status === 'active' ? 'text-green-400' : 'text-gray-500'\r\n                                }`}>\r\n                                  {product.status}\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                              {product.type === 'auction' ? (\r\n                                <span className=\"text-purple-400\">🔨 Auction</span>\r\n                              ) : (\r\n                                <span className=\"text-blue-400\">🛍️ Regular</span>\r\n                              )}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                              {product.views}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                              {product.orderCount}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-400\">\r\n                              ${product.revenue.toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                              {product.conversionRate}%\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Subscribers Tab */}\r\n            {activeTab === 'subscribers' && subscriberData && (\r\n              <div className=\"space-y-8\">\r\n                {/* Subscriber Metrics */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n                  <MetricCard\r\n                    title=\"Total Subscribers\"\r\n                    subtitle=\"Active subscriptions\"\r\n                    value={subscriberData.totalSubscribers}\r\n                    icon={Users}\r\n                    iconColor=\"bg-green-500\"\r\n                    bgGradient=\"from-green-500/20 to-green-600/10 border-green-500/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Monthly Recurring\"\r\n                    subtitle=\"Subscription revenue\"\r\n                    value={subscriberData.monthlyRecurringRevenue}\r\n                    prefix=\"$\"\r\n                    icon={TrendingUp}\r\n                    iconColor=\"bg-[#ff950e]\"\r\n                    bgGradient=\"from-[#ff950e]/20 to-[#ff6b00]/10 border-[#ff950e]/30\"\r\n                    breakdown={[\r\n                      { label: 'Total revenue', value: subscriberData.monthlyRecurringRevenue },\r\n                      { label: 'You keep (75%)', value: subscriberData.monthlyRecurringRevenue * 0.75 }\r\n                    ]}\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Avg Subscriber Value\"\r\n                    subtitle=\"Lifetime value\"\r\n                    value={subscriberData.averageSubscriberValue}\r\n                    prefix=\"$\"\r\n                    icon={Star}\r\n                    iconColor=\"bg-yellow-500\"\r\n                    bgGradient=\"from-yellow-500/20 to-yellow-600/10 border-yellow-500/30\"\r\n                  />\r\n                  <MetricCard\r\n                    title=\"Churn Rate\"\r\n                    subtitle=\"Monthly cancellations\"\r\n                    value={subscriberData.churnRate}\r\n                    suffix=\"%\"\r\n                    icon={Activity}\r\n                    iconColor=\"bg-red-500\"\r\n                    bgGradient=\"from-red-500/20 to-red-600/10 border-red-500/30\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Subscriber List */}\r\n                <div className=\"bg-[#1a1a1a] rounded-xl border border-gray-800\">\r\n                  <div className=\"p-6 border-b border-gray-800\">\r\n                    <h3 className=\"text-lg font-bold text-white flex items-center gap-2\">\r\n                      <Users className=\"h-5 w-5 text-[#ff950e]\" />\r\n                      Subscriber Details\r\n                    </h3>\r\n                  </div>\r\n                  {subscriberData.subscribers.length === 0 ? (\r\n                    <div className=\"p-12 text-center\">\r\n                      <Users className=\"h-12 w-12 text-gray-600 mx-auto mb-4\" />\r\n                      <p className=\"text-gray-400 text-lg\">No subscribers yet</p>\r\n                      <p className=\"text-gray-500 text-sm mt-2\">Keep creating great content to attract subscribers!</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"overflow-x-auto\">\r\n                      <table className=\"w-full\">\r\n                        <thead className=\"bg-[#252525]\">\r\n                          <tr>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                              Subscriber\r\n                            </th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                              Since\r\n                            </th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                              Total Orders\r\n                            </th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                              Total Spent\r\n                            </th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\r\n                              Last Order\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"divide-y divide-gray-800\">\r\n                          {subscriberData.subscribers.map((subscriber, idx) => (\r\n                            <tr key={idx} className=\"hover:bg-[#252525] transition-colors\">\r\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">\r\n                                <SecureMessageDisplay content={subscriber.username} allowBasicFormatting={false} />\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                                {new Date(subscriber.subscribedAt).toLocaleDateString()}\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                                {subscriber.totalOrders}\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-400\">\r\n                                ${subscriber.totalSpent.toFixed(2)}\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\r\n                                {subscriber.lastOrderDate \r\n                                  ? new Date(subscriber.lastOrderDate).toLocaleDateString()\r\n                                  : 'Never'\r\n                                }\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </RequireAuth>\r\n    </BanCheck>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}