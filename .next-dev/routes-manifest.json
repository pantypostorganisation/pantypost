{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "source": "/home",
      "destination": "/",
      "statusCode": 308,
      "regex": "^(?!/_next)/home(?:/)?$"
    },
    {
      "source": "/shop",
      "destination": "/browse",
      "statusCode": 308,
      "regex": "^(?!/_next)/shop(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/:path*",
      "headers": [
        {
          "key": "X-DNS-Prefetch-Control",
          "value": "on"
        },
        {
          "key": "Strict-Transport-Security",
          "value": "max-age=63072000; includeSubDomains; preload"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        },
        {
          "key": "X-Frame-Options",
          "value": "SAMEORIGIN"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "Permissions-Policy",
          "value": "camera=(), microphone=(), geolocation=(), payment=()"
        },
        {
          "key": "X-Permitted-Cross-Domain-Policies",
          "value": "none"
        },
        {
          "key": "Cross-Origin-Opener-Policy",
          "value": "same-origin"
        },
        {
          "key": "Cross-Origin-Resource-Policy",
          "value": "cross-origin"
        },
        {
          "key": "Cross-Origin-Embedder-Policy",
          "value": "unsafe-none"
        },
        {
          "key": "Content-Security-Policy",
          "value": "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' *.google-analytics.com *.googletagmanager.com *.sentry.io *.sentry-cdn.com https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' blob: data: https: *.cloudinary.com ; media-src 'self' https://res.cloudinary.com; connect-src 'self' *.google-analytics.com *.googletagmanager.com https://api.pantypost.com wss://api.pantypost.com *.sentry.io https://vitals.vercel-insights.com https://api.cloudinary.com https://res.cloudinary.com ; font-src 'self' https://fonts.gstatic.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content; worker-src 'self' blob:; manifest-src 'self'; upgrade-insecure-requests;"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/_next/static/:path*",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/_next/static(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/images/:path*",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/images(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/icons/:path*",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/icons(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/sw.js",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=0, must-revalidate"
        },
        {
          "key": "Service-Worker-Allowed",
          "value": "/"
        }
      ],
      "regex": "^/sw\\.js(?:/)?$"
    },
    {
      "source": "/manifest.json",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=86400"
        }
      ],
      "regex": "^/manifest\\.json(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [
      {
        "source": "/sitemap.xml",
        "destination": "/api/sitemap",
        "regex": "^/sitemap\\.xml(?:/)?$"
      }
    ],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/browse/[id]",
      "regex": "^/browse/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/browse/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/sellers/[username]",
      "regex": "^/sellers/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPusername": "nxtPusername"
      },
      "namedRegex": "^/sellers/(?<nxtPusername>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin/bans",
      "regex": "^/admin/bans(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/bans(?:/)?$"
    },
    {
      "page": "/admin/messages",
      "regex": "^/admin/messages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/messages(?:/)?$"
    },
    {
      "page": "/admin/reports",
      "regex": "^/admin/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/reports(?:/)?$"
    },
    {
      "page": "/admin/resolved",
      "regex": "^/admin/resolved(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/resolved(?:/)?$"
    },
    {
      "page": "/admin/verification-requests",
      "regex": "^/admin/verification\\-requests(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/verification\\-requests(?:/)?$"
    },
    {
      "page": "/admin/wallet-management",
      "regex": "^/admin/wallet\\-management(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/wallet\\-management(?:/)?$"
    },
    {
      "page": "/browse",
      "regex": "^/browse(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/browse(?:/)?$"
    },
    {
      "page": "/buyers/dashboard",
      "regex": "^/buyers/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/buyers/dashboard(?:/)?$"
    },
    {
      "page": "/buyers/messages",
      "regex": "^/buyers/messages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/buyers/messages(?:/)?$"
    },
    {
      "page": "/buyers/my-orders",
      "regex": "^/buyers/my\\-orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/buyers/my\\-orders(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/icon.png",
      "regex": "^/icon\\.png(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/icon\\.png(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/offline",
      "regex": "^/offline(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/offline(?:/)?$"
    },
    {
      "page": "/purchase-success",
      "regex": "^/purchase\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/purchase\\-success(?:/)?$"
    },
    {
      "page": "/reset-password-final",
      "regex": "^/reset\\-password\\-final(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reset\\-password\\-final(?:/)?$"
    },
    {
      "page": "/sellers/messages",
      "regex": "^/sellers/messages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sellers/messages(?:/)?$"
    },
    {
      "page": "/sellers/my-listings",
      "regex": "^/sellers/my\\-listings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sellers/my\\-listings(?:/)?$"
    },
    {
      "page": "/sellers/orders-to-fulfil",
      "regex": "^/sellers/orders\\-to\\-fulfil(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sellers/orders\\-to\\-fulfil(?:/)?$"
    },
    {
      "page": "/sellers/profile",
      "regex": "^/sellers/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sellers/profile(?:/)?$"
    },
    {
      "page": "/sellers/subscribers",
      "regex": "^/sellers/subscribers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sellers/subscribers(?:/)?$"
    },
    {
      "page": "/sellers/verify",
      "regex": "^/sellers/verify(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sellers/verify(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    },
    {
      "page": "/test-auth",
      "regex": "^/test\\-auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-auth(?:/)?$"
    },
    {
      "page": "/verify-reset-code",
      "regex": "^/verify\\-reset\\-code(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/verify\\-reset\\-code(?:/)?$"
    },
    {
      "page": "/wallet/admin",
      "regex": "^/wallet/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/wallet/admin(?:/)?$"
    },
    {
      "page": "/wallet/buyer",
      "regex": "^/wallet/buyer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/wallet/buyer(?:/)?$"
    },
    {
      "page": "/wallet/seller",
      "regex": "^/wallet/seller(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/wallet/seller(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}